IF NOT EXISTS (SELECT UpdateVersion FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUpdate] WHERE UpdateVersion = '07.08.00')
BEGIN
	INSERT {databaseOwner}[{objectQualifier}EasyDNNNewsUpdate]([UpdateVersion],[Finished],[InstallType]) VALUES(N'07.08.00',0, N'DNN')
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNews' and column_name = 'TitleTag')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNews] ADD TitleTag NVARCHAR(256) NULL
END
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsContentLocalization' and column_name = 'TitleTag')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] ADD TitleTag NVARCHAR(256) NULL
END
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsUserPremissionSettings' and column_name = 'AuthorAlias')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] ADD AuthorAlias BIT NOT NULL DEFAULT(1)
END
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsRolePremissionSettings' and column_name = 'AuthorAlias')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] ADD AuthorAlias BIT NOT NULL DEFAULT(1)
END
/* insert self portal sharing if exists */
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals]') AND type in (N'U'))
BEGIN
	;WITH SelfPortal AS (
		SELECT DISTINCT ps.[PortalIDTo]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSharing] AS ps
		WHERE ps.PortalIDTo NOT IN (
			SELECT DISTINCT [PortalIDTo]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSharing]
			WHERE PortalIDFrom = PortalIDTo
		)
	)
	INSERT INTO {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSharing] (PortalIDFrom, PortalIDTo)
	SELECT PortalIDTo, PortalIDTo FROM SelfPortal;
END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals](
	[ModuleID] [int] NOT NULL,
	[PortalID] [int] NOT NULL,
	[SharingPortalID] [int] NOT NULL,
 CONSTRAINT [PK_{objectQualifier}EasyDNNNewsModulePortals] PRIMARY KEY CLUSTERED 
(
	[ModuleID] ASC,
	[PortalID] ASC,
	[SharingPortalID] ASC
)WITH (STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsModulePortals_Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsModulePortals_Modules] FOREIGN KEY([ModuleID])
REFERENCES {databaseOwner}[{objectQualifier}Modules] ([ModuleID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsModulePortals_Modules]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsModulePortals_Modules]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsModulePortals_EasyDNNNewsPortalSharing]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsModulePortals_EasyDNNNewsPortalSharing] FOREIGN KEY([SharingPortalID], [PortalID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSharing] ([PortalIDFrom], [PortalIDTo])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsModulePortals_EasyDNNNewsPortalSharing]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsModulePortals_EasyDNNNewsPortalSharing]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsFilterCategories]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsFilterCategories] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsFilterCategories]
	@PortalID INT,
	@ModuleID INT,-- current module
	@CategoryFilterType TINYINT,
	@FillterSettingsSource TINYINT,
	@CategoryID INT = NULL, -- only one category
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@OuterModuleID INT = NULL
AS
SET NOCOUNT ON;
IF @NewsFilterCategories IS NOT NULL
	SELECT fc.KeyID
	FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc
ELSE IF @CategoryID IS NOT NULL -- filtrira se po jednoj kategoriji
	SELECT @CategoryID;
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	SELECT [CategoryID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
	WHERE PortalID IN (SELECT PortalID FROM #SharingPortals);
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SELECT [CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID;
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		;WITH hierarchy AS(
			SELECT cl.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE EXISTS (
				SELECT [CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
				WHERE ci.ModuleID = @OuterModuleID
					AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
			)
			AND cl.PortalID IN (SELECT PortalID FROM #SharingPortals)
			UNION ALL
			SELECT cl.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
		)
		SELECT DISTINCT CategoryID
		FROM hierarchy;
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID;
		ELSE -- module
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID;
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			SELECT DISTINCT CategoryID
			FROM hierarchy;
		END
		ELSE -- module
		BEGIN
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @ModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT PortalID FROM #SharingPortals)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			SELECT DISTINCT CategoryID
			FROM hierarchy;
		END
	END
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGroupsAndAuthors]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGroupsAndAuthors] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGroupsAndAuthors]
	@PortalID INT,
	@ModuleID INT,
	@NotInGroupPosition BIT, -- 0 gore, 1 dolje - uvjek false
	@DisplayAll BIT = 1,
	@RoleID INT = -1, -- -1 if role id is not main filter
	@FilterPortals NVARCHAR(MAX) = NULL
AS 
SET NOCOUNT ON;
DECLARE @PortalsTable TABLE (SharingPortalID INT NOT NULL PRIMARY KEY);

IF @FilterPortals IS NULL
	INSERT INTO @PortalsTable
	SELECT [SharingPortalID]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;
ELSE IF @FilterPortals <> '-1' -- force current portal
	INSERT INTO @PortalsTable
	SELECT fp.KeyID FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@FilterPortals) AS fp

IF NOT EXISTS(SELECT 1 FROM @PortalsTable)
	INSERT INTO @PortalsTable SELECT @PortalID;

DECLARE @i INT, @MaxI INT, @GroupID INT;
DECLARE @TableGroups Table (
	[PortalID] INT NOT NULL
	,[GroupID] INT NOT NULL
	,[GroupName] NVARCHAR(250) NOT NULL
	,[GroupInfo] NVARCHAR(4000) NULL
	,[GroupImage] NVARCHAR(1000) NULL
	,[FacebookURL] NVARCHAR(1000) NULL
	,[TwitterURL] NVARCHAR(1000) NULL
	,[GooglePlusURL] NVARCHAR(1000) NULL
	,[LinkedInURL] NVARCHAR(1000) NULL
	,[Parent] INT NULL
	,[Level] INT NOT NULL
	,[Position] INT NOT NULL
	,[GroupLinkType] tinyINT NOT NULL
	,[GroupURL] NVARCHAR(1000) NULL
	,[MyRowCount] Int IDENTITY(1,1));
DECLARE @resultTable Table (
	[OrderBy] INT IDENTITY(1,1)
	,[UserID] INT NULL
	,[UserPortalID] INT NULL
	,[Username] NVARCHAR(100) NULL
	,[FirstName] NVARCHAR(50) NULL
	,[LastName] NVARCHAR(50) NULL
	,[Email] NVARCHAR(256) NULL
	,[DisplayName] NVARCHAR(128) NULL
	,[AuthorProfileID] INT NULL
	,[ShortInfo] NVARCHAR(350) NULL
	,[ProfileImage] NVARCHAR(1000) NULL
	,[FacebookURL] NVARCHAR(1000) NULL
	,[TwitterURL] NVARCHAR(1000) NULL
	,[GooglePlusURL] NVARCHAR(1000) NULL
	,[LinkedInURL] NVARCHAR(1000) NULL
	,[DateAdded] DATETIME NULL
	,[Active] BIT NULL
	,[ArticleCount] INT NULL
	,[AuthorLinkType] TINYINT NULL
	,[AuthorURL] NVARCHAR(1000) NULL
	,[GroupID] INT NULL
	,[PortalID] INT NULL
	,[GroupName] NVARCHAR(250) NULL
	,[GroupInfo] NVARCHAR(4000) NULL
	,[GroupImage] NVARCHAR(1000) NULL
	,[GFacebookURL] NVARCHAR(1000) NULL
	,[GTwitterURL] NVARCHAR(1000) NULL
	,[GGooglePlusURL] NVARCHAR(1000) NULL
	,[GLinkedInURL] NVARCHAR(1000) NULL
	,[Parent] INT NULL
	,[Level] INT NULL
	,[Position] INT NULL
	,[GroupLinkType] TINYINT NULL
	,[GroupURL] NVARCHAR(1000) NULL);

IF @RoleID <> -1
BEGIN
	INSERT INTO @resultTable
		SELECT u.[UserID]
			,ap.PortalID AS UserPortalID
			,u.[Username]
			,u.[FirstName]
			,u.[LastName]
			,u.[Email]
			,u.[DisplayName]
			,ap.[AuthorProfileID]
			,ap.[ShortInfo]
			,ap.[ProfileImage]
			,ap.[FacebookURL]
			,ap.[TwitterURL]
			,ap.[GooglePlusURL]
			,ap.[LinkedInURL]
			,ap.[DateAdded]
			,ap.[Active]
			,ap.[ArticleCount]
			,ap.[LinkType] AS AuthorLinkType
			,ap.[AuthorURL]
			,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
		FROM {databaseOwner}[{objectQualifier}Users] AS u
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap ON u.UserID = ap.UserID
			INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.UserID = ap.UserID
			INNER JOIN @PortalsTable AS pt ON pt.SharingPortalID = ap.PortalID
		WHERE ur.RoleID = @RoleID
		ORDER BY u.DisplayName
END
ELSE
BEGIN
	IF @NotInGroupPosition = 0 -- autori koji nisu u grupi su gore
	BEGIN
		IF @DisplayAll = 1 -- prikazi sve autore
		BEGIN
			INSERT INTO @resultTable
			SELECT u.[UserID]
				,ap.PortalID AS UserPortalID
				,u.[Username]
				,u.[FirstName]
				,u.[LastName]
				,u.[Email]
				,u.[DisplayName]
				,ap.[AuthorProfileID]
				,ap.[ShortInfo]
				,ap.[ProfileImage]
				,ap.[FacebookURL]
				,ap.[TwitterURL]
				,ap.[GooglePlusURL]
				,ap.[LinkedInURL]
				,ap.[DateAdded]
				,ap.[Active]
				,ap.[ArticleCount]
				,ap.[LinkType] AS AuthorLinkType
				,ap.[AuthorURL]
				,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
			FROM {databaseOwner}[{objectQualifier}Users] AS u
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap ON u.UserID = ap.UserID
				INNER JOIN @PortalsTable AS pt ON pt.SharingPortalID = ap.PortalID
			WHERE ap.AuthorProfileID NOT IN (
				SELECT AuthorProfileID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems]
			)
			ORDER BY u.DisplayName
		END
		ELSE
		BEGIN
			INSERT INTO @resultTable
			SELECT u.[UserID]
				,ap.PortalID AS UserPortalID
				,u.[Username]
				,u.[FirstName]
				,u.[LastName]
				,u.[Email]
				,u.[DisplayName]
				,ap.[AuthorProfileID]
				,ap.[ShortInfo]
				,ap.[ProfileImage]
				,ap.[FacebookURL]
				,ap.[TwitterURL]
				,ap.[GooglePlusURL]
				,ap.[LinkedInURL]
				,ap.[DateAdded]
				,ap.[Active]
				,ap.[ArticleCount]
				,ap.[LinkType] AS AuthorLinkType
				,ap.[AuthorURL]
				,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
			FROM {databaseOwner}[{objectQualifier}Users] AS u
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap ON u.UserID = ap.UserID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] as mai ON mai.UserID = ap.UserID AND mai.ModuleID = @ModuleID
				INNER JOIN @PortalsTable AS pt ON pt.SharingPortalID = ap.PortalID
			WHERE ap.AuthorProfileID NOT IN (
				SELECT AuthorProfileID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] as agi
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] as mgi ON agi.GroupId = mgi.GroupID
				WHERE mgi.ModuleID = @ModuleID)
			ORDER BY u.DisplayName
		END
	END
	
	IF @DisplayAll = 1
	BEGIN
		INSERT INTO @TableGroups
		SELECT nag.[PortalID]
			,nag.[GroupID]
			,nag.[GroupName]
			,nag.[GroupInfo]
			,nag.[GroupImage]
			,nag.[FacebookURL]
			,nag.[TwitterURL]
			,nag.[GooglePlusURL]
			,nag.[LinkedInURL]
			,nag.[Parent]
			,nag.[Level]
			,nag.[Position]
			,nag.[LinkType] as GroupLinkType
			,nag.[GroupURL]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorGroups] AS nag
		WHERE nag.[GroupID] IN (
			SELECT DISTINCT nag.GroupID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorGroups] as nag
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON agi.GroupID = nag.GroupID
				INNER JOIN @PortalsTable AS pt ON pt.SharingPortalID = nag.PortalID
		)
		ORDER BY nag.Position;
	END
	ELSE
	BEGIN
		INSERT INTO @TableGroups
		SELECT DISTINCT nag.[PortalID]
			,nag.[GroupID]
			,nag.[GroupName]
			,nag.[GroupInfo]
			,nag.[GroupImage]
			,nag.[FacebookURL]
			,nag.[TwitterURL]
			,nag.[GooglePlusURL]
			,nag.[LinkedInURL]
			,nag.[Parent]
			,nag.[Level]
			,nag.[Position]
			,nag.[LinkType] as GroupLinkType
			,nag.[GroupURL]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorGroups] AS nag
		WHERE nag.[GroupID] IN (
			SELECT DISTINCT nag.GroupID
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorGroups] as nag
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON agi.GroupID = nag.GroupID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON nag.GroupID = mgi.GroupID
				INNER JOIN @PortalsTable AS pt ON pt.SharingPortalID = nag.PortalID
			WHERE mgi.ModuleID = @ModuleID
		)
		ORDER BY nag.Position;
	END
	
	SELECT @MaxI = @@RowCount;
	SELECT @i = 0;
    WHILE @i < @MaxI
	BEGIN
		SET @i = @i + 1;
		SELECT @GroupID = GroupID FROM @TableGroups Where MyRowCount = @i
		
		INSERT INTO @resultTable
		SELECT
			NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
			,[GroupID]
			,[PortalID]
			,[GroupName]
			,[GroupInfo]
			,[GroupImage]
			,[FacebookURL]
			,[TwitterURL]
			,[GooglePlusURL]
			,[LinkedInURL]
			,[Parent]
			,[Level]
			,[Position]
			,[GroupLinkType]
			,[GroupURL]
		FROM @TableGroups WHERE MyRowCount = @i
		
		INSERT INTO @resultTable
		SELECT u.[UserID]
			,ap.PortalID AS UserPortalID
			,u.[Username]
			,u.[FirstName]
			,u.[LastName]
			,u.[Email]
			,u.[DisplayName]
			,ap.[AuthorProfileID]
			,ap.[ShortInfo]
			,ap.[ProfileImage]
			,ap.[FacebookURL]
			,ap.[TwitterURL]
			,ap.[GooglePlusURL]
			,ap.[LinkedInURL]
			,ap.[DateAdded]
			,ap.[Active]
			,ap.[ArticleCount]
			,ap.[LinkType] AS AuthorLinkType
			,ap.[AuthorURL]
			,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
		FROM {databaseOwner}[{objectQualifier}Users] AS u
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap ON u.UserID = ap.UserID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON agi.AuthorProfileID = ap.AuthorProfileID
		WHERE agi.GroupID = @GroupID
		ORDER BY u.DisplayName
	END
	IF @NotInGroupPosition = 1
	BEGIN
		IF @DisplayAll = 1
		BEGIN
			INSERT INTO @resultTable
			SELECT u.[UserID]
				,ap.PortalID AS UserPortalID
				,u.[Username]
				,u.[FirstName]
				,u.[LastName]
				,u.[Email]
				,u.[DisplayName]
				,ap.[AuthorProfileID]
				,ap.[ShortInfo]
				,ap.[ProfileImage]
				,ap.[FacebookURL]
				,ap.[TwitterURL]
				,ap.[GooglePlusURL]
				,ap.[LinkedInURL]
				,ap.[DateAdded]
				,ap.[Active]
				,ap.[ArticleCount]
				,ap.[LinkType] AS AuthorLinkType
				,ap.[AuthorURL]
				,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
			FROM {databaseOwner}[{objectQualifier}Users] AS u
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap ON u.UserID = ap.UserID
				INNER JOIN @PortalsTable AS pt ON pt.SharingPortalID = ap.PortalID
			WHERE ap.AuthorProfileID NOT IN (
				SELECT AuthorProfileID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems]
			)
			ORDER BY u.DisplayName
		END
		ELSE
		BEGIN
			INSERT INTO @resultTable
				SELECT u.[UserID]
					,ap.PortalID AS UserPortalID
					,u.[Username]
					,u.[FirstName]
					,u.[LastName]
					,u.[Email]
					,u.[DisplayName]
					,ap.[AuthorProfileID]
					,ap.[ShortInfo]
					,ap.[ProfileImage]
					,ap.[FacebookURL]
					,ap.[TwitterURL]
					,ap.[GooglePlusURL]
					,ap.[LinkedInURL]
					,ap.[DateAdded]
					,ap.[Active]
					,ap.[ArticleCount]
					,ap.[LinkType] AS AuthorLinkType
					,ap.[AuthorURL]
					,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
				FROM {databaseOwner}[{objectQualifier}Users] AS u
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap ON u.UserID = ap.UserID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] as mai ON mai.UserID = ap.UserID AND mai.ModuleID = @ModuleID
					INNER JOIN @PortalsTable AS pt ON pt.SharingPortalID = ap.PortalID
				WHERE ap.AuthorProfileID NOT IN (
					SELECT AuthorProfileID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] as agi
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] as mgi ON agi.GroupId = mgi.GroupID
					WHERE mgi.ModuleID = @ModuleID
				)
				ORDER BY u.DisplayName
	  END
	END
 END 
 
 SELECT * FROM @resultTable ORDER BY OrderBy;
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsPermissions]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsPermissions] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsPermissions]
    @UserID INT,
    @PortalID INT,
    @ModuleID INT
AS 
SET NOCOUNT ON;
DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @sqlselect VARCHAR(MAX);
DECLARE @paramList NVARCHAR(200);
DECLARE @PortalOrModule VARCHAR(64);

IF @ModuleID IS NULL
	SET @PortalOrModule = N'IS NULL '
ELSE
	SET @PortalOrModule = N'= @ModuleID '

SET @paramList = N'@UserID INT,@PortalID INT,@ModuleID INT'
SET @sqlcommand = N'
SET NOCOUNT ON;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); '

SET @sqlselect = N'
SELECT
	CAST(MAX(CAST(ApproveArticles AS TINYINT)) AS BIT) AS ApproveArticles,
	CAST(MAX(CAST(DocumentUpload AS TINYINT)) AS BIT) AS DocumentUpload,
	CAST(MAX(CAST(DocumentDownload AS TINYINT)) AS BIT) AS DocumentDownload,
	CAST(MAX(CAST(AddEditCategories AS TINYINT)) AS BIT) AS AddEditCategories,
	CAST(MAX(CAST(AllowToComment AS TINYINT)) AS BIT) AS AllowToComment,
	CAST(MAX(CAST(ApproveComments AS TINYINT)) AS BIT) AS ApproveComments,
	CAST(MAX(CAST(ViewPaidContent AS TINYINT)) AS BIT) AS ViewPaidContent,
	CAST(MAX(CAST(ShowSharedGallery AS TINYINT)) AS BIT) AS ShowSharedGallery,
	CAST(MAX(CAST(ShowCustomGallery AS TINYINT)) AS BIT) AS ShowCustomGallery,
	CAST(MAX(CAST(AddArticleToAll AS TINYINT)) AS BIT) AS AddArticleToAll,
	CAST(MAX(CAST(ShowAllCategories AS TINYINT)) AS BIT) AS ShowAllCategories,
	CAST(MAX(CAST(AddPerArticle AS TINYINT)) AS BIT) AS AddPerArticle,
	CAST(MAX(CAST(PostToSocialNetwork AS TINYINT)) AS BIT) AS PostToSocialNetwork,
	CAST(MAX(CAST([EventRegistration] AS TINYINT)) AS BIT) AS EventRegistration,
	CAST(MAX(CAST(SubTitle AS TINYINT)) AS BIT) AS SubTitle,
	CAST(MAX(CAST(SEO AS TINYINT)) AS BIT) AS SEO, 
	CAST(MAX(CAST(Summary AS TINYINT)) AS BIT) AS Summary, 
	CAST(MAX(CAST([Text] AS TINYINT)) AS BIT) AS [Text], 
	CAST(MAX(CAST([Page] AS TINYINT)) AS BIT) AS [Page], 
	CAST(MAX(CAST([File] AS TINYINT)) AS BIT) AS [File], 
	CAST(MAX(CAST([Link] AS TINYINT)) AS BIT) AS [Link], 
	CAST(MAX(CAST([None] AS TINYINT)) AS BIT) AS [None], 
	CAST(MAX(CAST([Tags] AS TINYINT)) AS BIT) AS [Tags], 
	CAST(MAX(CAST([ArticleGallery] AS TINYINT)) AS BIT) AS [ArticleGallery], 
	CAST(MAX(CAST([GoogleMap] AS TINYINT)) AS BIT) AS [GoogleMap], 
	CAST(MAX(CAST([ChangeTemplate] AS TINYINT)) AS BIT) AS [ChangeTemplate], 
	CAST(MAX(CAST([Events] AS TINYINT)) AS BIT) AS [Events],
	CAST(MAX(CAST([EnabledEventRegistration] AS TINYINT)) AS BIT) AS EnabledEventRegistration,
	CAST(MAX(CAST([Featured] AS TINYINT)) AS BIT) AS [Featured], 
	CAST(MAX(CAST([AllowComments] AS TINYINT)) AS BIT) AS [AllowComments],
	CAST(MAX(CAST([ContactEmail] AS TINYINT)) AS BIT) AS [ContactEmail],
	CAST(MAX(CAST([AuthorAlias] AS TINYINT)) AS BIT) AS [AuthorAlias], 
	CAST(MAX(CAST([PublishExpire] AS TINYINT)) AS BIT) AS [PublishExpire],
	CAST(MAX(CAST([CustomFields] AS TINYINT)) AS BIT) AS [CustomFields],
	CAST(MAX(CAST([Links] AS TINYINT)) AS BIT) AS [Links],
	CASE WHEN MIN(ArticleLimit) = MAX(ArticleLimit) THEN NULL ELSE MAX(ArticleLimit) END AS ArticleLimit,
	CASE WHEN MIN(ImageLimit) = MAX(ImageLimit) THEN NULL ELSE MAX(ImageLimit) END AS ImageLimit,
	CASE WHEN MIN(VideoLimit) = MAX(VideoLimit) THEN NULL ELSE MAX(VideoLimit) END AS VideoLimit,
	CASE WHEN MIN(AudioLimit) = MAX(AudioLimit) THEN NULL ELSE MAX(AudioLimit) END AS AudioLimit,
	CASE WHEN MIN(DocumentLimit) = MAX(DocumentLimit) THEN NULL ELSE MAX(DocumentLimit) END AS DocumentLimit,
	CASE WHEN MIN(LinkLimit) = MAX(LinkLimit) THEN NULL ELSE MAX(LinkLimit) END AS LinkLimit,
	CASE WHEN MIN(TagLimit) = MAX(TagLimit) THEN NULL ELSE MAX(TagLimit) END AS TagLimit,
	CASE WHEN MIN(CategoryLimit) = MAX(CategoryLimit) THEN NULL ELSE MAX(CategoryLimit) END AS CategoryLimit,
	CASE WHEN MIN(ExpireDateLimit) = MAX(ExpireDateLimit) THEN NULL ELSE MAX(ExpireDateLimit) END AS ExpireDateLimit ';

IF @UserID = -1
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	IF EXISTS(
		SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
		WHERE rps.RoleID IS NULL
			AND rps.PortalID = @PortalID
			AND rps.ModuleID ' + @PortalOrModule + N') '

	SET @sqlcommand = @sqlcommand + @sqlselect + N'
	FROM (
	SELECT [ApproveArticles],[DocumentUpload],[DocumentDownload],[AddEditCategories],[AllowToComment],[ApproveComments],[ViewPaidContent],[ShowSharedGallery],[ShowCustomGallery],[AddArticleToAll],[ShowAllCategories],[AddPerArticle],[PostToSocialNetwork],[EventRegistration],
		0 AS [SubTitle],0 AS [SEO],0 AS [Summary],0 AS [Text],0 AS [Page],0 AS [File],0 AS [Link],0 AS [None],0 AS [Tags],0 AS [ArticleGallery],0 AS [GoogleMap],0 AS [ChangeTemplate],0 AS [Events],0 AS [EnabledEventRegistration],0 AS [AllowComments],0 AS [ContactEmail],0 AS [AuthorAlias], 0 AS [Featured],0 AS [PublishExpire],0 AS [CustomFields],0 AS [Links],
		-1 AS ArticleLimit, -1 AS ImageLimit,-1 AS VideoLimit,-1 AS AudioLimit,-1 AS DocumentLimit,-1 AS LinkLimit,-1 AS TagLimit,-1 AS CategoryLimit,-1 AS ExpireDateLimit
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
	WHERE rps.RoleID IS NULL
		AND rps.PortalID = @PortalID
		AND rps.ModuleID ' + @PortalOrModule	

	SET @sqlcommand = @sqlcommand + N'
	UNION ALL
	SELECT 0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		[SubTitle],[SEO],[Summary],[Text],[Page],[File],[Link],[None],[Tags],[ArticleGallery],[GoogleMap],[ChangeTemplate],[Events],[EnabledEventRegistration],[AllowComments],[ContactEmail],[AuthorAlias],[Featured],[PublishExpire],[CustomFields],[Links],
		ISNULL([ArticleLimit],-1) AS ArticleLimit,ISNULL([ImageLimit],-1) AS ImageLimit,ISNULL([VideoLimit],-1) AS VideoLimit,ISNULL([AudioLimit],-1) AS AudioLimit,ISNULL([DocumentLimit],-1) AS DocumentLimit,ISNULL([LinkLimit],-1) AS LinkLimit,ISNULL([TagLimit],-1) AS TagLimit,ISNULL([CategoryLimit],-1) AS CategoryLimit,ISNULL([ExpireDateLimit],-1) AS ExpireDateLimit
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
	WHERE (rps.[AddArticleToAll] = 1 OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS atc WHERE atc.PremissionSettingsID = rps.PremissionSettingsID))
		AND rps.RoleID IS NULL
		AND rps.PortalID = @PortalID
		AND rps.ModuleID ' + @PortalOrModule
		
	SET @sqlcommand = @sqlcommand + N') AS AllPermissionsByUser;'
END
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	DECLARE @UserInRoles TABLE (RoleID INT NOT NULL PRIMARY KEY);
	INSERT INTO @UserInRoles
	SELECT DISTINCT RoleID
	FROM {databaseOwner}[{objectQualifier}UserRoles]
	WHERE UserID = @UserID
		AND (ExpiryDate IS NULL OR ExpiryDate > @CurrentDate)
		AND (EffectiveDate IS NULL OR EffectiveDate < @CurrentDate); ';

	SET @sqlcommand = @sqlcommand + N'
	IF EXISTS(
		SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
		WHERE rps.RoleID IN (SELECT RoleID FROM @UserInRoles)
			AND rps.PortalID = @PortalID
			AND rps.ModuleID ' + @PortalOrModule
		
	SET @sqlcommand = @sqlcommand + N'
	)
	OR EXISTS(
		SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
		WHERE ups.UserID = @UserID
			AND ups.PortalID = @PortalID
			AND ups.ModuleID ' + @PortalOrModule

	SET @sqlcommand = @sqlcommand + N'
	) '
	SET @sqlcommand = @sqlcommand + @sqlselect + N'
	FROM (
	SELECT [ApproveArticles],[DocumentUpload],[DocumentDownload],[AddEditCategories],[AllowToComment],[ApproveComments],[ViewPaidContent],[ShowSharedGallery],[ShowCustomGallery],[AddArticleToAll],[ShowAllCategories],[AddPerArticle],[PostToSocialNetwork],[EventRegistration],
		0 AS [SubTitle],0 AS [SEO],0 AS [Summary],0 AS [Text],0 AS [Page],0 AS [File],0 AS [Link],0 AS [None],0 AS [Tags],0 AS [ArticleGallery],0 AS [GoogleMap],0 AS [ChangeTemplate],0 AS [Events],0 AS [EnabledEventRegistration],0 AS [AllowComments],0 AS [ContactEmail],0 AS [AuthorAlias], 0 AS [Featured],0 AS [PublishExpire],0 AS [CustomFields],0 AS [Links],
		-1 AS ArticleLimit, -1 AS ImageLimit,-1 AS VideoLimit,-1 AS AudioLimit,-1 AS DocumentLimit,-1 AS LinkLimit,-1 AS TagLimit,-1 AS CategoryLimit,-1 AS ExpireDateLimit
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
	WHERE rps.RoleID IN (SELECT RoleID FROM @UserInRoles)
		AND rps.PortalID = @PortalID
		AND rps.ModuleID ' + @PortalOrModule
		
	SET @sqlcommand = @sqlcommand + N'
	UNION ALL
	SELECT [ApproveArticles],[DocumentUpload],[DocumentDownload],[AddEditCategories],[AllowToComment],[ApproveComments],[ViewPaidContent],[ShowSharedGallery],[ShowCustomGallery],[AddArticleToAll],[ShowAllCategories],[AddPerArticle],[PostToSocialNetwork],[EventRegistration],
		0 AS [SubTitle],0 AS [SEO],0 AS [Summary],0 AS [Text],0 AS [Page],0 AS [File],0 AS [Link],0 AS [None],0 AS [Tags],0 AS [ArticleGallery],0 AS [GoogleMap],0 AS [ChangeTemplate],0 AS [Events],0 AS [EnabledEventRegistration],0 AS [AllowComments],0 AS [ContactEmail],0 AS [AuthorAlias], 0 AS [Featured],0 AS [PublishExpire],0 AS [CustomFields],0 AS [Links],
		-1 AS ArticleLimit, -1 AS ImageLimit,-1 AS VideoLimit,-1 AS AudioLimit,-1 AS DocumentLimit,-1 AS LinkLimit,-1 AS TagLimit,-1 AS CategoryLimit,-1 AS ExpireDateLimit
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
	WHERE ups.UserID = @UserID
		AND ups.PortalID = @PortalID
		AND ups.ModuleID ' + @PortalOrModule

	SET @sqlcommand = @sqlcommand + N'
	UNION ALL
	SELECT 0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		[SubTitle],[SEO],[Summary],[Text],[Page],[File],[Link],[None],[Tags],[ArticleGallery],[GoogleMap],[ChangeTemplate],[Events],[EnabledEventRegistration],[AllowComments],[ContactEmail],[AuthorAlias],[Featured],[PublishExpire],[CustomFields],[Links],
		ISNULL([ArticleLimit],-1) AS ArticleLimit,ISNULL([ImageLimit],-1) AS ImageLimit,ISNULL([VideoLimit],-1) AS VideoLimit,ISNULL([AudioLimit],-1) AS AudioLimit,ISNULL([DocumentLimit],-1) AS DocumentLimit,ISNULL([LinkLimit],-1) AS LinkLimit,ISNULL([TagLimit],-1) AS TagLimit,ISNULL([CategoryLimit],-1) AS CategoryLimit,ISNULL([ExpireDateLimit],-1) AS ExpireDateLimit
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
	WHERE (rps.[AddArticleToAll] = 1 OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS atc WHERE atc.PremissionSettingsID = rps.PremissionSettingsID))
		AND rps.RoleID IN (SELECT RoleID FROM @UserInRoles)
		AND rps.PortalID = @PortalID
		AND rps.ModuleID ' + @PortalOrModule

	SET @sqlcommand = @sqlcommand + N'
	UNION ALL
	SELECT 0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		[SubTitle],[SEO],[Summary],[Text],[Page],[File],[Link],[None],[Tags],[ArticleGallery],[GoogleMap],[ChangeTemplate],[Events],[EnabledEventRegistration],[AllowComments],[ContactEmail],[AuthorAlias],[Featured],[PublishExpire],[CustomFields],[Links],
		ISNULL([ArticleLimit],-1) AS ArticleLimit,ISNULL([ImageLimit],-1) AS ImageLimit,ISNULL([VideoLimit],-1) AS VideoLimit,ISNULL([AudioLimit],-1) AS AudioLimit,ISNULL([DocumentLimit],-1) AS DocumentLimit,ISNULL([LinkLimit],-1) AS LinkLimit,ISNULL([TagLimit],-1) AS TagLimit,ISNULL([CategoryLimit],-1) AS CategoryLimit,ISNULL([ExpireDateLimit],-1) AS ExpireDateLimit
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups
	WHERE (ups.[AddArticleToAll] = 1 OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS atc WHERE atc.PremissionSettingsID = ups.PremissionSettingsID))
		AND ups.UserID = @UserID
		AND ups.PortalID = @PortalID
		AND ups.ModuleID ' + @PortalOrModule
		
	SET @sqlcommand = @sqlcommand + N') AS AllPermissionsByUser;'
END

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@UserID = @UserID
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsUserRoles]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsUserRoles] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsUserRoles]
	@PortalID INT,
	@UserID INT,
	@IsPortalSharing BIT
AS
SET NOCOUNT ON;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

IF @IsPortalSharing = 0
	SELECT DISTINCT r.[RoleID]
	FROM {databaseOwner}[{objectQualifier}Roles] AS r
	INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
	WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
		AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
		AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);
ELSE
	SELECT DISTINCT r.[RoleID]
	FROM {databaseOwner}[{objectQualifier}Roles] AS r
	INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
	INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.PortalID = r.PortalID
	WHERE ur.UserID = @UserID
		AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
		AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsViewCategoriesWithFilter]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsViewCategoriesWithFilter] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsViewCategoriesWithFilter]
	@PortalID INT,
	@ModuleID INT,-- current module
	@IsPortalSharing BIT,
	@CategoryFilterType TINYINT
AS
SET NOCOUNT ON;
IF @CategoryFilterType = 0 -- 0 All categories
	SELECT [CategoryID] FROM #ViewCategories;
ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	SELECT vc.[CategoryID] FROM #ViewCategories AS vc
	WHERE EXISTS (SELECT mci.CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci WHERE mci.CategoryID = vc.CategoryID AND mci.ModuleID = @ModuleID)
ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
IF @IsPortalSharing = 0
BEGIN
	;WITH hierarchy AS(
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
			WHERE ci.ModuleID = @ModuleID
				AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
		)
		AND cl.PortalID = @PortalID
		UNION ALL
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
	)
	SELECT DISTINCT nfc.CategoryID
	FROM hierarchy AS nfc
	WHERE EXISTS (SELECT vc.CategoryID FROM #ViewCategories AS vc WHERE vc.CategoryID = nfc.CategoryID);
END
ELSE
BEGIN
	;WITH hierarchy AS(
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		WHERE EXISTS (
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
			WHERE ci.ModuleID = @ModuleID
				AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
		)
		AND cl.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
		UNION ALL
		SELECT cl.[CategoryID]
		FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
		INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
	)
	SELECT DISTINCT nfc.CategoryID
	FROM hierarchy AS nfc
	WHERE EXISTS (SELECT vc.CategoryID FROM #ViewCategories AS vc WHERE vc.CategoryID = nfc.CategoryID);
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchAllContentWithoutRecurring]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchAllContentWithoutRecurring] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchAllContentWithoutRecurring]
	@PortalID INT, -- current Portal
	@ModuleID INT, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID INT,
	@OrderBy NVARCHAR(20) = 'PublishDate DESC',
	@ItemsFrom INT = 1,
	@ItemsTo INT = 5,
	@ShowAllAuthors BIT = 1, -- gleda se filtriranje autora po modulu ili portalu
	@FilterByAuthor INT = 0, -- ako se selektiran jedan autor
	@FilterByGroupID INT = 0, -- ako je selektirana grupa
	@FilterByDNNUserID INT = 0, -- filter by some UserID / not current user ID
	@FilterByDNNGroupID INT = 0, -- filter by DNNGroup/RoleID / not profile GroupID
	@EditOnlyAsOwner BIT = 0, -- news settings
	@UserCanApprove BIT = 0, -- news settings
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@Perm_ViewAllCategores BIT = 0, -- permission settings View all categories
	@Perm_EditAllCategores BIT = 0, -- permission settings Edit all categories
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1, -- 0 All categories, 1 - SELECTion, 2 - AutoAdd
	@PermissionSettingsSource BIT = 1, -- 1 portal, 0 module
	@FillterSettingsSource BIT = 1, -- 1 portal, 0 module
	
	-- ODNOSI SE NA SEARCH UNUTAR SEARCH MODULA
	@OuterPermissionSource TINYINT= 0, -- 0 none, 1 portal, 2 module
	@OuterPermissionID INT = 0,
	@OuterModuleID INT = NULL,
	
	@SearchType TINYINT = 3,
	@SearchCondition NVARCHAR(300),
	@SearchModulePermissions BIT = 0,
	@HideUnlocalizedItems BIT = 0,
	-- ovo je samo za evente
	@DateRangeType TINYINT = 0, -- moze biti 2 (startdate) i 0 (show all) - 1 ne moze biti jer nema pretrazivanja po from to date
	@StartDate DATETIME = NULL
AS
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();
DECLARE @SearchTable TABLE (Words NVARCHAR(100) NOT NULL);
BEGIN
	DECLARE @word NVARCHAR(100), @PosWord INT
	SET @SearchCondition = LTRIM(RTRIM(@SearchCondition))+ ':'
	SET @PosWord = CHARINDEX(':', @SearchCondition, 1)
	IF REPLACE(@SearchCondition, ':', '') <> ''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SearchCondition, @PosWord - 1)))
			IF @word <> ''
			BEGIN
				SET @word = replace( 
							replace( 
							replace( 
							replace( @word
							,    '\', '\\' )
							,    '%', '\%' )
							,    '_', '\_' )
							,    '[', '\[' )
				INSERT INTO @SearchTable (Words) VALUES ('% '+@word+'%')
				INSERT INTO @SearchTable (Words) VALUES (@word+'%')
			END
			SET @SearchCondition = RIGHT(@SearchCondition, LEN(@SearchCondition) - @PosWord)
			SET @PosWord = CHARINDEX(':', @SearchCondition, 1)
		END
	END
END

DECLARE @EditPermission TINYINT;
SET @EditPermission = 0;
DECLARE @UserInRoles TABLE (RoleID INT NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM {databaseOwner}[{objectQualifier}UserRoles] AS ur INNER JOIN {databaseOwner}[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);
DECLARE @UserViewCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions
DECLARE @UserEditCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions
DECLARE @UserViewCategoriesWithFilter TABLE (CategoryID INT NOT NULL PRIMARY KEY); -- all categories which user can see based on permissions and Module filter
DECLARE @FiltredByCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY); -- all categories that are filtred by module or portal

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1
BEGIN
	INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
END
ELSE IF @SearchModulePermissions = 1 -- ovaj dio se odnosi na dozvole ako se pristupa iz satelitskog modula
BEGIN
	IF @OuterPermissionSource = 0
	BEGIN
		INSERT INTO @UserViewCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @UserID = -1
	BEGIN
		IF @OuterPermissionSource = 1 -- portal
		BEGIN
		INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE IF @OuterPermissionSource = 2 -- module
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @OuterPermissionID AND rps.RoleID IS NULL;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL;
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserViewCategories
			SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @OuterModuleID
			UNION
			SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @OuterPermissionID;
		END
	END 
END
ELSE IF @UserID = -1
BEGIN	
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM  {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID  AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
	END
	ELSE -- by module
	BEGIN
	INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID AND rps.RoleID IS NULL;
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upsc.[CategoryID];
	END
	ELSE -- by module
	BEGIN
		INSERT INTO @UserViewCategories
		SELECT rpsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpsc.[CategoryID]
		UNION
		SELECT upsc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upsc.[CategoryID];
	END
END

IF @OuterModuleID IS NOT NULL -- ovaj dio se odnosi na filter kategorija iz satelitskog modula
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter 
		SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
			
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID;
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		;WITH hierarchy AS(
			SELECT [CategoryID], [ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
			WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
			UNION ALL
			SELECT c.[CategoryID], c.[ParentCategory]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
			)
		INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
		INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 0 -- 0 All categories
	BEGIN
		INSERT INTO @UserViewCategoriesWithFilter SELECT [CategoryID] FROM @UserViewCategories;
		INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	END
	ELSE IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID;
		END
		ELSE -- module
		BEGIN
			INSERT INTO @UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM @UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
			
			INSERT INTO @FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID;
		END
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			;WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;			
		END
		ELSE -- module
		BEGIN
			;WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO @FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO @UserViewCategoriesWithFilter SELECT uvc.CategoryID FROM @FiltredByCategories AS nfc INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = nfc.CategoryID;
		END
	END
END

DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				SELECT @FilterByAuthor = UserID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END
		END
	END
ELSE
BEGIN
-- ovaj dio odnosi se na filtriranje autora
	IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0 -- filter iu other modula
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID
	END
	ELSE
	BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			IF @FillterSettingsSource = 1 -- by portal
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID
			END
			ELSE -- by modul
			BEGIN
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID
			END
		END
		ELSE IF @FilterByAuthor <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
		END
		ELSE IF @FilterByGroupID <> 0
		BEGIN
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
			SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID
		END
	END
END
-- kategorije sa edit pravima
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	SET @EditPermission = 1;
END
ELSE IF @SearchModulePermissions = 1 -- ovaj dio se odnosi na dozvole ako se pristupa iz satelitskog modula
BEGIN
	IF @OuterPermissionSource = 0
	BEGIN
		INSERT INTO @UserEditCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
		SET @EditPermission = 1;
	END
	ELSE IF @UserID = -1
	BEGIN
		IF @OuterPermissionSource = 1 -- portal settings
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE IF @OuterPermissionSource = 2 -- module settings
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @OuterPermissionID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @OuterPermissionID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @OuterPermissionID GROUP BY upatc.[CategoryID];
		END	
	END
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
		INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upatc.[CategoryID];
		END	
	END
	IF EXISTS(SELECT * FROM @UserEditCategories) BEGIN SET @EditPermission = 2; END
END

DECLARE @LocalizedCategories TABLE (ID INT NOT NULL PRIMARY KEY, Name NVARCHAR(200), Position INT, CategoryURL NVARCHAR(1500));
IF @LocaleCode IS NOT NULL
BEGIN
	;WITH LocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, cl.Title AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON uvc.CategoryID = cl.CategoryID WHERE Cat.PortalID = @PortalID AND cl.LocaleCode = @LocaleCode
	),
	NotLocCategories(ID, Name, Position, CategoryURL) AS (
		SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = Cat.CategoryID WHERE Cat.PortalID = @PortalID AND Cat.CategoryID NOT IN (SELECT ID FROM LocCategories)
	)
	INSERT INTO @LocalizedCategories SELECT ID, Name, Position, CategoryURL FROM (SELECT ID, Name, Position, CategoryURL FROM LocCategories UNION ALL SELECT ID, Name, Position, CategoryURL FROM NotLocCategories) AS ArticleCategories
END
ELSE
BEGIN
	INSERT INTO @LocalizedCategories SELECT Cat.CategoryID AS ID, Cat.CategoryName AS Name, Cat.Position, Cat.CategoryURL FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS Cat INNER JOIN @UserViewCategories AS uvc ON uvc.CategoryID = cat.CategoryID WHERE Cat.PortalID = @PortalID
END

IF @IsSocialInstance = 0
BEGIN
IF @LocaleCode IS NOT NULL
	BEGIN
		;WITH MainFilters AS(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID 
			WHERE na.PortalID=@PortalID
				AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
				AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
				AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
		),
		AllContent AS(
			SELECT n.ArticleID,
				CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE ned.StartDate END AS 'StartDate'
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
			 WHERE n.ArticleID IN(
				SELECT [ArticleID] FROM ( -- AS OnlyArticles
					SELECT ArticleID FROM (
						SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 0 AND HasPermissions 0 AND SearchTearm
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
							INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
							INNER JOIN @SearchTable AS st ON(
								(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
								OR
								(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
								OR
								(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
							)
						WHERE na.HasPermissions = 0
							AND na.EventArticle = 0
							AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
						UNION
						SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 0 AND HasPermissions 0 AND TagCloud
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
							INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
							INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
						WHERE na.HasPermissions = 0
							AND na.EventArticle = 0
							AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
					) AS HasPermissionsFalse
					UNION ALL
					SELECT ArticleID FROM (
						SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 0 AND HasPermissions 1 AND User permissions AND SearchTearm
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
							INNER JOIN @SearchTable AS st ON(
								(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
								OR
								(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
								OR
								(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
							)
						WHERE na.HasPermissions = 1
							AND na.EventArticle = 0
							AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
								AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
							))
						UNION
						SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 0 AND HasPermissions 1 AND User permissions AND TagCloud
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
							INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
						WHERE na.HasPermissions = 1
							AND na.EventArticle = 0
							AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
								AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
							))
						UNION
						SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 0 AND HasPermissions 1 AND Role permissions AND SearchTearm
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN @SearchTable AS st ON(
								(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
								OR
								(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
								OR
								(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
							)
						WHERE na.HasPermissions = 1
							AND na.EventArticle = 0
							AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
								AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
							))
						UNION
						SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 0 AND HasPermissions 1 AND Role permissions AND TagCloud
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
							INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
						WHERE na.HasPermissions = 1
							AND na.EventArticle = 0
							AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
								AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
							))
					) AS HasPermissionsTrue
				) AS OnlyArticles
				UNION ALL
				SELECT [ArticleID] FROM ( -- AS OnlyEvents
					SELECT [ArticleID] FROM (
						SELECT [ArticleID] FROM (
							SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurrin 0 AND SearchTearm
								INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
								INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
								INNER JOIN @SearchTable AS st ON(
									(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
									OR
									(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
									OR
									(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
								)
							WHERE na.HasPermissions = 0
								AND na.EventArticle = 1
								AND ne.Recurring = 0
								AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))) 
								AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
							UNION
							SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0 AND TagCloud
								INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
								INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
								INNER JOIN @SearchTable AS st2 ON newt.Name LIKE st2.Words
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
							WHERE na.HasPermissions = 0
								AND na.EventArticle = 1
								AND ne.Recurring = 0
								AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
								AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
						) AS HasPermissionsFalse
					) AS HasPermissionsFalseAndOrRecurring
					UNION ALL
					SELECT [ArticleID] FROM (
						SELECT [ArticleID] FROM (
							SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na  -- EV 1 AND HasPermissions 1 AND Recurring 0 AND User permissions AND SearchTearm
								INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
								INNER JOIN @SearchTable AS st ON(
									(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
									OR
									(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
									OR
									(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
								)
							WHERE na.HasPermissions = 1
								AND na.EventArticle = 1
								AND ne.Recurring = 0
								AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
								AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
									AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
								))
							UNION
							SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND Recurring 0 AND Role permissions AND SearchTearm
								INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
								INNER JOIN @SearchTable AS st ON(
									(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
									OR
									(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
									OR
									(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
								)
							WHERE na.HasPermissions = 1
								AND na.EventArticle = 1
								AND ne.Recurring = 0
								AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
								AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
									AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
								))
							UNION
							SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND Recurring 0 AND User permissions AND Tag Cloud
								INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
								INNER JOIN @SearchTable AS st2 ON newt.Name LIKE st2.Words
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
							WHERE na.HasPermissions = 1
								AND na.EventArticle = 1
								AND ne.Recurring = 0
								AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
								AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
									AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
								))
							UNION
							SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND Recurring 0 AND Role permissions AND Tag Cloud
								INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
								INNER JOIN @SearchTable AS st2 ON newt.Name LIKE st2.Words
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
							WHERE na.HasPermissions = 1
								AND na.EventArticle = 1
								AND ne.Recurring = 0
								AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
								AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
									AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
								))
						) AS HasPermissions
					) AS HasPermissionsAndOrRecurring
				) AS OnlyEvents
			)
			),
		AllCount AS (
			SELECT COUNT(*) AS ContentCount FROM AllContent --GROUP BY ArticleID, RecurringID
		),
		FinalArticleIDsSet (ArticleID,StartDate) AS(
			SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID, StartDate FROM (
			SELECT *,ROW_NUMBER() OVER (ORDER BY
		CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
		CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
		CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
		CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
		CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
		CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
		CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
		CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
		CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
		CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
		CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
		CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy ='Title ASC' THEN Title END,
		CASE WHEN @OrderBy ='Title DESC' THEN Title END DESC) AS Kulike
		FROM 
			(SELECT n.ArticleID,n.Featured,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified,n.NumberOfComments,n.Title,ac.StartDate FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN AllContent AS ac ON n.ArticleID = ac.ArticleID) AS innerAllResult) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY		
			CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
			CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
			CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
			CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
			CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
			CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
			CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
			CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
			CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
			CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
			CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
			CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy ='Title ASC' THEN Title END,
			CASE WHEN @OrderBy ='Title DESC' THEN Title END DESC,
			CASE WHEN @OrderBy ='StartDate ASC' THEN StartDate END,
			CASE WHEN @OrderBy ='StartDate DESC' THEN StartDate END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,StartDate,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ncl.ArticleID,fais.StartDate,ncl.Title,ncl.SubTitle,ncl.Summary,ncl.Article,ncl.DetailTypeData,ncl.clTitleLink AS TitleLink ,ncl.MetaDecription,ncl.MetaKeywords,ncl.MainImageTitle,ncl.MainImageDescription
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl INNER JOIN FinalArticleIDsSet AS fais ON ncl.ArticleID = fais.ArticleID AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @AdminOrSuperUser 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS 'CanEdit',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS 'Published',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS 'Approve',
			(SELECT TOP 1 ContentCount FROM AllCount) AS ContentCount
			 FROM (
				SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],
					 fais.StartDate,
					 n.[CFGroupeID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					INNER JOIN FinalArticleIDsSet AS fais ON n.ArticleID = fais.ArticleID AND fais.ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet)
				UNION ALL
				SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription],
					 fla.StartDate,
					 n.[CFGroupeID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID 
				) As Result	
			ORDER BY
				CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
				CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
				CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
				CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
				CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
				CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
				CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
				CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
				CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
				CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
				CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
				CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy ='Title ASC' THEN Title END,
				CASE WHEN @OrderBy ='Title DESC' THEN Title END DESC,
				CASE WHEN @OrderBy ='StartDate ASC' THEN StartDate END,
				CASE WHEN @OrderBy ='StartDate DESC' THEN StartDate END DESC;
	END
	ELSE
	BEGIN
		;WITH MainFilters AS(
			SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
				INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.PortalID=@PortalID
				AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate]
				AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
		),
		AllContent AS(
			SELECT n.ArticleID,
				CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE ned.StartDate END AS 'StartDate'
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
				WHERE n.ArticleID IN(
				SELECT [ArticleID] FROM ( -- AS OnlyArticles
					SELECT ArticleID FROM (
						SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
							INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
							INNER JOIN @SearchTable AS st ON(
								(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
								OR
								(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
								OR
								(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
							)
						WHERE na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.EventArticle = 0
							AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
						UNION
						SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
							INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
							INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
						WHERE na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.EventArticle = 0
							AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
					) AS HasPermissionsFalse
					UNION ALL
					SELECT ArticleID FROM (
						SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
							INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
							INNER JOIN @SearchTable AS st ON(
								(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
								OR
								(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
								OR
								(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
							)
						WHERE na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.EventArticle = 0
							AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
								AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
							))
						UNION
						SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
							INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
						WHERE na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.EventArticle = 0
							AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
								AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
							))
						UNION
						SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN @SearchTable AS st ON(
								(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
								OR
								(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
								OR
								(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
							)
						WHERE na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.EventArticle = 0
							AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
								AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
							))
						UNION
						SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
							INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
						WHERE na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.EventArticle = 0
							AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
								AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
							))
						) AS HasPermissionsTrue
				) AS OnlyArticles
				UNION ALL
				SELECT [ArticleID] FROM ( -- AS OnlyEvents
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND Recurrin 0
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
						INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
						INNER JOIN @SearchTable AS st ON(
							(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
							OR
							(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
							OR
							(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
						)
					WHERE na.HasPermissions = 0
						AND na.EventArticle = 1
						AND ne.Recurring = 0
						AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
						AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
					UNION ALL
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND Recurrin 0 AND TagCloud
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
						INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
						INNER JOIN @SearchTable AS st2 ON newt.Name LIKE st2.Words
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
					WHERE na.HasPermissions = 0
						AND na.EventArticle = 1
						AND ne.Recurring = 0
						AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
						AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
					UNION ALL
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND Recurrin 0 AND User permissions
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
						INNER JOIN @SearchTable AS st ON(
							(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
							OR
							(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
							OR
							(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
						)
					WHERE na.HasPermissions = 1
						AND na.EventArticle = 1
						AND ne.Recurring = 0
						AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
						AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
							AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
						))
					UNION
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND Recurrin 0 AND User permissions AND Tag Cloud
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
						INNER JOIN @SearchTable AS st2 ON newt.Name LIKE st2.Words
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
					WHERE na.HasPermissions = 1
						AND na.EventArticle = 1
						AND ne.Recurring = 0
						AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
						AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
							AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
						))
					UNION
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND Recurrin 0 AND Role permissions
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
						INNER JOIN @SearchTable AS st ON(
							(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
							OR
							(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
							OR
							(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
						)
					WHERE na.HasPermissions = 1
						AND na.EventArticle = 1
						AND ne.Recurring = 0
						AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
						AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
							AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
						))
					UNION
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND Recurrin 0 AND Role permissions AND Tag Cloud
						INNER JOIN MainFilters AS mf ON na.ArticleID = mf.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
						INNER JOIN @SearchTable AS st2 ON newt.Name LIKE st2.Words
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
					WHERE na.HasPermissions = 1
						AND na.EventArticle = 1
						AND ne.Recurring = 0
						AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
						AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
							AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
						))
				) AS OnlyEvents
			)
		),
		AllCount AS (
			SELECT COUNT(*) AS ContentCount FROM AllContent --GROUP BY ArticleID, RecurringID
		)
		SELECT *,
		CASE @AdminOrSuperUser 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS 'CanEdit',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS 'Published',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS  'Approve',
			(SELECT TOP 1 ContentCount FROM AllCount) AS ContentCount
		FROM (
		 SELECT *, ROW_NUMBER() OVER (ORDER BY
			 CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
			 CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
			 CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
			 CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
			 CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
			 CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
			 CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
			 CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
			 CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
			 CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
			 CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
			 CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
			 CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
			 CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
			 CASE WHEN @OrderBy ='Title ASC' THEN Title END,
			 CASE WHEN @OrderBy ='Title DESC' THEN Title END DESC,
			 CASE WHEN @OrderBy ='StartDate ASC' THEN [StartDate] END,
			 CASE WHEN @OrderBy ='StartDate DESC' THEN [StartDate] END DESC) AS Kulike
	FROM (

	SELECT
		 n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],
		 ac.StartDate
		 ,n.[CFGroupeID]
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN AllContent AS ac ON n.ArticleID = ac.ArticleID) AS innerAllResult ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
			CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
			CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
			CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
			CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
			CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
			CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
			CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
			CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
			CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
			CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
			CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy ='Title ASC' THEN Title END,
			CASE WHEN @OrderBy ='Title DESC' THEN Title END DESC,
			CASE WHEN @OrderBy ='StartDate ASC' THEN StartDate END,
			CASE WHEN @OrderBy ='StartDate DESC' THEN StartDate END DESC;
	END
END
ELSE IF @FilterBySocialGroup = 1
BEGIN
	IF @LocaleCode IS NOT NULL
	BEGIN
		;WITH AllContent AS(
			SELECT n.ArticleID,
				CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE ned.StartDate END AS 'StartDate'
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
				 WHERE n.ArticleID IN(
					SELECT [ArticleID] FROM ( -- AS OnlyArticles
						SELECT ArticleID FROM (
							SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
								INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
								INNER JOIN @SearchTable AS st ON(
									(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
									OR
									(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
									OR
									(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
								)
								LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
							WHERE na.PortalID=@PortalID
								AND na.HasPermissions = 0
								AND na.EventArticle = 0
								AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
								AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
								AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor))
								AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
							UNION
							SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
								INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
								INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
								LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
							WHERE na.PortalID=@PortalID
								AND na.HasPermissions = 0
								AND na.EventArticle = 0
								AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
								AND ((@AdminOrSuperUser = 1) OR ((@UserCanApprove = 1 OR na.Approved=1)AND (na.Active=1 OR na.UserID=@UserID)))
								AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor))
								AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
						) AS HasPermissionsFalse
						UNION ALL
						SELECT ArticleID FROM (
							SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
								INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
								INNER JOIN @SearchTable AS st ON(
									(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
									OR
									(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
									OR
									(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
								)
								LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
							WHERE na.PortalID=@PortalID
								AND na.HasPermissions = 1
								AND na.EventArticle = 0
								AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
								AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
									AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
								))
								AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor))
								AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
							UNION
							SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
								INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
								INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
								LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
							WHERE na.PortalID=@PortalID
								AND na.HasPermissions = 1
								AND na.EventArticle = 0
								AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
								AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
									AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
								))
								AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor))
								AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
							UNION
							SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
								INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
								INNER JOIN @SearchTable AS st ON(
									(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
									OR
									(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
									OR
									(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
								)
								LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
							WHERE na.PortalID=@PortalID
								AND na.HasPermissions = 1
								AND na.EventArticle = 0
								AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
								AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
									AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
								))
								AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor))
								AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
							UNION
							SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
								INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
								INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
								INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
								INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
								LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
							WHERE na.PortalID=@PortalID
								AND na.HasPermissions = 1
								AND na.EventArticle = 0
								AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
								AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
									AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
								))
								AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor))
								AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
						) AS HasPermissionsTrue
					) AS OnlyArticles
					UNION ALL
					SELECT [ArticleID] FROM ( -- AS OnlyEvents
						SELECT [ArticleID] FROM (
								SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurrin 0 AND SearchTearm
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
									INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
									INNER JOIN @SearchTable AS st ON(
										(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
										OR
										(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
										OR
										(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
									)
									LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
								WHERE na.PortalID=@PortalID
									AND na.HasPermissions = 0
									AND na.EventArticle = 1
									AND ne.Recurring = 0
									AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
									AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))) 
									AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
									AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
									AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
								UNION
								SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0 AND TagCloud
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
									INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
									INNER JOIN @SearchTable AS st2 ON newt.Name LIKE st2.Words
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
									LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
								WHERE na.PortalID=@PortalID
									AND na.HasPermissions = 0
									AND na.EventArticle = 1
									AND ne.Recurring = 0
									AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
									AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
									AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
									AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
									AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
						) AS HasPermissionsFalseAndOrRecurring
						UNION ALL
						SELECT [ArticleID] FROM (
								SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na  -- EV 1 AND HasPermissions 1 AND Recurring 0 AND User permissions AND SearchTearm
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
									INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
									INNER JOIN @SearchTable AS st ON(
										(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
										OR
										(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
										OR
										(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
									)
									LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
								WHERE na.PortalID=@PortalID
									AND na.HasPermissions = 1
									AND na.EventArticle = 1
									AND ne.Recurring = 0
									AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
									AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
									AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
										AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
									))
									AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
									AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
								UNION
								SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND Recurring 0 AND Role permissions AND SearchTearm
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
									INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
									INNER JOIN @SearchTable AS st ON(
										(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
										OR
										(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
										OR
										(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
									)
									LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
								WHERE na.PortalID=@PortalID
									AND na.HasPermissions = 1
									AND na.EventArticle = 1
									AND ne.Recurring = 0
									AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
									AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
									AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
										AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
									))
									AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
									AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
								UNION
								SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND Recurring 0 AND User permissions AND Tag Cloud
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
									INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
									INNER JOIN @SearchTable AS st2 ON newt.Name LIKE st2.Words
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
									LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
								WHERE na.PortalID=@PortalID
									AND na.HasPermissions = 1
									AND na.EventArticle = 1
									AND ne.Recurring = 0
									AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
									AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
									AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
										AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
									))
									AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
									AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
								UNION
								SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND Recurring 0 AND Role permissions AND Tag Cloud
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
									INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
									INNER JOIN @SearchTable AS st2 ON newt.Name LIKE st2.Words
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
									LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
								WHERE na.PortalID=@PortalID
									AND na.HasPermissions = 1
									AND na.EventArticle = 1
									AND ne.Recurring = 0
									AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
									AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
									AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
										AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
									))
									AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
									AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))	
						) AS HasPermissionsAndOrRecurring
					) AS OnlyEvents
				)
		),
		AllCount AS (
			SELECT COUNT(*) AS ContentCount FROM AllContent --GROUP BY ArticleID, RecurringID
		),
		FinalArticleIDsSet (ArticleID,StartDate) AS(
			SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID, StartDate FROM (
			SELECT *,ROW_NUMBER() OVER (ORDER BY
		CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
		CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
		CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
		CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
		CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
		CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
		CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
		CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
		CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
		CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
		CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
		CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy ='Title ASC' THEN Title END,
		CASE WHEN @OrderBy ='Title DESC' THEN Title END DESC) AS Kulike
		FROM 
			(SELECT n.ArticleID,n.Featured,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified,n.NumberOfComments,n.Title,ac.StartDate FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN AllContent AS ac ON n.ArticleID = ac.ArticleID) AS innerAllResult) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY		
			CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
			CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
			CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
			CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
			CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
			CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
			CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
			CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
			CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
			CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
			CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
			CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy ='Title ASC' THEN Title END,
			CASE WHEN @OrderBy ='Title DESC' THEN Title END DESC,
			CASE WHEN @OrderBy ='StartDate ASC' THEN StartDate END,
			CASE WHEN @OrderBy ='StartDate DESC' THEN StartDate END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,StartDate,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ncl.ArticleID,fais.StartDate,ncl.Title,ncl.SubTitle,ncl.Summary,ncl.Article,ncl.DetailTypeData,ncl.clTitleLink AS TitleLink ,ncl.MetaDecription,ncl.MetaKeywords,ncl.MainImageTitle,ncl.MainImageDescription
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl INNER JOIN FinalArticleIDsSet AS fais ON ncl.ArticleID = fais.ArticleID AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @AdminOrSuperUser 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS 'CanEdit',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS 'Published',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS 'Approve',
			(SELECT TOP 1 ContentCount FROM AllCount) AS ContentCount
			 FROM (
				SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],
					 fais.StartDate,
					 n.[CFGroupeID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					INNER JOIN FinalArticleIDsSet AS fais ON n.ArticleID = fais.ArticleID AND fais.ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet)
				UNION ALL
				SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription],
					 fla.StartDate,
					 n.[CFGroupeID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID 
				) As Result	
			ORDER BY
				CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
				CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
				CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
				CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
				CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
				CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
				CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
				CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
				CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
				CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
				CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
				CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy ='Title ASC' THEN Title END,
				CASE WHEN @OrderBy ='Title DESC' THEN Title END DESC,
				CASE WHEN @OrderBy ='StartDate ASC' THEN StartDate END,
				CASE WHEN @OrderBy ='StartDate DESC' THEN StartDate END DESC;
	END
	ELSE
	BEGIN
		;WITH AllContent AS(
			SELECT n.ArticleID,
				CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE ned.StartDate END AS 'StartDate'
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
			WHERE n.ArticleID IN(
			SELECT [ArticleID] FROM ( -- AS OnlyArticles
				SELECT ArticleID FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					INNER JOIN @SearchTable AS st ON(
						(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
						OR
						(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
						OR
						(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
					)
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0
					AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
					AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor))
					UNION
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
					INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0
					AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
					AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor))
			) AS HasPermissionsFalse
			UNION ALL
			SELECT ArticleID FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					INNER JOIN @SearchTable AS st ON(
						(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
						OR
						(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
						OR
						(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
					)
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0
					AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
					AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
					INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0
					AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
					AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					INNER JOIN @SearchTable AS st ON(
						(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
						OR
						(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
						OR
						(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
					)
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0
					AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
					AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
					INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 0
					AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
					AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID = @FilterByAuthor))
				) AS HasPermissionsTrue
			) AS OnlyArticles
			UNION ALL
			SELECT [ArticleID] FROM ( -- AS OnlyEvents
				SELECT [ArticleID] FROM (
						SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurrin 0 AND SearchTearm
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
							INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
							INNER JOIN @SearchTable AS st ON(
								(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
								OR
								(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
								OR
								(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
							)
						WHERE na.PortalID=@PortalID
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.EventArticle = 1
							AND ne.Recurring = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))) 
							AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
							AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
						UNION
						SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0 AND TagCloud
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
							INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
							INNER JOIN @SearchTable AS st2 ON newt.Name LIKE st2.Words
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
						WHERE na.PortalID=@PortalID
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.EventArticle = 1
							AND ne.Recurring = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
							AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
							AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))				
				) AS HasPermissionsFalseAndOrRecurring
				UNION ALL
				SELECT [ArticleID] FROM (
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na  -- EV 1 AND HasPermissions 1 AND Recurring 0 AND User permissions AND SearchTearm
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
							INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
							INNER JOIN @SearchTable AS st ON(
								(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
								OR
								(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
								OR
								(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
							)
						WHERE na.PortalID=@PortalID
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.EventArticle = 1
							AND ne.Recurring = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
							AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
								AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
							))
							AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
						UNION
						SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND Recurring 0 AND Role permissions AND SearchTearm
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
							INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
							INNER JOIN @SearchTable AS st ON(
								(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
								OR
								(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
								OR
								(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
							)
						WHERE na.PortalID=@PortalID
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.EventArticle = 1
							AND ne.Recurring = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
							AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
								AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
							))
							AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
						UNION
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND Recurring 0 AND User permissions AND Tag Cloud
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
							INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
							INNER JOIN @SearchTable AS st2 ON newt.Name LIKE st2.Words
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
						WHERE na.PortalID=@PortalID
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.EventArticle = 1
							AND ne.Recurring = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
							AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
								AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
							))
							AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
						UNION
						SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND Recurring 0 AND Role permissions AND Tag Cloud
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
							INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
							INNER JOIN @SearchTable AS st2 ON newt.Name LIKE st2.Words
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = n.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
							INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
						WHERE na.PortalID=@PortalID
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.EventArticle = 1
							AND ne.Recurring = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
							AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
								AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
							))
							AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
				) AS HasPermissionsAndOrRecurring
			) AS OnlyEvents
		)
		),
		AllCount AS (
			SELECT COUNT(*) AS ContentCount FROM AllContent --GROUP BY ArticleID, RecurringID
		)
		SELECT *,
		CASE @AdminOrSuperUser 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS 'CanEdit',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS 'Published',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS  'Approve',
			(SELECT TOP 1 ContentCount FROM AllCount) AS ContentCount
		FROM (
		 SELECT *, ROW_NUMBER() OVER (ORDER BY
			 CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
			 CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
			 CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
			 CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
			 CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
			 CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
			 CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
			 CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
			 CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
			 CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
			 CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
			 CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
			 CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
			 CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
			 CASE WHEN @OrderBy ='Title ASC' THEN Title END,
			 CASE WHEN @OrderBy ='Title DESC' THEN Title END DESC,
			 CASE WHEN @OrderBy ='StartDate ASC' THEN [StartDate] END,
			 CASE WHEN @OrderBy ='StartDate DESC' THEN [StartDate] END DESC) AS Kulike
		FROM (

	SELECT
		 n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],
		 ac.StartDate
		 ,n.[CFGroupeID]
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN AllContent AS ac ON n.ArticleID = ac.ArticleID) AS innerAllResult ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
			CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
			CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
			CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
			CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
			CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
			CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
			CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
			CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
			CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
			CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
			CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy ='Title ASC' THEN Title END,
			CASE WHEN @OrderBy ='Title DESC' THEN Title END DESC,
			CASE WHEN @OrderBy ='StartDate ASC' THEN StartDate END,
			CASE WHEN @OrderBy ='StartDate DESC' THEN StartDate END DESC;
	END
END
ELSE IF @FilterByDNNUserID <> 0
BEGIN
	IF @LocaleCode IS NOT NULL
	BEGIN
		;WITH AllContent AS(
			SELECT n.ArticleID,
				CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE ned.StartDate END AS 'StartDate'
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
					 WHERE n.ArticleID IN(
						SELECT [ArticleID] FROM ( -- AS OnlyArticles
							SELECT ArticleID FROM (
								SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
									INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
									INNER JOIN @SearchTable AS st ON(
										(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
										OR
										(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
										OR
										(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
									)
									LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
								WHERE na.PortalID=@PortalID
									AND na.HasPermissions = 0
									AND na.UserID = @FilterByDNNUserID
									AND na.EventArticle = 0
									AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
									AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
									AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
								UNION
								SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
									INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
									INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
									LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
								WHERE na.PortalID=@PortalID
									AND na.HasPermissions = 0
									AND na.UserID = @FilterByDNNUserID
									AND na.EventArticle = 0
									AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
									AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
									AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
							) AS HasPermissionsFalse
							UNION ALL
							SELECT ArticleID FROM (
								SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
									INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
									INNER JOIN @SearchTable AS st ON(
										(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
										OR
										(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
										OR
										(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
									)
									LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
								WHERE na.PortalID=@PortalID
									AND na.HasPermissions = 1
									AND na.UserID = @FilterByDNNUserID
									AND na.EventArticle = 0
									AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
									AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
										AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
									))
									AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
								UNION
								SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
									INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
									INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
									LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
								WHERE na.PortalID=@PortalID
									AND na.HasPermissions = 1
									AND na.UserID = @FilterByDNNUserID
									AND na.EventArticle = 0
									AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
									AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
										AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
									))
									AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
								UNION
								SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
									INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
									INNER JOIN @SearchTable AS st ON(
										(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
										OR
										(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
										OR
										(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
									)
									LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
								WHERE na.PortalID=@PortalID
									AND na.HasPermissions = 1
									AND na.UserID = @FilterByDNNUserID
									AND na.EventArticle = 0
									AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
									AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
										AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
									))
									AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
								UNION
								SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
									INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
									INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
									INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
									LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
								WHERE na.PortalID=@PortalID
									AND na.HasPermissions = 1
									AND na.UserID = @FilterByDNNUserID
									AND na.EventArticle = 0
									AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
									AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
										AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
									))
									AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
							) AS HasPermissionsTrue
						) AS OnlyArticles
						UNION ALL
						SELECT [ArticleID] FROM ( -- AS OnlyEvents
							SELECT [ArticleID] FROM (
									SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurrin 0 AND SearchTearm
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
										INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
										INNER JOIN @SearchTable AS st ON(
											(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
											OR
											(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
											OR
											(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
										)
										LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
									WHERE na.PortalID=@PortalID
										AND na.HasPermissions = 0
										AND na.EventArticle = 1
										AND ne.Recurring = 0
										AND na.UserID = @FilterByDNNUserID
										AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
										AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))) 
										AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
										AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
										AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
									UNION
									SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0 AND TagCloud
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
										INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
										INNER JOIN @SearchTable AS st2 ON newt.Name LIKE st2.Words
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
										LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
									WHERE na.PortalID=@PortalID
										AND na.HasPermissions = 0
										AND na.EventArticle = 1
										AND ne.Recurring = 0
										AND na.UserID = @FilterByDNNUserID
										AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
										AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
										AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
										AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
										AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
							) AS HasPermissionsFalseAndOrRecurring
							UNION ALL
							SELECT [ArticleID] FROM (
									SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na  -- EV 1 AND HasPermissions 1 AND Recurring 0 AND User permissions AND SearchTearm
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
										INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
										INNER JOIN @SearchTable AS st ON(
											(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
											OR
											(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
											OR
											(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
										)
										LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
									WHERE na.PortalID=@PortalID
										AND na.HasPermissions = 1
										AND na.EventArticle = 1
										AND ne.Recurring = 0
										AND na.UserID = @FilterByDNNUserID
										AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
										AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
										AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
											AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
										))
										AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
										AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
									UNION
									SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND Recurring 0 AND Role permissions AND SearchTearm
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
										INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
										INNER JOIN @SearchTable AS st ON(
											(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
											OR
											(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
											OR
											(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
										)
										LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
									WHERE na.PortalID=@PortalID
										AND na.HasPermissions = 1
										AND na.EventArticle = 1
										AND ne.Recurring = 0
										AND na.UserID = @FilterByDNNUserID
										AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
										AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
										AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
											AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
										))
										AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
										AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
									UNION
									SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND Recurring 0 AND User permissions AND Tag Cloud
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
										INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
										INNER JOIN @SearchTable AS st2 ON newt.Name LIKE st2.Words
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
										LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
									WHERE na.PortalID=@PortalID
										AND na.HasPermissions = 1
										AND na.EventArticle = 1
										AND ne.Recurring = 0
										AND na.UserID = @FilterByDNNUserID
										AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
										AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
										AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
											AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
										))
										AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
										AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
									UNION
									SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND Recurring 0 AND Role permissions AND Tag Cloud
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
										INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
										INNER JOIN @SearchTable AS st2 ON newt.Name LIKE st2.Words
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
										INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
										INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
										LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
									WHERE na.PortalID=@PortalID
										AND na.HasPermissions = 1
										AND na.EventArticle = 1
										AND ne.Recurring = 0
										AND na.UserID = @FilterByDNNUserID
										AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
										AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
										AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
											AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
										))
										AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
										AND (@HideUnlocalizedItems = 0 OR (ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode))
							) AS HasPermissionsAndOrRecurring
						) AS OnlyEvents
					)
		),
		AllCount AS (
			SELECT COUNT(*) AS ContentCount FROM AllContent --GROUP BY ArticleID, RecurringID
		),
		FinalArticleIDsSet (ArticleID,StartDate) AS(
			SELECT TOP (@ItemsTo - @ItemsFrom + 1) ArticleID, StartDate FROM (
			SELECT *,ROW_NUMBER() OVER (ORDER BY
		CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
		CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
		CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
		CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
		CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
		CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
		CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
		CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
		CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
		CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
		CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
		CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
		CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
		CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
		CASE WHEN @OrderBy ='Title ASC' THEN Title END,
		CASE WHEN @OrderBy ='Title DESC' THEN Title END DESC) AS Kulike
		FROM 
			(SELECT n.ArticleID,n.Featured,n.PublishDate,n.NumberOfViews,n.RatingValue,n.DateAdded,n.ExpireDate,n.LastModified,n.NumberOfComments,n.Title,ac.StartDate FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN AllContent AS ac ON n.ArticleID = ac.ArticleID) AS innerAllResult) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY			
			CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
			CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
			CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
			CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
			CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
			CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
			CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
			CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
			CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
			CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
			CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
			CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy ='Title ASC' THEN Title END,
			CASE WHEN @OrderBy ='Title DESC' THEN Title END DESC,
			CASE WHEN @OrderBy ='StartDate ASC' THEN StartDate END,
			CASE WHEN @OrderBy ='StartDate DESC' THEN StartDate END DESC
		),
		FinalLocalizedArticleIDsSet (ArticleID,StartDate,Title,SubTitle,Summary,Article,DetailTypeData,TitleLink,MetaDecription,MetaKeywords,MainImageTitle,MainImageDescription) AS(
			SELECT ncl.ArticleID,fais.StartDate,ncl.Title,ncl.SubTitle,ncl.Summary,ncl.Article,ncl.DetailTypeData,ncl.clTitleLink AS TitleLink ,ncl.MetaDecription,ncl.MetaKeywords,ncl.MainImageTitle,ncl.MainImageDescription
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl INNER JOIN FinalArticleIDsSet AS fais ON ncl.ArticleID = fais.ArticleID AND LocaleCode = @LocaleCode
		)
		SELECT *,
			CASE @AdminOrSuperUser 
				WHEN 0 THEN 0
				WHEN 1 THEN 1
				WHEN 2 THEN
				CASE @EditOnlyAsOwner
					WHEN 0 THEN			
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END
						END  			
					WHEN 1 THEN
						CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
							THEN 1
							ELSE
								CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
								THEN 1
								ELSE
									CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
										THEN 1
										ELSE 0
									END
								END 
						END
				END
				WHEN 3 THEN
					CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
						CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
							THEN 1
							ELSE 0
							END
						END 
			END AS 'CanEdit',
			 CASE Result.Active
				WHEN 1 THEN 0
				WHEN 0 THEN 1
			 END AS 'Published',
			 CASE @UserCanApprove
				WHEN 0 THEN 0
				WHEN 1 THEN
					CASE Result.Approved
					 WHEN 1 THEN 0
					 WHEN 0 THEN
						 CASE Result.Active
							WHEN 1 THEN 1
							WHEN 0 THEN 0
						END
					END
			 END AS 'Approve',
			(SELECT TOP 1 ContentCount FROM AllCount) AS ContentCount
				FROM (
				SELECT n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],
					 fais.StartDate,
					 n.[CFGroupeID]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					INNER JOIN FinalArticleIDsSet AS fais ON n.ArticleID = fais.ArticleID AND fais.ArticleID NOT IN (SELECT ArticleID FROM FinalLocalizedArticleIDsSet)
				UNION ALL
				SELECT n.[ArticleID],n.[UserID],fla.[Title],fla.[SubTitle],fla.[Summary],fla.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
					,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
					,fla.[TitleLink],n.[DetailType],fla.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
					,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
					,n.[ArticleImageSet],fla.[MetaDecription],fla.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
					,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],fla.[MainImageTitle],fla.[MainImageDescription],
					 fla.StartDate,
					 n.[CFGroupeID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN FinalLocalizedArticleIDsSet AS fla ON fla.ArticleID = n.ArticleID 
				) As Result	
			ORDER BY
				CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
				CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
				CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
				CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
				CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
				CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
				CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
				CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
				CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
				CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
				CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
				CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy ='Title ASC' THEN Title END,
				CASE WHEN @OrderBy ='Title DESC' THEN Title END DESC,
				CASE WHEN @OrderBy ='StartDate ASC' THEN StartDate END,
				CASE WHEN @OrderBy ='StartDate DESC' THEN StartDate END DESC;
	END
	ELSE
	BEGIN
		;WITH AllContent AS(
			SELECT n.ArticleID,
				CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE ned.StartDate END AS 'StartDate'
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		WHERE n.ArticleID IN(
		SELECT [ArticleID] FROM ( -- AS OnlyArticles
			SELECT ArticleID FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					INNER JOIN @SearchTable AS st ON(
						(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
						OR
						(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
						OR
						(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
					)
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.UserID = @FilterByDNNUserID
					AND na.EventArticle = 0
					AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
					AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
					INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 0
					AND na.HideDefaultLocale = 0
					AND na.UserID = @FilterByDNNUserID
					AND na.EventArticle = 0
					AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
					AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
			) AS HasPermissionsFalse
			UNION ALL
			SELECT ArticleID FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					INNER JOIN @SearchTable AS st ON(
						(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
						OR
						(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
						OR
						(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
					)
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.UserID = @FilterByDNNUserID
					AND na.EventArticle = 0
					AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
					AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
					INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.UserID = @FilterByDNNUserID
					AND na.EventArticle = 0
					AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
					AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					INNER JOIN @SearchTable AS st ON(
						(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
						OR
						(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
						OR
						(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
					)
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.UserID = @FilterByDNNUserID
					AND na.EventArticle = 0
					AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
					AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
					INNER JOIN @SearchTable AS st2 ON newt.Name Like st2.Words
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.UserID = @FilterByDNNUserID
					AND na.EventArticle = 0
					AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
					AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
			) AS HasPermissionsTrue
		) AS OnlyArticles
		UNION ALL
		SELECT [ArticleID] FROM ( -- AS OnlyEvents
			SELECT [ArticleID] FROM (
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurrin 0 AND SearchTearm
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
						INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
						INNER JOIN @SearchTable AS st ON(
							(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
							OR
							(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
							OR
							(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
						)
					WHERE na.PortalID=@PortalID
						AND na.HasPermissions = 0
						AND na.HideDefaultLocale = 0
						AND na.EventArticle = 1
						AND ne.Recurring = 0
						AND na.UserID = @FilterByDNNUserID
						AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
						AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)))) 
						AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
						AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
					UNION
					SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0 AND TagCloud
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
						INNER JOIN @UserViewCategoriesWithFilter AS uvcwf ON uvcwf.CategoryID = cat.CategoryID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
						INNER JOIN @SearchTable AS st2 ON newt.Name LIKE st2.Words
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
					WHERE na.PortalID=@PortalID
						AND na.HasPermissions = 0
						AND na.HideDefaultLocale = 0
						AND na.EventArticle = 1
						AND ne.Recurring = 0
						AND na.UserID = @FilterByDNNUserID
						AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
						AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
						AND (((na.Active = 1 OR na.UserID = @UserID) AND (na.Approved = 1 OR @UserCanApprove = 1)) OR @AdminOrSuperUser = 1)
						AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
			) AS HasPermissionsFalseAndOrRecurring
			UNION ALL
			SELECT [ArticleID] FROM (
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na  -- EV 1 AND HasPermissions 1 AND Recurring 0 AND User permissions AND SearchTearm
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
					INNER JOIN @SearchTable AS st ON(
						(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
						OR
						(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
						OR
						(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
					)
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND ne.Recurring = 0
					AND na.UserID = @FilterByDNNUserID
					AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
					AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
					AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND Recurring 0 AND Role permissions AND SearchTearm
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
					INNER JOIN @SearchTable AS st ON(
						(@SearchType = 3 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\'))
						OR
						(@SearchType = 2 AND (na.CleanArticleData LIKE st.Words ESCAPE '\'))
						OR
						(@SearchType = 1 AND (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\'))
					)
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND ne.Recurring = 0
					AND na.UserID = @FilterByDNNUserID
					AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
					AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
					AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
				UNION
				SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND Recurring 0 AND User permissions AND Tag Cloud
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
					INNER JOIN @SearchTable AS st2 ON newt.Name LIKE st2.Words
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND ne.Recurring = 0
					AND na.UserID = @FilterByDNNUserID
					AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
					AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
					AND ((@AdminOrSuperUser = 1) OR (((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))
						AND aup.Show = 1 AND ((@UserCanApprove = 1) OR (na.Approved=1)) AND (na.Active=1 OR na.UserID=@UserID)
					))
					AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
				UNION
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND Recurring 0 AND Role permissions AND Tag Cloud
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @FiltredByCategories AS fbc ON fbc.CategoryID = cat.CategoryID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS nt ON na.ArticleID = nt.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS newt ON nt.TagID = newt.TagID
					INNER JOIN @SearchTable AS st2 ON newt.Name LIKE st2.Words
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = n.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 1
					AND na.HideDefaultLocale = 0
					AND na.EventArticle = 1
					AND ne.Recurring = 0
					AND na.UserID = @FilterByDNNUserID
					AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
					AND (@DateRangeType = 0 OR (@DateRangeType = 2 AND ((ne.StartDate >= @StartDate) OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate))))
					AND ((@AdminOrSuperUser = 1) OR (((@UserCanApprove = 1) OR (na.Approved=1))
						AND (na.Active=1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)
					))
					AND (@FilterAuthorOrAuthors = 0 OR na.UserID IN (SELECT UserID FROM @TempAuthorsIDList))
			) AS HasPermissionsAndOrRecurring
		) AS OnlyEvents
		)
		),
		AllCount AS (
			SELECT COUNT(*) AS ContentCount FROM AllContent --GROUP BY ArticleID, RecurringID
		)
		SELECT *,
		CASE @AdminOrSuperUser 
			WHEN 0 THEN 0
			WHEN 1 THEN 1
			WHEN 2 THEN
			CASE @EditOnlyAsOwner
				WHEN 0 THEN			
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END
					END  			
				WHEN 1 THEN
					CASE WHEN EXISTS(SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c WHERE Result.UserID = @UserID AND c.ArticleID = Result.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
						THEN 1
						ELSE
							CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
							THEN 1
							ELSE
								CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
									THEN 1
									ELSE 0
								END
							END 
					END
			END
			WHEN 3 THEN
				CASE WHEN EXISTS(SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = Result.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
					THEN 1
					ELSE
					CASE WHEN EXISTS (SELECT [ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = Result.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
						THEN 1
						ELSE 0
						END
					END 
		END AS 'CanEdit',
		 CASE Result.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		 END AS 'Published',
		 CASE @UserCanApprove
			WHEN 0 THEN 0
			WHEN 1 THEN
				CASE Result.Approved
				 WHEN 1 THEN 0
				 WHEN 0 THEN
					 CASE Result.Active
						WHEN 1 THEN 1
						WHEN 0 THEN 0
					END
				END
		 END AS  'Approve',
			(SELECT TOP 1 ContentCount FROM AllCount) AS ContentCount
		FROM (
		 SELECT *, ROW_NUMBER() OVER (ORDER BY
			 CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
			 CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
			 CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
			 CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
			 CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
			 CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
			 CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
			 CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
			 CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
			 CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
			 CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
			 CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
			 CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
			 CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
			 CASE WHEN @OrderBy ='Title ASC' THEN Title END,
			 CASE WHEN @OrderBy ='Title DESC' THEN Title END DESC,
			 CASE WHEN @OrderBy ='StartDate ASC' THEN [StartDate] END,
			 CASE WHEN @OrderBy ='StartDate DESC' THEN [StartDate] END DESC) AS Kulike
	FROM (

	SELECT
		 n.[ArticleID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],
		 ac.StartDate
		 ,n.[CFGroupeID]
		 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n INNER JOIN AllContent AS ac ON n.ArticleID = ac.ArticleID) AS innerAllResult ) AS Result WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
			CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
			CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
			CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
			CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
			CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
			CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
			CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
			CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
			CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
			CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
			CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
			CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
			CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
			CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
			CASE WHEN @OrderBy ='Title ASC' THEN Title END,
			CASE WHEN @OrderBy ='Title DESC' THEN Title END DESC,
			CASE WHEN @OrderBy ='StartDate ASC' THEN StartDate END,
			CASE WHEN @OrderBy ='StartDate DESC' THEN StartDate END DESC;
	END
END
GO