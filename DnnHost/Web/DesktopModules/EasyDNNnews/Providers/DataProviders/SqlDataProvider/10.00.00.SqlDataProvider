IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForArticleEditor]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForArticleEditor]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForArticleEditor]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForArticleEditor]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContent]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@DateRange BIT = 0,
	@DateRangeType TINYINT = 0,
	@StartDate DATETIME = NULL,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL,
	@eToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange SMALLINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	@FilterByCustomFields BIT = 0,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
--WITH RECOMPILE
AS
SET NOCOUNT ON;
DECLARE @SecondOrderBy NVARCHAR(30);
SET @SecondOrderBy = N', inner_n.ArticleID ';
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRange BIT
	,@DateRangeType TINYINT
	,@StartDate DATETIME
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange SMALLINT
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT';

DECLARE @sqlCommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlCommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT NOT NULL PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM dbo.[{objectQualifier}Roles] AS r
		INNER JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM dbo.[{objectQualifier}Roles] AS r
		INNER JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate) '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (Id INT PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX), CategoryURL NVARCHAR(1500)); '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #UserEditCategories (CategoryID INT PRIMARY KEY);
	INSERT INTO #UserEditCategories
	SELECT CategoryID
	FROM dbo.[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)

	DECLARE @HasEditCategories BIT;

	IF EXISTS (SELECT 1 FROM #UserEditCategories)
		SET @HasEditCategories = 1;
	ELSE
		SET @HasEditCategories = 0; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM dbo.[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM dbo.[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM dbo.[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM dbo.[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM dbo.[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM dbo.[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM dbo.[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT NOT NULL PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS Id,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryURL ELSE cl.CategoryURL END AS CategoryURL
	FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategories) '
	
SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

SET @TopInnerFilter = N' WHERE ' + @sqlSharingPortal;

	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			INNER JOIN dbo.[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmd.GoogleMapID = gmc.GoogleMapID AND gmd.PointData <> N''''
			WHERE gmc.ArticleID = na.ArticleID
		) '
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			WHERE gmc.ArticleID = na.ArticleID
		) '

	IF @HideUnlocalizedItems = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl
			WHERE ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
		) '

	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN dbo.[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = nss.ArticleID
			WHERE nss.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		) '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN dbo.[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE nss.ArticleID = na.ArticleID
		) '

	IF @FilterByTags = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti
			INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE ti.ArticleID = na.ArticleID
		) '

	IF @FilterByArticles = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM @FilterArticlesTable AS fba
			WHERE fba.ArticleID = na.ArticleID
		) '

	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL 
			SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE
		SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '

	IF @LocaleCode IS NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '

	IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0
			SET @TopInnerFilter = @TopInnerFilter + N' AND (na.UserID = @UserID OR (na.Active = 1 AND na.Approved = 1)) '
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N' AND (na.UserID = @UserID OR na.Active = 1) '
	END

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM dbo.[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END
IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN
	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(630)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10) NOT NULL,
		CFWhereRoule NVARCHAR(MAX) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID)
				FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme
				WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);

		SET @CFFilterQuery = N'SELECT CFFilteredArticles.ArticleID FROM (';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			DECLARE @FilterValueMulti NVARCHAR(MAX);
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValueMulti = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N'AND'
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM dbo.[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE ' + @FilterValueMulti + '
) AS OnlyWithGoogleMaps
WHERE Recency >= ' + STR(@ElementsCount) + ' '
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM dbo.[{objectQualifier}EasyDNNNews] AS n
INNER JOIN dbo.[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueMulti + ' '
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			DECLARE @FilterValueSimple NVARCHAR(630);
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @FilterValueSimple = CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow;

				SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM dbo.[{objectQualifier}EasyDNNNews] AS n
INNER JOIN dbo.[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueSimple + ' '

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END

		END

		SET @CFFilterQuery = @CFFilterQuery + N') AS CFFilteredArticles'
	END

	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

SET @MainContentFilter = N'
;WITH AllContent AS( '

	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT ArticleID, CommentedDate,RecurringID,StartDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,inner_all.RecurringID
			,inner_all.StartDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID], inner_all.RecurringID ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @MainContentFilter = @MainContentFilter + N'inner_all.Featured DESC, '
			
			SET @MainContentFilter = @MainContentFilter + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
			
		FROM dbo.[{objectQualifier}EasyDNNNewsComments] AS nc
		INNER JOIN (';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT n.ArticleID,n.Featured,
		CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
		CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
	FROM dbo.[{objectQualifier}EasyDNNNews] AS n
	LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND '
	IF @DateRangeType = 3
		SET @MainContentFilter = @MainContentFilter + N' nerd.EndDateTime < @CurrentDate'
	ELSE IF @DateRangeType = 2
		SET @MainContentFilter = @MainContentFilter + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 1
		BEGIN
			IF @ListArchive = 0
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
			ELSE
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
		END
	ELSE IF @DateRangeType = 0
		SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE
		SET @MainContentFilter = @MainContentFilter + N' 1 = 0'
	
	SET @MainContentFilter = @MainContentFilter + N'
	WHERE n.ArticleID IN( '
	 
	 -- tu bi trebal staviti okolo da se filtrira po and !!!
	 
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.ArticleID IN ( ';
	END
	 
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N' SELECT ArticleID FROM ('
	 
	SET @MainContentFilter = @MainContentFilter + N'
		SELECT [ArticleID] FROM (
			SELECT na.[ArticleID]
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na ' -- only article normal permissions	
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND EXISTS (
					SELECT ArticleID
					FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c
					WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
				)
				AND na.EventArticle = 0 '

				IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

				IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
			
			SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT na.[ArticleID]
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na ' -- normal and recurring event normal permissions
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND EXISTS (
					SELECT ArticleID
					FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c
					WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
				)
				AND EXISTS (
					SELECT ArticleID
					FROM dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne
					WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
					IF @DateRangeType = 3
						SET @MainContentFilter = @MainContentFilter + N' AND ne.EndDate < @CurrentDate'
					ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

				SET @MainContentFilter = @MainContentFilter + N'
					UNION ALL
					SELECT ArticleID
					FROM dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne
					WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						AND EXISTS (
							SELECT ArticleID
							FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
							WHERE nerd.ArticleID = ne.ArticleID '
							IF @DateRangeType = 3
								SET @MainContentFilter = @MainContentFilter + N' AND nerd.EndDateTime < @CurrentDate'
							ELSE IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N'
							AND ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
							ELSE IF @DateRangeType = 1
								BEGIN
									IF @ListArchive = 0
										SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
									ELSE
										SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
								END
							ELSE IF @DateRangeType = 0
								SET @MainContentFilter = @MainContentFilter + N' AND (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						
						SET @MainContentFilter = @MainContentFilter + N'
						)
				) '

				IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

		IF @QueryPermissionsPerArticles = 1
		BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT na.[ArticleID]
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na ' -- only article user/role permissions
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND EXISTS (
					SELECT ArticleID
					FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c
					WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
				)
				AND EXISTS (
					SELECT ArticleID
					FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
					WHERE aup.ArticleID = na.ArticleID '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					IF @UserID <> -1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT ArticleID
						FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
						WHERE arp.ArticleID = na.ArticleID '
						IF @CanEditAllContent = 0
						BEGIN
							SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
						END
					END
				SET @MainContentFilter = @MainContentFilter + N'
				)
				AND na.EventArticle = 0 '
				
				IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '
			
			SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT na.[ArticleID]
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na ' -- normal and recurring events user/role permissions
				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND EXISTS (
					SELECT ArticleID
					FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c
					WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
				)
				AND EXISTS (
					SELECT ArticleID
					FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
					WHERE aup.ArticleID = na.ArticleID '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					IF @UserID <> -1
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT ArticleID
						FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
						WHERE arp.ArticleID = na.ArticleID '
						IF @CanEditAllContent = 0
						BEGIN
							SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
						END
					END
				
				SET @MainContentFilter = @MainContentFilter + N'
				)
				AND EXISTS (
					SELECT ArticleID
					FROM dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne
					WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
					IF @DateRangeType = 3
						SET @MainContentFilter = @MainContentFilter + N' AND ne.EndDate < @CurrentDate'
					ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

				SET @MainContentFilter = @MainContentFilter + N'
					UNION ALL
					SELECT ArticleID
					FROM dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne
					WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						AND EXISTS (
							SELECT ArticleID
							FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
							WHERE nerd.ArticleID = ne.ArticleID '
							IF @DateRangeType = 3
								SET @MainContentFilter = @MainContentFilter + N' AND nerd.EndDateTime < @CurrentDate'
							ELSE IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N'
							AND ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
									OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
							ELSE IF @DateRangeType = 1
								BEGIN
									IF @ListArchive = 0
										SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
									ELSE
										SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
								END
							ELSE IF @DateRangeType = 0
								SET @MainContentFilter = @MainContentFilter + N' AND (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						
						SET @MainContentFilter = @MainContentFilter + N'
						)
				) '
		END

		SET @MainContentFilter = @MainContentFilter + N'
		) AS AllPermissions '
	
	-- treba desti ako se koristi AND operator
	
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N') AllBeforeFilters INTERSECT ' + @CFFilterQuery
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	END
	
	SET @MainContentFilter = @MainContentFilter + N' 
	) '
	
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON nc.ArticleID = inner_all.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1'
	END
	
SET @MainContentFilter = @MainContentFilter + N' 
) '

SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent '

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
	,e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], '
ELSE
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], ';

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N'0 AS CanEdit, '
ELSE IF @CanEditAllContent = 1
	SET @sqlcommand = @sqlcommand + N'1 AS CanEdit, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE WHEN @HasEditCategories = 0
	THEN 
		CASE WHEN EXISTS(
			SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	ELSE
		CASE WHEN EXISTS(
			SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE '
			IF @EditOnlyAsOwner = 1
				SET @sqlcommand = @sqlcommand + N' n.UserID = @UserID AND '

			SET @sqlcommand = @sqlcommand + N' c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
		)
		OR EXISTS(
			SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	END
	AS CanEdit, '
END

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, 
	(
		SELECT wfs.*, edas.Status,
		( SELECT TOP 1 war.RoleID
						FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveRoles AS war
						INNER JOIN {objectQualifier}UserRoles AS ur ON ur.RoleID = war.RoleID
						WHERE war.StateId = wfs.StateId AND ur.Userid=@userID
					 )  As RoleId,
					( SELECT TOP 1 wau.userId  
					FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveUsers AS wau
					WHERE wau.StateId = wfs.StateId AND wau.Userid =@userID
					)  As EditUserId
		FROM dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs
		LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS edas ON edas.StateId = wfs.StateId AND edas.ArticleId = n.ArticleID
		WHERE wfs.WorkflowId = n.WorkflowId
		ORDER BY wfs.position ASC
		FOR XML PATH(''WorkflowState''), ROOT(''WorkflowStates'')
	) AS WorkflowState,
	'
ELSE
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", lc.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.Id
	INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow,
	(
		SELECT wfs.*, edas.Status,
		( SELECT TOP 1 war.RoleID
						FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveRoles AS war
						INNER JOIN {objectQualifier}UserRoles AS ur ON ur.RoleID = war.RoleID
						WHERE war.StateId = wfs.StateId AND ur.Userid=@userID
					 )  As RoleId,
					( SELECT TOP 1 wau.userId  
					FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveUsers AS wau
					WHERE wau.StateId = wfs.StateId AND wau.Userid =@userID
					)  As EditUserId
		FROM dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs
		LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS edas ON edas.StateId = wfs.StateId AND edas.ArticleId = n.ArticleID
		WHERE wfs.WorkflowId = n.WorkflowId
		ORDER BY wfs.position ASC
		FOR XML PATH(''WorkflowState''), ROOT(''WorkflowStates'')
	) AS WorkflowState,
	 '

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N' 0 AS Published, 0 AS Approve, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE n.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	END AS Published, '
	IF @UserCanApprove = 0
		SET @sqlcommand = @sqlcommand + N'0 AS Approve, '
	ELSE
		SET @sqlcommand = @sqlcommand + N'
			CASE n.Approved
				WHEN 1 THEN 0
				WHEN 0 THEN n.Active
			END AS Approve, '
END

SET @sqlcommand = @sqlcommand + N' @AllContentCount AS ContentCount '

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + @SecondOrderBy + N') AS Kulike
				FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N',e_fsd.' + @OrderByColumnName + ',(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END)
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				IF @OrderByDirection = 'ASC' SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + @SecondOrderBy + N') AS Kulike
				FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				
				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + @SecondOrderBy + N') AS Kulike
				FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				
				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + @SecondOrderBy + N') AS Kulike
				FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
		END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + @SecondOrderBy + N') AS Kulike
				FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
				,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				
				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + @SecondOrderBy + N') AS Kulike
				FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
END

SET @sqlcommand = @sqlcommand + N' ORDER BY ';
IF @FirstOrderBy = 'Featured DESC'
	SET @sqlcommand = @sqlcommand + N'Featured DESC, ';
IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
	SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),';

SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N',n.ArticleID';

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#UserEditCategories'') IS NOT NULL
		DROP TABLE #UserEditCategories; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
		DROP TABLE #LocalizedCategories; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRange = @DateRange
	,@DateRangeType = @DateRangeType
	,@StartDate = @StartDate
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles]    Script Date: 17.12.2018. 15:12:48 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticles]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@DateRange TINYINT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@FilterByTagID INT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	@FilterByCustomFields BIT = 0,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
--WITH RECOMPILE
AS
SET NOCOUNT ON;
DECLARE @SecondOrderBy NVARCHAR(30);
SET @SecondOrderBy = N', inner_n.ArticleID ';
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRange TINYINT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@LocaleCode NVARCHAR(20)
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@FilterByTagID INT
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT';

DECLARE @sqlCommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlCommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM dbo.[{objectQualifier}Roles] AS r
		INNER JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM dbo.[{objectQualifier}Roles] AS r
		INNER JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (Id INT PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX), CategoryURL NVARCHAR(1500)); '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #UserEditCategories (CategoryID INT PRIMARY KEY);
	INSERT INTO #UserEditCategories
	SELECT CategoryID
	FROM dbo.[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)

	DECLARE @HasEditCategories BIT;

	IF EXISTS (SELECT 1 FROM #UserEditCategories)
		SET @HasEditCategories = 1;
	ELSE
		SET @HasEditCategories = 0; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM dbo.[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM dbo.[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM dbo.[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM dbo.[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM dbo.[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM dbo.[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM dbo.[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS Id,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryURL ELSE cl.CategoryURL END AS CategoryURL
	FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategories) '
	
SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

SET @TopInnerFilter = N' WHERE ' + @sqlSharingPortal;

	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			INNER JOIN dbo.[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmd.GoogleMapID = gmc.GoogleMapID AND gmd.PointData <> N''''
			WHERE gmc.ArticleID = na.ArticleID
		) '
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			WHERE gmc.ArticleID = na.ArticleID
		) '

	IF @HideUnlocalizedItems = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl
			WHERE ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
		) '

	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN dbo.[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = nss.ArticleID
			WHERE nss.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		) '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN dbo.[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE nss.ArticleID = na.ArticleID
		) '

	IF @FilterByTags = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti
			INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE ti.ArticleID = na.ArticleID
		) '
	
	IF @FilterByArticles = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM @FilterArticlesTable AS fba
			WHERE fba.ArticleID = na.ArticleID
		) '

	SET @TopInnerFilter = @TopInnerFilter + N' AND na.EventArticle = 0 '

	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @DateRange = 2
			SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate '
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @DateRange > 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE
		SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '

	IF @LocaleCode IS NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '

	IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
	
	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0
			SET @TopInnerFilter = @TopInnerFilter + N' AND (na.UserID = @UserID OR (na.Active = 1 AND na.Approved = 1)) '
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N' AND (na.UserID = @UserID OR na.Active = 1) '
	END

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM dbo.[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END
IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN
	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(630)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10) NOT NULL,
		CFWhereRoule NVARCHAR(MAX) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID)
				FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme
				WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);

		SET @CFFilterQuery = N'SELECT CFFilteredArticles.ArticleID FROM (';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			DECLARE @FilterValueMulti NVARCHAR(MAX);
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValueMulti = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N'AND'
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM dbo.[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE ' + @FilterValueMulti + '
) AS OnlyWithGoogleMaps
WHERE Recency >= ' + STR(@ElementsCount) + ' '
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM dbo.[{objectQualifier}EasyDNNNews] AS n
INNER JOIN dbo.[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueMulti + ' '
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			DECLARE @FilterValueSimple NVARCHAR(630);
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @FilterValueSimple = CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow;

				SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM dbo.[{objectQualifier}EasyDNNNews] AS n
INNER JOIN dbo.[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueSimple + ' '

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END

		END

		SET @CFFilterQuery = @CFFilterQuery + N') AS CFFilteredArticles'
	END

	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

SET @MainContentFilter = N'
;WITH AllContent AS( '
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT ArticleID, CommentedDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID] ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @MainContentFilter = @MainContentFilter + N'n.Featured DESC, '
			
			SET @MainContentFilter = @MainContentFilter + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsComments] AS nc ON nc.ArticleID = n.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		WHERE nc.ArticleID IN (';
	END
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.ArticleID IN ( ';
	END
	
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N' SELECT ArticleID FROM ('
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT na.[ArticleID]
	FROM dbo.[{objectQualifier}EasyDNNNews] AS na '
		SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
		) '

	IF @QueryPermissionsPerArticles = 1
		SET @MainContentFilter = @MainContentFilter + N'
		AND na.HasPermissions = 0 ' 

	IF @QueryPermissionsPerArticles = 1
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		UNION ALL
		SELECT ArticleID FROM (
			SELECT ArticleID FROM (
			SELECT aup.ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup '
				IF @CanEditAllContent = 0
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N' WHERE aup.Show = 1 '
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
					ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
				END
			IF @UserID <> -1
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N'
				UNION
				SELECT arp.ArticleID
				FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' WHERE arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					END
			END
			SET @MainContentFilter = @MainContentFilter + N'
			) AS PermissionsByArticle
			INTERSECT
			SELECT na.[ArticleID]
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na '
			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
			AND EXISTS (
				SELECT ArticleID
				FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
			)
			AND na.HasPermissions = 1
		) AS HasPermissionsTrue '
	END
	
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N') AllBeforeFilters INTERSECT ' + @CFFilterQuery
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	END
	
	IF @OrderByColumnName = N'CommentedDate'
	SET @MainContentFilter = @MainContentFilter + N'
		)
	) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1
	'
SET @MainContentFilter = @MainContentFilter + N'
) '
SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent '

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID],n.[ContactEmail], ';
ELSE
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],n.[ContactEmail], ';

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N'0 AS CanEdit, '
ELSE IF @CanEditAllContent = 1
	SET @sqlcommand = @sqlcommand + N'1 AS CanEdit, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE WHEN @HasEditCategories = 0
	THEN 
		CASE WHEN EXISTS(
			SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	ELSE
		CASE WHEN EXISTS(
			SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE '
			IF @EditOnlyAsOwner = 1
				SET @sqlcommand = @sqlcommand + N' n.UserID = @UserID AND '

			SET @sqlcommand = @sqlcommand + N' c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
		)
		OR EXISTS(
			SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	END
	AS CanEdit, '
END

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
	WHERE EXISTS (
		SELECT ci.CategoryID
		FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS ci
		WHERE c.CategoryID = ci.CategoryID
			AND ci.ArticleID = n.ArticleID
			AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
	)
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, 
	(		SELECT wfs.*, edas.Status,
	( SELECT TOP 1 war.RoleID
						FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveRoles AS war
						INNER JOIN {objectQualifier}UserRoles AS ur ON ur.RoleID = war.RoleID
						WHERE war.StateId = wfs.StateId AND ur.Userid=@userID
					 )  As RoleId,
					( SELECT TOP 1 wau.userId  
					FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveUsers AS wau
					WHERE wau.StateId = wfs.StateId AND wau.Userid =@userID
					)  As EditUserId
		FROM dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs
		LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS edas ON edas.StateId = wfs.StateId AND edas.ArticleId = n.ArticleID
		WHERE wfs.WorkflowId = n.WorkflowId
		ORDER BY wfs.position ASC
		FOR XML PATH(''WorkflowState''), ROOT(''WorkflowStates'')
	) AS WorkflowState,'
ELSE
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", lc.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.Id
	INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, 
	(		SELECT wfs.*, edas.Status,
	( SELECT TOP 1 war.RoleID
						FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveRoles AS war
						INNER JOIN {objectQualifier}UserRoles AS ur ON ur.RoleID = war.RoleID
						WHERE war.StateId = wfs.StateId AND ur.Userid=@userID
					 )  As RoleId,
					( SELECT TOP 1 wau.userId  
					FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveUsers AS wau
					WHERE wau.StateId = wfs.StateId AND wau.Userid =@userID
					)  As EditUserId
		FROM dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs
		LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS edas ON edas.StateId = wfs.StateId AND edas.ArticleId = n.ArticleID
		WHERE wfs.WorkflowId = n.WorkflowId
		ORDER BY wfs.position ASC
		FOR XML PATH(''WorkflowState''), ROOT(''WorkflowStates'')
	) AS WorkflowState,'

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N' 0 AS Published, 0 AS Approve, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE n.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	END AS Published, '
	IF @UserCanApprove = 0
		SET @sqlcommand = @sqlcommand + N'0 AS Approve, '
	ELSE
		SET @sqlcommand = @sqlcommand + N'
			CASE n.Approved
				WHEN 1 THEN 0
				WHEN 0 THEN n.Active
			END AS Approve, '
END

SET @sqlcommand = @sqlcommand + N' @AllContentCount AS ContentCount '

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				
				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + @SecondOrderBy + N') AS Kulike
				FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],fv.' + @OrderByColumnName + ',ROW_NUMBER() OVER (ORDER BY ' IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + @SecondOrderBy + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		WHERE n.ArticleID IN (
			SELECT finalSelection.ArticleID FROM (
				SELECT inner_n.ArticleID, ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				
				SET @sqlcommand = @sqlcommand + N' ' + @CleanOrderColumnWithDirection + @SecondOrderBy + N') AS Kulike
				FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
				WHERE inner_n.ArticleID IN (
					SELECT ArticleID FROM AllContent
					)
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		)';
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.CommentedDate,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				
				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + @SecondOrderBy + N') AS Kulike
				FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],fv.' + @OrderByColumnName + '
				,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, fv.'
				
				IF @OrderByDirection = 'ASC'
					SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + @SecondOrderBy + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode
		WHERE n.ArticleID IN (
			SELECT finalSelection.ArticleID FROM (
				SELECT inner_n.ArticleID, ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + N' ' + @CleanOrderColumnWithDirection + @SecondOrderBy + N') AS Kulike
				FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
				WHERE inner_n.ArticleID IN (SELECT ArticleID FROM AllContent)
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		)';
	END
END

SET @sqlcommand = @sqlcommand + N' ORDER BY ';
IF @FirstOrderBy = 'Featured DESC'
	SET @sqlcommand = @sqlcommand + N'n.Featured DESC, ';
IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
	SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),';

SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N',n.ArticleID';

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#UserEditCategories'') IS NOT NULL
		DROP TABLE #UserEditCategories; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
		DROP TABLE #LocalizedCategories; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRange = @DateRange
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@LocaleCode = @LocaleCode
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@FilterByTagID = @FilterByTagID
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions]    Script Date: 17.12.2018. 15:12:48 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@ArticleID INT,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@PermissionSettingsSource BIT = 1,
	@IsPortalSharing BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
AS
SET NOCOUNT ON;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @ArticleAuthorId INT;

DECLARE @HasPermissionsPerArticle BIT;
IF @IsPortalSharing = 0
	SELECT @HasPermissionsPerArticle = HasPermissions, @ArticleAuthorId = UserID
	FROM dbo.[{objectQualifier}EasyDNNNews]
	WHERE ArticleID = @ArticleID AND PortalID = @PortalID;
ELSE
	SELECT @HasPermissionsPerArticle = HasPermissions, @ArticleAuthorId = UserID
	FROM dbo.[{objectQualifier}EasyDNNNews]
	WHERE ArticleID = @ArticleID
		AND PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID);

IF @HasPermissionsPerArticle IS NOT NULL
BEGIN
	DECLARE @CanView BIT = 0;
	DECLARE @CanEdit BIT = 0;
	CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);

	IF @UserID <> -1
	BEGIN
		IF @IsPortalSharing = 0
			INSERT INTO #UserInRoles
			SELECT DISTINCT r.[RoleID]
			FROM dbo.[{objectQualifier}Roles] AS r
			INNER JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
			WHERE r.PortalID = @PortalID
				AND ur.UserID = @UserID
				AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
				AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);
		ELSE
			INSERT INTO #UserInRoles
			SELECT DISTINCT r.[RoleID]
			FROM dbo.[{objectQualifier}Roles] AS r
			INNER JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
			WHERE r.PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				AND ur.UserID = @UserID
				AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
				AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);
	END

	CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
	--fill #ViewCategories - it is used in main select
	IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
	BEGIN
		IF @IsPortalSharing = 0
			INSERT INTO #ViewCategories
			SELECT [CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
			WHERE PortalID = @PortalID;
		ELSE
			INSERT INTO #ViewCategories
			SELECT [CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
			WHERE PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID);
	END
	ELSE IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings]
				WHERE PortalID = @PortalID
					AND ModuleID IS NULL
					AND RoleID IS NULL
				);
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (
				SELECT [PremissionSettingsID]
				FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings]
				WHERE [PortalID] = @PortalID
					AND [ModuleID] = @ModuleID
					AND [RoleID] IS NULL
				);
	END
	ELSE
	BEGIN
		IF @PermissionSettingsSource = 1
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (
				SELECT [PremissionSettingsID]
				FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings]
				WHERE [PortalID] = @PortalID
					AND [ModuleID] IS NULL
					AND RoleID IN (SELECT [RoleID] FROM #UserInRoles)
				)
			UNION
			SELECT upsc.[CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			WHERE upsc.[PremissionSettingsID] IN (
				SELECT [PremissionSettingsID]
				FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings]
				WHERE [PortalID] = @PortalID
					AND [UserID] = @UserID
					AND [ModuleID] IS NULL
				);
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (
				SELECT [PremissionSettingsID]
				FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings]
				WHERE [ModuleID] = @ModuleID
					AND RoleID IN (SELECT [RoleID] FROM #UserInRoles))
			UNION
			SELECT upsc.[CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			WHERE upsc.[PremissionSettingsID] IN (
				SELECT [PremissionSettingsID]
				FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings]
				WHERE [PortalID] = @PortalID
					AND [UserID] = @UserID
					AND [ModuleID] = @ModuleID
				)
	END

	IF @AdminOrSuperUser = 1
		SET @CanEdit = 1;
	ELSE
	BEGIN
		IF @HasPermissionsPerArticle = 1
		BEGIN
			IF @QueryPermissionsPerArticles = 0
			BEGIN
				IF EXISTS(SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNews] AS n
					WHERE n.ArticleID=@ArticleID
						AND (n.UserID = @UserID OR ((n.Approved = 1 OR @UserCanApprove = 1) AND (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate])))
				)
				SET @CanView = 1;
			END
			ELSE
			BEGIN
				IF @UserID = -1
				BEGIN
					IF EXISTS (SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNews] AS n 
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
						WHERE aup.ArticleID = @ArticleID
							AND aup.UserID IS NULL
							AND (n.Approved = 1 OR @UserCanApprove = 1)
							AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
						)
						SET @CanView = 1;
				END
				ELSE
				BEGIN
					IF EXISTS(SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
						WHERE arp.ArticleID = @ArticleID
							AND arp.Edit = 1
							AND arp.RoleID IN(SELECT [RoleID] FROM #UserInRoles)
					)
					OR EXISTS (SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
						WHERE aup.ArticleID = @ArticleID
							AND aup.Edit = 1
							AND aup.UserID = @UserID
					)
						SET @CanEdit = 1;
					ELSE
						IF EXISTS (SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNews] AS n 
							INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
							WHERE aup.ArticleID = @ArticleID
								AND aup.UserID = @UserID
								AND aup.Show = 1
								AND (n.UserID = @UserID OR ((n.Approved = 1 OR @UserCanApprove = 1) AND (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate])))
							)
						OR EXISTS (SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNews] AS n 
							INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
							WHERE arp.ArticleID = @ArticleID
								AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
								AND arp.Show = 1
								AND (n.UserID = @UserID OR ((n.Approved = 1 OR @UserCanApprove = 1) AND (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate])))
							)
							SET @CanView = 1;
				END
			END
		END
		ELSE
		BEGIN
			-- resolve EDIT RIGHTS
			IF @Perm_EditAllCategores = 1
			BEGIN
				IF @EditOnlyAsOwner = 0 OR @ArticleAuthorId = @UserID
					SET @CanEdit = 1;
			END 
			ELSE
			BEGIN
				DECLARE @HasEditRights BIT = 0;

				IF @UserID = -1
				BEGIN
					IF @PermissionSettingsSource = 1
					BEGIN
						IF EXISTS(SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c
							WHERE c.ArticleID = @ArticleID AND c.CategoryID IN (
								SELECT rpatc.[CategoryID]
								FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
								WHERE rpatc.[PremissionSettingsID] IN (
									SELECT [PremissionSettingsID]
									FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings]
									WHERE [PortalID] = @PortalID
										AND [ModuleID] IS NULL
										AND [RoleID] IS NULL
								)
							)
						)
						SET @HasEditRights = 1;
					END
					ELSE
					BEGIN
						IF EXISTS(SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c
							WHERE c.ArticleID = @ArticleID AND c.CategoryID IN (
								SELECT rpatc.[CategoryID]
								FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
								WHERE rpatc.[PremissionSettingsID] IN (
									SELECT [PremissionSettingsID]
									FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings]
									WHERE [PortalID] = @PortalID
										AND [ModuleID] = @ModuleID
										AND [RoleID] IS NULL
								)
							)
						)
						SET @HasEditRights = 1;
					END
				END
				ELSE
				BEGIN
					IF @PermissionSettingsSource = 1
					BEGIN
						IF EXISTS(SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c
							WHERE c.ArticleID = @ArticleID AND c.CategoryID IN (
								SELECT rpatc.[CategoryID]
								FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
								WHERE rpatc.[PremissionSettingsID] IN (
									SELECT [PremissionSettingsID]
									FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings]
									WHERE [PortalID] = @PortalID
										AND [ModuleID] IS NULL
										AND RoleID IN (SELECT [RoleID] FROM #UserInRoles))
								UNION
								SELECT upatc.[CategoryID]
								FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
								WHERE upatc.[PremissionSettingsID] IN (
									SELECT [PremissionSettingsID]
									FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings]
									WHERE [PortalID] = @PortalID
										AND [UserID] = @UserID
										AND [ModuleID] IS NULL
								)
							)
						)
						SET @HasEditRights = 1;
					END
					ELSE
					BEGIN
						IF EXISTS(SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c
							WHERE c.ArticleID = @ArticleID AND c.CategoryID IN (
								SELECT rpatc.[CategoryID]
								FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
								WHERE rpatc.[PremissionSettingsID] IN (
									SELECT [PremissionSettingsID]
									FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings]
									WHERE [ModuleID] = @ModuleID
										AND RoleID IN (SELECT [RoleID] FROM #UserInRoles)
								)
								UNION
								SELECT upatc.[CategoryID]
								FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
								WHERE upatc.[PremissionSettingsID] IN (
									SELECT [PremissionSettingsID]
									FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings]
									WHERE [UserID] = @UserID
										AND [PortalID] = @PortalID
										AND [ModuleID] = @ModuleID
								)
							)
						)
						SET @HasEditRights = 1;
					END
				END

				IF @HasEditRights = 1 AND (@EditOnlyAsOwner = 0 OR @ArticleAuthorId = @UserID)
					SET @CanEdit = 1;
			END

			IF @CanEdit <> 1
			BEGIN
				IF @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
				BEGIN
					IF EXISTS(SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNews] AS n
						WHERE n.ArticleID=@ArticleID
							AND (n.UserID = @UserID OR ((n.Approved = 1 OR @UserCanApprove = 1) AND (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate])))
					)
					SET @CanView = 1;
				END
				ELSE
				BEGIN
					IF EXISTS (SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID
						INNER JOIN #ViewCategories AS uvc ON uvc.CategoryID = c.CategoryID
						WHERE n.ArticleID=@ArticleID
							AND (n.UserID = @UserID OR ((n.Approved = 1 OR @UserCanApprove = 1) AND (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate])))
						)
						SET @CanView = 1;
				END
			END
		END
	END

	IF @CanEdit = 1 OR @CanView = 1
	BEGIN
		IF @LocaleCode IS NOT NULL AND EXISTS (SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID = @ArticleID AND LocaleCode = @LocaleCode)
		BEGIN
			SELECT n.[ArticleID],n.[PortalID],n.[UserID],ncl.[Title],ncl.[SubTitle],ncl.[Summary],ncl.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active],ncl.[clTitleLink] AS TitleLink,n.[DetailType]
				,ncl.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType],n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme]
				,n.[ArticleImageFolder],n.[NumberOfComments],n.[ArticleImageSet],ncl.[MetaDecription],ncl.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget],n.[ArticleFromRSS]
				,n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],ncl.[MainImageTitle]
				,ncl.[MainImageDescription],n.[CFGroupeID],n.[DetailsDocumentsTemplate],n.[DetailsLinksTemplate],n.[DetailsRelatedArticlesTemplate],n.[ContactEmail],ncl.[TitleTag]
				,n.[OpenGraphMetaTags],n.[TwitterCardMetaTags],[StructuredDataJSON],[GoodVotesCount],[BadVotesCount],@CanEdit AS CanEdit
				,(
					SELECT c.[CategoryID] AS "@id", c.[PortalID] AS "@portalid"
						,CASE WHEN cl.CategoryID IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS "@name", cl.[CategoryURL] AS "@url", c.[Color] AS "@color", cl.[CategoryText] AS "@description", c.[CategoryImage] AS "@image"
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.[CategoryID] = ci.[CategoryID]
					LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.[CategoryID] = cl.[CategoryID] AND cl.[LocaleCode] = @LocaleCode
					WHERE ci.ArticleID = n.ArticleID
					ORDER BY c.Position
					FOR XML PATH('category'), ROOT('categories')
				) AS CatToShow
				,(
					SELECT wfs.*, edas.Status,
					( SELECT TOP 1 war.RoleID
						FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveRoles AS war
						INNER JOIN {objectQualifier}UserRoles AS ur ON ur.RoleID = war.RoleID
						WHERE war.StateId = wfs.StateId AND ur.Userid=@userID
					 )  As RoleId,
					( SELECT TOP 1 wau.userId  
					FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveUsers AS wau
					WHERE wau.StateId = wfs.StateId AND wau.Userid =@userID
					)  As EditUserId
					FROM dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs
					LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS edas ON edas.StateId = wfs.StateId AND edas.ArticleId = n.ArticleID
					WHERE wfs.WorkflowId = n.WorkflowId
					ORDER BY wfs.position ASC
					FOR XML PATH('WorkflowState'), ROOT('WorkflowStates')
				) AS WorkflowState
				,(
					SELECT l.[localeCode] AS "@localeCode"
						,l.[titleLink] AS "@titleLink"
					FROM (
						SELECT cl.[LocaleCode] AS "localeCode"
							,cl.[clTitleLink] AS "titleLink"
						FROM dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl
						WHERE cl.ArticleID = n.ArticleID
						UNION ALL
						SELECT '' AS "localeCode"
							,n.[TitleLink] AS "titleLink"
						FROM dbo.[{objectQualifier}EasyDNNNews] AS n
						WHERE n.ArticleID = @ArticleID
					) AS l
					FOR XML PATH('localization'), ROOT('localizations')
				) AS Localizations
				,CASE WHEN n.Active = 1 THEN 0 ELSE 1 END AS Published
				,CASE @UserCanApprove
					WHEN 0 THEN 0
					WHEN 1 THEN
						CASE n.Approved
						 WHEN 1 THEN 0
						 WHEN 0 THEN
							 CASE n.Active
								WHEN 1 THEN 1
								WHEN 0 THEN 0
							END
						END
				END AS Approve
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
			WHERE n.ArticleID = @ArticleID;
		END
		ELSE
		BEGIN
			SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active],n.[TitleLink],n.[DetailType]
				,n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType],n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme]
				,n.[ArticleImageFolder],n.[NumberOfComments],n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget],n.[ArticleFromRSS]
				,n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle]
				,n.[MainImageDescription],n.[CFGroupeID],n.[DetailsDocumentsTemplate],n.[DetailsLinksTemplate],n.[DetailsRelatedArticlesTemplate],n.[ContactEmail],n.[TitleTag]
				,n.[OpenGraphMetaTags],n.[TwitterCardMetaTags],[StructuredDataJSON],[GoodVotesCount],[BadVotesCount],@CanEdit AS CanEdit
				,(
					SELECT c.[CategoryID] AS "@id", c.[PortalID] AS "@portalid", c.[CategoryName] AS "@name", c.[CategoryURL] AS "@url", c.[Color] AS "@color", c.[CategoryText] AS "@description", c.[CategoryImage] AS "@image"
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
					WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
					ORDER BY c.Position
					FOR XML PATH('category'), ROOT('categories')
				) AS CatToShow
				,(
					SELECT wfs.*, edas.Status,
					( SELECT TOP 1 war.RoleID
						FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveRoles AS war
						INNER JOIN {objectQualifier}UserRoles AS ur ON ur.RoleID = war.RoleID
						WHERE war.StateId = wfs.StateId AND ur.Userid=@userID
					 )  As RoleId,
					( SELECT TOP 1 wau.userId  
					FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveUsers AS wau
					WHERE wau.StateId = wfs.StateId AND wau.Userid =@userID
					)  As EditUserId
					FROM dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs
					LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS edas ON edas.StateId = wfs.StateId AND edas.ArticleId = n.ArticleID
					WHERE wfs.WorkflowId = n.WorkflowId
					ORDER BY wfs.position ASC
					FOR XML PATH('WorkflowState'), ROOT('WorkflowStates')
				) AS WorkflowState
				,(
					SELECT cl.[LocaleCode] AS "@localeCode"
						,cl.[clTitleLink] AS "@titleLink"
					FROM dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl
					WHERE cl.ArticleID = n.ArticleID
					FOR XML PATH('localization'), ROOT('localizations')
				) AS Localizations
				,CASE WHEN n.Active = 1 THEN 0 ELSE 1 END AS Published
				,CASE @UserCanApprove
					WHEN 0 THEN 0
					WHEN 1 THEN
						CASE n.Approved
						 WHEN 1 THEN 0
						 WHEN 0 THEN
							 CASE n.Active
								WHEN 1 THEN 1
								WHEN 0 THEN 0
							END
						END
				END AS Approve
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			WHERE n.ArticleID = @ArticleID;
		END
	END
END

IF OBJECT_ID('tempdb..#UserInRoles') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID('tempdb..#ViewCategories') IS NOT NULL
	DROP TABLE #ViewCategories;
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents]    Script Date: 17.12.2018. 15:12:48 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEvents]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT = 1,
	@ItemsTo INT = 5,
	@DateRangeType TINYINT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 0,
	@FillterSettingsSource BIT = 0,
	@StartDate DATETIME = NULL,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange SMALLINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	@FilterByCustomFields BIT = 0,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
--WITH RECOMPILE
AS
SET NOCOUNT ON;
DECLARE @SecondOrderBy NVARCHAR(30);
SET @SecondOrderBy = N', inner_n.ArticleID ';
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRangeType TINYINT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@StartDate DATETIME
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange SMALLINT
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT';

DECLARE @sqlCommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlCommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT NOT NULL PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM dbo.[{objectQualifier}Roles] AS r
		INNER JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM dbo.[{objectQualifier}Roles] AS r
		INNER JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (Id INT PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX), CategoryURL NVARCHAR(1500)); '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #UserEditCategories (CategoryID INT PRIMARY KEY);
	INSERT INTO #UserEditCategories
	SELECT CategoryID
	FROM dbo.[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)

	DECLARE @HasEditCategories BIT;

	IF EXISTS (SELECT 1 FROM #UserEditCategories)
		SET @HasEditCategories = 1;
	ELSE
		SET @HasEditCategories = 0; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM dbo.[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM dbo.[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM dbo.[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM dbo.[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM dbo.[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM dbo.[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM dbo.[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT NOT NULL PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS Id,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryURL ELSE cl.CategoryURL END AS CategoryURL
	FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategories) '
	
SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

SET @TopInnerFilter = N' WHERE ' + @sqlSharingPortal;

	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			INNER JOIN dbo.[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmd.GoogleMapID = gmc.GoogleMapID AND gmd.PointData <> N''''
			WHERE gmc.ArticleID = na.ArticleID
		) '
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc
			WHERE gmc.ArticleID = na.ArticleID
		) '

	IF @HideUnlocalizedItems = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl
			WHERE ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode
		) '

	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN dbo.[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = nss.ArticleID
			WHERE nss.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		) '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT nss.ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss
			INNER JOIN dbo.[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			WHERE nss.ArticleID = na.ArticleID
		) '

	IF @FilterByTags = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti
			INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID
			WHERE ti.ArticleID = na.ArticleID
		) '
	
	IF @FilterByArticles = 1
		SET @TopInnerFilter = @TopInnerFilter + N'
		AND EXISTS (
			SELECT ArticleID
			FROM @FilterArticlesTable AS fba
			WHERE fba.ArticleID = na.ArticleID
		) '

	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL 
			SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE
		SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '

	IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
	
	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0
			SET @TopInnerFilter = @TopInnerFilter + N' AND (na.UserID = @UserID OR (na.Active = 1 AND na.Approved = 1)) '
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N' AND (na.UserID = @UserID OR na.Active = 1) '
	END

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM dbo.[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END
IF @OrderByColumnName = N'NEWID()'
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

IF @FilterByCustomFields = 1
BEGIN
	DECLARE @CFFilterQuery NVARCHAR(MAX);
	DECLARE @FiltersCountSimple INT;
	DECLARE @FiltersCountMulti INT;

	DECLARE @CFFilterTableSimple TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		CFWhereRoule NVARCHAR(630)
	)
	DECLARE @CFFilterTableMulti TABLE(
		RowID INT PRIMARY KEY IDENTITY(1,1),
		ElementsCount INT NOT NULL ,
		LogicalOperator NVARCHAR(10) NOT NULL,
		CFWhereRoule NVARCHAR(MAX) NOT NULL
	)

	IF @FillterSettingsSource = 1
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE PortalID = @PortalID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE PortalID = @PortalID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID) FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[PortalID] = @PortalID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	ELSE
	BEGIN
		INSERT INTO @CFFilterTableSimple
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFBit] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFDateTime] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFDecimal] WHERE ModuleID = @ModuleID
		UNION ALL
		SELECT 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND ' + [QueryRule] FROM dbo.[{objectQualifier}EasyDNNnewsFilterByCFInteger] WHERE ModuleID = @ModuleID;
		SET @FiltersCountSimple = @@ROWCOUNT;
		
		INSERT INTO @CFFilterTableMulti
		SELECT ElementsCount,LogicalOperator, CFQueryRoule FROM (
			SELECT mv.Id,mv.LogicalOperator,(SELECT COUNT(FieldElementID)
				FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme
				WHERE fme.[MultiCFId] = mv.[Id]) AS ElementsCount, 'cf.[CustomFieldID] = ' + STR(CustomFieldID) + ' AND cf.FieldElementID IN (' + STUFF((SELECT ',' + STR(fme.FieldElementID) FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.[MultiCFId] = mv.[Id] FOR XML PATH('')), 1, 1, '') + ')' AS CFQueryRoule
			FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiCF] AS mv
			WHERE mv.[ModuleID] = @ModuleID
		) AS AllCfData WHERE EXISTS (SELECT 1 FROM dbo.[{objectQualifier}EasyDNNnewsFilterByMultiElements] AS fme WHERE fme.MultiCFId = AllCfData.Id)
		SET @FiltersCountMulti = @@ROWCOUNT;
	END
	
	IF @FiltersCountMulti > 0 OR @FiltersCountSimple > 0
	BEGIN
		DECLARE @CurrentRow INT;
		DECLARE @ElementsCount INT;
		DECLARE @LogicalOperator NVARCHAR(10);

		SET @CFFilterQuery = N'SELECT CFFilteredArticles.ArticleID FROM (';
	
		IF @FiltersCountMulti > 0
		BEGIN	
			SET @CurrentRow = 0;
			DECLARE @FilterValueMulti NVARCHAR(MAX);
			WHILE @CurrentRow < @FiltersCountMulti
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @ElementsCount = ElementsCount, @LogicalOperator = LogicalOperator, @FilterValueMulti = CFWhereRoule FROM @CFFilterTableMulti WHERE RowID = @CurrentRow;

				IF @LogicalOperator = N'AND'
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT ArticleID FROM (
	  SELECT ArticleID, ROW_NUMBER() OVER (PARTITION BY cf.[ArticleID] ORDER BY cf.[ArticleID] DESC ) AS Recency
	  FROM dbo.[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf
	  WHERE ' + @FilterValueMulti + '
) AS OnlyWithGoogleMaps
WHERE Recency >= ' + STR(@ElementsCount) + ' '
				END
				ELSE
				BEGIN
					SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM dbo.[{objectQualifier}EasyDNNNews] AS n
INNER JOIN dbo.[{objectQualifier}EasyDNNfieldsMultiSelected] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueMulti + ' '
				END
				
			IF @CurrentRow < @FiltersCountMulti OR @FiltersCountSimple > 0
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END
		END
	
		IF @FiltersCountSimple > 0
		BEGIN
			SET @CurrentRow = 0;
			DECLARE @FilterValueSimple NVARCHAR(630);
			WHILE @CurrentRow < @FiltersCountSimple
			BEGIN
				SET @CurrentRow = @CurrentRow + 1;
				SELECT @FilterValueSimple = CFWhereRoule FROM @CFFilterTableSimple WHERE RowID = @CurrentRow;

				SET @CFFilterQuery = @CFFilterQuery +
N'SELECT n.[ArticleID]
FROM dbo.[{objectQualifier}EasyDNNNews] AS n
INNER JOIN dbo.[{objectQualifier}EasyDNNfieldsValues] AS cf ON cf.ArticleID = n.ArticleID
WHERE ' + @FilterValueSimple + ' '

			IF @CurrentRow < @FiltersCountSimple
				SET @CFFilterQuery = @CFFilterQuery + N' INTERSECT '
			END

		END

		SET @CFFilterQuery = @CFFilterQuery + N') AS CFFilteredArticles'
	END

	IF @CFFilterQuery IS NULL
		SET @FilterByCustomFields = 0;
END

SET @MainContentFilter = N'
;WITH AllContent AS( '

	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT ArticleID, CommentedDate,RecurringID,StartDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,inner_all.RecurringID
			,inner_all.StartDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID], inner_all.RecurringID ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @MainContentFilter = @MainContentFilter + N'inner_all.Featured DESC, '
			
			SET @MainContentFilter = @MainContentFilter + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
			
		FROM dbo.[{objectQualifier}EasyDNNNewsComments] AS nc
		INNER JOIN (';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT n.ArticleID,n.Featured,
		CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate,
		CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
	FROM dbo.[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
	IF @DateRangeType = 3
		SET @MainContentFilter = @MainContentFilter + N' nerd.EndDateTime < @CurrentDate'
	ELSE IF @DateRangeType = 2
		SET @MainContentFilter = @MainContentFilter + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 1
		BEGIN
			IF @ListArchive = 0
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
			ELSE
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
		END
	ELSE IF @DateRangeType = 0
		SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE
		SET @MainContentFilter = @MainContentFilter + N' 1 = 0'
	
	SET @MainContentFilter = @MainContentFilter + N'
	WHERE n.ArticleID IN( '
	 
	 -- tu bi trebal staviti okolo da se filtrira po and !!!
	 
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.ArticleID IN ( ';
	END
	 
	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N' SELECT ArticleID FROM ('
	 
	SET @MainContentFilter = @MainContentFilter + N'
		SELECT na.[ArticleID]
		FROM dbo.[{objectQualifier}EasyDNNNews] AS na ' -- normal and recurring event normal permissions
			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
			AND EXISTS (
				SELECT ArticleID
				FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
			)
			AND EXISTS (
				SELECT ArticleID
				FROM dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne
				WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
				IF @DateRangeType = 3
					SET @MainContentFilter = @MainContentFilter + N' AND ne.EndDate < @CurrentDate'
				ELSE IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
					ELSE
						SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
				END
				ELSE IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

			SET @MainContentFilter = @MainContentFilter + N'
				UNION ALL
				SELECT ArticleID
				FROM dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne
				WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					AND EXISTS (
						SELECT ArticleID
						FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
						WHERE nerd.ArticleID = ne.ArticleID '
						IF @DateRangeType = 3
							SET @MainContentFilter = @MainContentFilter + N' AND nerd.EndDateTime < @CurrentDate'
						ELSE IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N'
							AND ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
								ELSE
									SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
							END
						ELSE IF @DateRangeType = 0
							SET @MainContentFilter = @MainContentFilter + N' AND (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
				
					SET @MainContentFilter = @MainContentFilter + N'
					)
			) '

		IF @QueryPermissionsPerArticles = 1
			SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

	IF @QueryPermissionsPerArticles = 1
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		UNION ALL
		SELECT na.[ArticleID]
		FROM dbo.[{objectQualifier}EasyDNNNews] AS na ' -- normal and recurring events user/role permissions
			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
			AND EXISTS (
				SELECT ArticleID
				FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE c.ArticleID = na.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
			)
			AND EXISTS (
				SELECT ArticleID
				FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = na.ArticleID '
				IF @CanEditAllContent = 0
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
					ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
				END
				IF @UserID <> -1
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT ArticleID
					FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
					WHERE arp.ArticleID = na.ArticleID '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					END
				END
			
			SET @MainContentFilter = @MainContentFilter + N'
			)
			AND EXISTS (
				SELECT ArticleID
				FROM dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne
				WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '
				IF @DateRangeType = 3
					SET @MainContentFilter = @MainContentFilter + N' AND ne.EndDate < @CurrentDate'
				ELSE IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
					ELSE
						SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
				END
				ELSE IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

			SET @MainContentFilter = @MainContentFilter + N'
				UNION ALL
				SELECT ArticleID
				FROM dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne
				WHERE ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					AND EXISTS (
						SELECT ArticleID
						FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd
						WHERE nerd.ArticleID = ne.ArticleID '
						IF @DateRangeType = 3
							SET @MainContentFilter = @MainContentFilter + N' AND nerd.EndDateTime < @CurrentDate'
						ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						AND ((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
								ELSE
									SET @MainContentFilter = @MainContentFilter + N' AND nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
							END
						ELSE IF @DateRangeType = 0
							SET @MainContentFilter = @MainContentFilter + N' AND (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					
					SET @MainContentFilter = @MainContentFilter + N'
					)
			) '
		END

	IF @FilterByCustomFields = 1
		SET @MainContentFilter = @MainContentFilter + N') AllBeforeFilters INTERSECT ' + @CFFilterQuery
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'
	) '
	
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON nc.ArticleID = inner_all.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1'
	END
	
SET @MainContentFilter = @MainContentFilter + N' 
) '

SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent '

SET @sqlcommand = @sqlcommand + @MainContentFilter

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
	,e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], '
ELSE
SET @sqlcommand = @sqlcommand + N'
SELECT n.[ArticleID],n.[PortalID],n.[UserID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
	,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
	,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
	,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
	,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
	,n.[DetailType]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
	,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
	,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
	,n.[ArticleImageSet]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
	,n.[DisplayStyle],n.[DetailTarget]
	,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
	,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
	,n.[CFGroupeID],e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], ';

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N'0 AS CanEdit, '
ELSE IF @CanEditAllContent = 1
	SET @sqlcommand = @sqlcommand + N'1 AS CanEdit, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE WHEN @HasEditCategories = 0
	THEN 
		CASE WHEN EXISTS(
			SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	ELSE
		CASE WHEN EXISTS(
			SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c
			WHERE '
			IF @EditOnlyAsOwner = 1
				SET @sqlcommand = @sqlcommand + N' n.UserID = @UserID AND '

			SET @sqlcommand = @sqlcommand + N' c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
		)
		OR EXISTS(
			SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
			WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
		)
		OR EXISTS(
			SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
			WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
		)
		THEN 1 ELSE 0
		END
	END
	AS CanEdit, '
END

IF @LocaleCode IS NULL
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
	WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow,
	(		SELECT wfs.*, edas.Status,
	( SELECT TOP 1 war.RoleID
						FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveRoles AS war
						INNER JOIN {objectQualifier}UserRoles AS ur ON ur.RoleID = war.RoleID
						WHERE war.StateId = wfs.StateId AND ur.Userid=@userID
					 )  As RoleId,
					( SELECT TOP 1 wau.userId  
					FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveUsers AS wau
					WHERE wau.StateId = wfs.StateId AND wau.Userid =@userID
					)  As EditUserId
		FROM dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs
		LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS edas ON edas.StateId = wfs.StateId AND edas.ArticleId = n.ArticleID
		WHERE wfs.WorkflowId = n.WorkflowId
		ORDER BY wfs.position ASC
		FOR XML PATH(''WorkflowState''), ROOT(''WorkflowStates'')
	) AS WorkflowState, '
ELSE
SET @sqlcommand = @sqlcommand + N'
	(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", lc.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
	FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
	INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.Id
	INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
	WHERE ci.ArticleID = n.ArticleID
	ORDER BY c.Position
	FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow,
	(		SELECT wfs.*, edas.Status,
	( SELECT TOP 1 war.RoleID
						FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveRoles AS war
						INNER JOIN {objectQualifier}UserRoles AS ur ON ur.RoleID = war.RoleID
						WHERE war.StateId = wfs.StateId AND ur.Userid=@userID
					 )  As RoleId,
					( SELECT TOP 1 wau.userId  
					FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveUsers AS wau
					WHERE wau.StateId = wfs.StateId AND wau.Userid =@userID
					)  As EditUserId
		FROM dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs
		LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS edas ON edas.StateId = wfs.StateId AND edas.ArticleId = n.ArticleID
		WHERE wfs.WorkflowId = n.WorkflowId
		ORDER BY wfs.position ASC
		FOR XML PATH(''WorkflowState''), ROOT(''WorkflowStates'')
	) AS WorkflowState, '

IF @QueryModulePermissions = 0
	SET @sqlcommand = @sqlcommand + N' 0 AS Published, 0 AS Approve, '
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CASE n.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	END AS Published, '
	IF @UserCanApprove = 0
		SET @sqlcommand = @sqlcommand + N'0 AS Approve, '
	ELSE
		SET @sqlcommand = @sqlcommand + N'
			CASE n.Approved
				WHEN 1 THEN 0
				WHEN 0 THEN n.Active
			END AS Approve, '
END

SET @sqlcommand = @sqlcommand + N' @AllContentCount AS ContentCount '

IF @LocaleCode IS NULL
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC'
					SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
					
				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + @SecondOrderBy + N') AS Kulike
				FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N',e_fsd.' + @OrderByColumnName + ',(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END)
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				IF @OrderByDirection = 'ASC' SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + @SecondOrderBy + N') AS Kulike
				FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + @SecondOrderBy + N') AS Kulike
				FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '
	END
END
ELSE
BEGIN
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				
				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + @SecondOrderBy + N') AS Kulike
				FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE IF @OrderByCustomFieldID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

				IF @OrderByDirection = 'ASC' SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
				SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + @SecondOrderBy + N') AS Kulike
				FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN (
			SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
			FROM (
				SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
					,ROW_NUMBER() OVER (ORDER BY '
				IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
					
				SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + @SecondOrderBy + N') AS Kulike
				FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
				INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
			) AS finalSelection
			WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
		) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
		LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
	END
END

SET @sqlcommand = @sqlcommand + N' ORDER BY ';
IF @FirstOrderBy = 'Featured DESC'
	SET @sqlcommand = @sqlcommand + N'Featured DESC, ';
IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
	SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),';

SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N',n.ArticleID';

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#UserEditCategories'') IS NOT NULL
		DROP TABLE #UserEditCategories; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
		DROP TABLE #LocalizedCategories; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRangeType = @DateRangeType
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@StartDate = @StartDate
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForArticleEditor]    Script Date: 17.12.2018. 15:12:48 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForArticleEditor]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForArticleEditor] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsCountForArticleEditor]
	@PortalID INT, -- current Portal
	@ModuleID INT, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID INT,
	@ItemsFrom INT = 1,
	@ItemsTo INT = 5,
	@inCategories NVARCHAR(2000) = NULL,
	@FilterByAuthor INT = 0, -- ako se selektiran jedan autor
	@FilterByGroupID INT = 0, -- ako je selektirana grupa
	@EditOnlyAsOwner BIT = 0, -- news settings
	@UserCanApprove BIT = 0, -- news settings
	@Perm_ViewAllCategores BIT = 0, -- permission settings View all categories
	@Perm_EditAllCategores BIT = 0, -- permission settings Edit all categories
	@AdminOrSuperUser BIT = 0,
	@PermissionSettingsSource BIT = 1, -- 1 portal, 0 module
	@OrderBy NVARCHAR(20) = 'PublishDate DESC',
	@OrderBy2 NVARCHAR(20) = '',
	
	@Featured TINYINT = 0,
	@Published TINYINT = 0,
	@Approved TINYINT = 0,
	@ArticleType TINYINT = 0,
	@PermissionsByArticle TINYINT = 0,
	@SimpleSearchFindCondition NVARCHAR(2048) = NULL,
	@StartDate DATETIME = NULL,
	@FilterByCustomFieldTemplate INT = NULL
AS
SET NOCOUNT ON;
DECLARE @CategoryFilter TABLE (Id INT NOT NULL);

IF @inCategories IS NOT NULL
	INSERT INTO @CategoryFilter
	SELECT fp.KeyID FROM dbo.[{objectQualifier}EDS_StringListToTable](@inCategories) AS fp

DECLARE @EditPermission TINYINT;
SET @EditPermission = 0;
DECLARE @UserInRoles TABLE (RoleID INT NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT ur.[RoleID] FROM dbo.[{objectQualifier}UserRoles] AS ur INNER JOIN dbo.[{objectQualifier}Roles] AS r ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > GETUTCDATE()) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < GETUTCDATE());
DECLARE @UserEditCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions

DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;
DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY);
IF @FilterByAuthor <> 0
BEGIN
	SET @FilterAuthorOrAuthors = 1;
	INSERT INTO @TempAuthorsIDList SELECT @FilterByAuthor;
END
ELSE IF @FilterByGroupID <> 0
BEGIN
	SET @FilterAuthorOrAuthors = 1;
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
		WHERE agi.GroupID = @FilterByGroupID
END

-- kategorije sa edit pravima
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	SET @EditPermission = 1;
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upatc.[CategoryID];
		END	
	END
	IF EXISTS(SELECT TOP (1) * FROM @UserEditCategories) BEGIN SET @EditPermission = 2; END
END

IF @inCategories IS NOT NULL
BEGIN
	 DELETE uec FROM @UserEditCategories AS uec WHERE uec.CategoryID NOT IN (SELECT Id FROM @CategoryFilter);
END

DECLARE @SearchTable TABLE (Words NVARCHAR(256) NOT NULL);
IF @SimpleSearchFindCondition IS NOT NULL
	DECLARE @word NVARCHAR(256), @PosWord INT
	SET @SimpleSearchFindCondition = LTRIM(RTRIM(@SimpleSearchFindCondition))+ ':'
	SET @PosWord = CHARINDEX(':', @SimpleSearchFindCondition, 1)
	IF REPLACE(@SimpleSearchFindCondition, ':', '') <> ''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SimpleSearchFindCondition, @PosWord - 1)))
			IF @word <> ''
			BEGIN
				SET @word = replace(
							replace(
							replace(
							replace( @word
							,'\', '\\' )
							,'%', '\%' )
							,'_', '\_' )
							,'[', '\[' )
				INSERT INTO @SearchTable (Words) VALUES ('% '+@word+'%')
				INSERT INTO @SearchTable (Words) VALUES (@word+'%')
			END
			SET @SimpleSearchFindCondition = RIGHT(@SimpleSearchFindCondition, LEN(@SimpleSearchFindCondition) - @PosWord)
			SET @PosWord = CHARINDEX(':', @SimpleSearchFindCondition, 1)
		END
	END

SELECT Count(ArticleID)
FROM (
	SELECT n.ArticleID
	FROM dbo.[{objectQualifier}EasyDNNNews] AS n
	LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ed ON ed.ArticleID = n.ArticleID
	WHERE (@StartDate IS NULL OR ed.ArticleID IS NULL OR (ed.StartDate >= @StartDate))
		AND n.ArticleID IN (
			SELECT ArticleID
			FROM (
				SELECT na.[ArticleID]
				FROM dbo.[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
					INNER JOIN @UserEditCategories AS uec ON uec.CategoryID = cat.CategoryID
					LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflows] AS wf ON na.WorkflowId = wf.Id AND @Approved = 3
					LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs ON wfs.WorkflowId = wf.Id AND @Approved = 3
					LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS sai ON sai.ArticleId = na.ArticleID AND @Approved = 3
					LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateApproveRoles] AS war ON war.StateId = sai.StateId
					LEFT JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = war.RoleID AND @Approved = 3 AND wfs.AllUserEdit=0
					LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateApproveUsers] AS wau ON wau.StateId = sai.StateId AND wfs.AllUserEdit=0 
				WHERE na.PortalID=@PortalID
					AND na.HasPermissions = 0
					AND ((@Approved = 3) OR (@Approved = 0) OR ((@Approved = 1 AND na.Approved = 1) OR (@Approved = 2 AND na.Approved = 0)))
					AND ((@ArticleType = 0) OR ((@ArticleType = 1 AND na.EventArticle = 0) OR (@ArticleType = 2 AND na.EventArticle = 1)))
					AND ((@PermissionsByArticle = 0) OR ((@PermissionsByArticle = 1 AND na.HasPermissions = 1) OR (@PermissionsByArticle = 2 AND na.HasPermissions = 0)))
					AND ((@Published = 3 AND sai.Status = 1 AND (wfs.WorkflowStateType=2 OR wfs.WorkflowStateType=3)) OR (@Published = 0) OR ((@Published = 1 AND na.Active = 1) OR (@Published = 2 AND na.Active = 0)))
					AND ((@Featured = 0) OR ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 2 AND na.Featured = 0)))
					AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
					AND (@FilterByCustomFieldTemplate IS NULL OR na.CFGroupeID = @FilterByCustomFieldTemplate)
					AND ((@Published = 3 and wau.UserId=@userID ) OR (@Published = 3 AND ur.Userid=@userID ) OR (@Published = 3 AND (wfs.WorkflowStateType=2 OR wfs.WorkflowStateType=3) AND wfs.AllUserEdit=1)OR @Published <>3 )
				UNION ALL
				SELECT ArticleID
				FROM (
					SELECT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflows] AS wf ON na.WorkflowId = wf.Id AND @Approved = 3
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs ON wfs.WorkflowId = wf.Id AND @Approved = 3
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS sai ON sai.ArticleId = na.ArticleID AND @Approved = 3
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateApproveRoles] AS war ON war.StateId = sai.StateId
						LEFT JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = war.RoleID AND @Approved = 3 AND wfs.AllUserEdit=0
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateApproveUsers] AS wau ON wau.StateId = sai.StateId AND wfs.AllUserEdit=0 
					WHERE na.PortalID=@PortalID
						AND ((@EditPermission = 1) OR ((aup.Edit = 1) AND ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))))
						AND na.HasPermissions = 1
						AND ((@Approved = 3) OR (@Approved = 0) OR ((@Approved = 1 AND na.Approved = 1) OR (@Approved = 2 AND na.Approved = 0)))
						AND ((@ArticleType = 0) OR ((@ArticleType = 1 AND na.EventArticle = 0) OR (@ArticleType = 2 AND na.EventArticle = 1)))
						AND ((@PermissionsByArticle = 0) OR ((@PermissionsByArticle = 1 AND na.HasPermissions = 1) OR (@PermissionsByArticle = 2 AND na.HasPermissions = 0)))
						AND ((@Published = 3 AND sai.Status = 1 AND (wfs.WorkflowStateType=2 OR wfs.WorkflowStateType=3)) OR (@Published = 0) OR ((@Published = 1 AND na.Active = 1) OR (@Published = 2 AND na.Active = 0)))
						AND ((@Featured = 0) OR ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 2 AND na.Featured = 0)))
						AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
						AND (@inCategories IS NULL OR cat.CategoryID IN (SELECT Id FROM @CategoryFilter))
						AND (@FilterByCustomFieldTemplate IS NULL OR na.CFGroupeID = @FilterByCustomFieldTemplate)
						AND ((@Published = 3 and wau.UserId=@userID ) OR (@Published = 3 AND ur.Userid=@userID ) OR (@Published = 3 AND (wfs.WorkflowStateType=2 OR wfs.WorkflowStateType=3) AND wfs.AllUserEdit=1)OR @Published <>3 )
					UNION
					SELECT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflows] AS wf ON na.WorkflowId = wf.Id AND @Approved = 3
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs ON wfs.WorkflowId = wf.Id AND @Approved = 3
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS sai ON sai.ArticleId = na.ArticleID AND @Approved = 3
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateApproveRoles] AS war ON war.StateId = sai.StateId
						LEFT JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = war.RoleID AND @Approved = 3 AND wfs.AllUserEdit=0
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateApproveUsers] AS wau ON wau.StateId = sai.StateId AND wfs.AllUserEdit=0 
					WHERE na.PortalID=@PortalID
						AND na.HasPermissions = 1
						AND ((@EditPermission = 1) OR ((arp.Edit = 1) AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
						AND ((@Approved = 3) OR (@Approved = 0) OR ((@Approved = 1 AND na.Approved = 1) OR (@Approved = 2 AND na.Approved = 0)))
						AND ((@ArticleType = 0) OR ((@ArticleType = 1 AND na.EventArticle = 0) OR (@ArticleType = 2 AND na.EventArticle = 1)))
						AND ((@PermissionsByArticle = 0) OR ((@PermissionsByArticle = 1 AND na.HasPermissions = 1) OR (@PermissionsByArticle = 2 AND na.HasPermissions = 0)))
						AND ((@Published = 3 AND sai.Status = 1 AND (wfs.WorkflowStateType=2 OR wfs.WorkflowStateType=3)) OR (@Published = 0) OR ((@Published = 1 AND na.Active = 1) OR (@Published = 2 AND na.Active = 0)))
						AND ((@Featured = 0) OR ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 2 AND na.Featured = 0)))
						AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
						AND (@inCategories IS NULL OR cat.CategoryID IN (SELECT Id FROM @CategoryFilter))
						AND (@FilterByCustomFieldTemplate IS NULL OR na.CFGroupeID = @FilterByCustomFieldTemplate)
						AND ((@Published = 3 and wau.UserId=@userID ) OR (@Published = 3 AND ur.Userid=@userID ) OR (@Published = 3 AND (wfs.WorkflowStateType=2 OR wfs.WorkflowStateType=3) AND wfs.AllUserEdit=1)OR @Published <>3 )
				) AS WithPerm
			) AS AllArticles
			WHERE (@SimpleSearchFindCondition IS NULL OR (
					AllArticles.ArticleID IN (
						SELECT na.[ArticleID]
						FROM dbo.[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\')
						WHERE na.PortalID=@PortalID
						UNION
						SELECT ti.[ArticleID]
						FROM dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
						INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
						WHERE t.PortalID=@PortalID
						UNION
						SELECT di.ArticleID
						FROM dbo.[{objectQualifier}EasyDNNNewsDocumentItems] AS di
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsDocuments] AS d ON di.DocumentID = d.DocEntryID
						INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE '\' OR d.Description LIKE st.Words ESCAPE '\')
						WHERE d.PortalID=@PortalID
							AND d.Visible = 1
						UNION
						SELECT li.ArticleID
						FROM dbo.[{objectQualifier}EasyDNNNewsLinkItems] AS li
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsLinks] AS l ON li.LinkID = l.LinkID
						INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE '\' OR l.Description LIKE st.Words ESCAPE '\')
						WHERE l.PortalID=@PortalID
					)
				)
			)
		)
) AS final
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForArticleEditor]    Script Date: 17.12.2018. 15:12:48 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForArticleEditor]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForArticleEditor] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForArticleEditor]
	@PortalID INT, -- current Portal
	@ModuleID INT, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID INT,
	@ItemsFrom INT = 1,
	@ItemsTo INT = 5,
	@inCategories NVARCHAR(2000) = NULL,
	@FilterByAuthor INT = 0, -- ako se selektiran jedan autor
	@FilterByGroupID INT = 0, -- ako je selektirana grupa
	@EditOnlyAsOwner BIT = 0, -- news settings
	@UserCanApprove BIT = 0, -- news settings
	@Perm_ViewAllCategores BIT = 0, -- permission settings View all categories
	@Perm_EditAllCategores BIT = 0, -- permission settings Edit all categories
	@AdminOrSuperUser BIT = 0,
	@PermissionSettingsSource BIT = 1, -- 1 portal, 0 module
	@OrderBy NVARCHAR(20) = 'PublishDate DESC',
	@OrderBy2 NVARCHAR(20) = '',
	
	@Featured TINYINT = 0,
	@Published TINYINT = 0,
	@Approved TINYINT = 0,
	@ArticleType TINYINT = 0,
	@PermissionsByArticle TINYINT = 0,
	@SimpleSearchFindCondition NVARCHAR(2048) = NULL,
	@StartDate DATETIME = NULL,
	@FilterByCustomFieldTemplate INT = NULL
AS
SET NOCOUNT ON;
DECLARE @CategoryFilter TABLE (Id INT NOT NULL);

IF @inCategories IS NOT NULL
	INSERT INTO @CategoryFilter
	SELECT fp.KeyID FROM dbo.[{objectQualifier}EDS_StringListToTable](@inCategories) AS fp

DECLARE @EditPermission TINYINT;
SET @EditPermission = 0;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();
DECLARE @UserInRoles TABLE (RoleID INT NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT r.[RoleID] FROM dbo.[{objectQualifier}Roles] AS r INNER JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);
DECLARE @UserEditCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions

DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;
DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY);
IF @FilterByAuthor <> 0
BEGIN
	SET @FilterAuthorOrAuthors = 1;
	INSERT INTO @TempAuthorsIDList SELECT @FilterByAuthor;
END
ELSE IF @FilterByGroupID <> 0
BEGIN
	SET @FilterAuthorOrAuthors = 1;
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
		WHERE agi.GroupID = @FilterByGroupID
END

-- kategorije sa edit pravima
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	SET @EditPermission = 1;
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upatc.[CategoryID];
		END	
	END
	IF EXISTS(SELECT TOP (1) * FROM @UserEditCategories) BEGIN SET @EditPermission = 2; END
END

IF @inCategories IS NOT NULL
BEGIN
	 DELETE uec FROM @UserEditCategories AS uec WHERE uec.CategoryID NOT IN (SELECT Id FROM @CategoryFilter);
END

DECLARE @SearchTable TABLE (Words NVARCHAR(256) NOT NULL);
IF @SimpleSearchFindCondition IS NOT NULL
	DECLARE @word NVARCHAR(256), @PosWord INT
	SET @SimpleSearchFindCondition = LTRIM(RTRIM(@SimpleSearchFindCondition))+ ':'
	SET @PosWord = CHARINDEX(':', @SimpleSearchFindCondition, 1)
	IF REPLACE(@SimpleSearchFindCondition, ':', '') <> ''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SimpleSearchFindCondition, @PosWord - 1)))
			IF @word <> ''
			BEGIN
				SET @word = replace(
							replace(
							replace(
							replace( @word
							,'\', '\\' )
							,'%', '\%' )
							,'_', '\_' )
							,'[', '\[' )
				INSERT INTO @SearchTable (Words) VALUES ('% '+@word+'%')
				INSERT INTO @SearchTable (Words) VALUES (@word+'%')
			END
			SET @SimpleSearchFindCondition = RIGHT(@SimpleSearchFindCondition, LEN(@SimpleSearchFindCondition) - @PosWord)
			SET @PosWord = CHARINDEX(':', @SimpleSearchFindCondition, 1)
		END
	END

SELECT AllNewsItems.[ArticleID]
	,AllNewsItems.[UserID]
	,AllNewsItems.[Title]
	,AllNewsItems.[SubTitle]
	,AllNewsItems.[ArticleImage]
	,AllNewsItems.[DateAdded]
	,AllNewsItems.[LastModified]
	,AllNewsItems.[PublishDate]
	,AllNewsItems.[ExpireDate]
	,AllNewsItems.[NumberOfViews]
	,AllNewsItems.[RatingValue]
	,AllNewsItems.[RatingCount]
	,AllNewsItems.[TitleLink]
	,AllNewsItems.[DetailType]
	,AllNewsItems.[DetailTypeData]
	,AllNewsItems.[ArticleImageFolder]
	,AllNewsItems.[NumberOfComments]
	,AllNewsItems.[DetailTarget]
	,AllNewsItems.[HasPermissions]
	,AllNewsItems.[EventArticle]
	,AllNewsItems.[DetailMediaType]
	,AllNewsItems.[DetailMediaData]
	,AllNewsItems.[Featured]
	,AllNewsItems.[Approved]
	,AllNewsItems.[AllowComments]
	,AllNewsItems.[Active]
	,AllNewsItems.[ArticleImageSet]
	,AllNewsItems.[CFGroupeID]
	,AllNewsItems.[WorkflowId]
	,AllNewsItems.[EventStartDate],
	CASE WHEN u.DisplayName IS NULL THEN 'Anonym' ELSE u.DisplayName END AS DisplayName,
	CASE @EditPermission 
		WHEN 0 THEN 0
		WHEN 1 THEN 1
		WHEN 2 THEN
		CASE @EditOnlyAsOwner
			WHEN 0 THEN
				CASE WHEN EXISTS(SELECT CategoryID FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = AllNewsItems.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
					THEN 1
					ELSE
						CASE WHEN EXISTS(SELECT [ArticleID] FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = AllNewsItems.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
							CASE WHEN EXISTS (SELECT [ArticleID] FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = AllNewsItems.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
								THEN 1
								ELSE 0
							END
						END
				END
			WHEN 1 THEN
				CASE WHEN EXISTS(SELECT CategoryID FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c WHERE AllNewsItems.UserID = @UserID AND c.ArticleID = AllNewsItems.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
					THEN 1
					ELSE
						CASE WHEN EXISTS(SELECT [ArticleID] FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = AllNewsItems.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
							CASE WHEN EXISTS (SELECT [ArticleID] FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = AllNewsItems.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
								THEN 1
								ELSE 0
							END
						END 
				END
		END
		WHEN 3 THEN
			CASE WHEN EXISTS(SELECT [ArticleID] FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = AllNewsItems.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
				THEN 1
				ELSE
				CASE WHEN EXISTS (SELECT [ArticleID] FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = AllNewsItems.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
					THEN 1
					ELSE 0
					END
				END 
	END AS CanEdit,
	 CASE AllNewsItems.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	 END AS Published,
	 CASE @UserCanApprove
		WHEN 0 THEN 0
		WHEN 1 THEN
			CASE AllNewsItems.Approved
			 WHEN 1 THEN 0
			 WHEN 0 THEN
				 CASE AllNewsItems.Active
					WHEN 1 THEN 1
					WHEN 0 THEN 0
				END
			END
	 END AS Approve,
	 CASE WHEN AllNewsItems.EventArticle = 1 AND EXISTS (SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = AllNewsItems.ArticleID)
	   THEN 1 ELSE 0 END
	 AS IsRecurring,
	 (CASE WHEN AllNewsItems.EventType IS NULL THEN 0 ELSE 1 END) AS RegistrationEnabled,
	 (CASE WHEN AllNewsItems.InnerPaymentEnabled IS NULL THEN 0 ELSE AllNewsItems.InnerPaymentEnabled END) AS PaymentEnabled	 
	FROM (
		SELECT n.[ArticleID]
			,n.[UserID]
			,n.[Title]
			,n.[SubTitle]
			,n.[ArticleImage]
			,n.[DateAdded]
			,n.[LastModified]
			,n.[PublishDate]
			,n.[ExpireDate]
			,n.[NumberOfViews]
			,n.[RatingValue]
			,n.[RatingCount]
			,n.[TitleLink]
			,n.[DetailType]
			,n.[DetailTypeData]
			,n.[ArticleImageFolder]
			,n.[NumberOfComments]
			,n.[DetailTarget]
			,n.[HasPermissions]
			,n.[EventArticle]
			,n.[DetailMediaType]
			,n.[DetailMediaData]
			,n.[Featured]
			,n.[Approved]
			,n.[AllowComments]
			,n.[Active]
			,n.[ArticleImageSet]
			,n.[CFGroupeID]
			,n.WorkflowId
			,ed.StartDate AS EventStartDate, ed.EventType, ed.PaymentEnabled AS InnerPaymentEnabled, ROW_NUMBER() OVER (ORDER BY 
				CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
				CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
				CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
				CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
				CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
				CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
				CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
				CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
				CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
				CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
				CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
				CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy ='Title ASC' THEN n.Title END,
				CASE WHEN @OrderBy ='Title DESC' THEN n.Title END DESC,

				CASE WHEN @OrderBy2 ='PublishDate ASC' THEN PublishDate END,
				CASE WHEN @OrderBy2 ='PublishDate DESC' THEN PublishDate END DESC,
				CASE WHEN @OrderBy2 ='NumberOfViews ASC' THEN NumberOfViews END,
				CASE WHEN @OrderBy2 ='NumberOfViews DESC' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy2 ='RatingValue ASC' THEN RatingValue END,
				CASE WHEN @OrderBy2 ='RatingValue DESC' THEN RatingValue END DESC,
				CASE WHEN @OrderBy2 ='DateAdded ASC' THEN DateAdded END,
				CASE WHEN @OrderBy2 ='DateAdded DESC' THEN DateAdded END DESC,
				CASE WHEN @OrderBy2 ='ExpireDate ASC' THEN ExpireDate END,
				CASE WHEN @OrderBy2 ='ExpireDate DESC' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy2 ='LastModified ASC' THEN LastModified END,
				CASE WHEN @OrderBy2 ='LastModified DESC' THEN LastModified END DESC,
				CASE WHEN @OrderBy2 ='NumberOfComments ASC' THEN NumberOfComments END,
				CASE WHEN @OrderBy2 ='NumberOfComments DESC' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy2 ='Title ASC' THEN n.Title END,
				CASE WHEN @OrderBy2 ='Title DESC' THEN n.Title END DESC) AS Kulike
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ed ON ed.ArticleID = n.ArticleID
		WHERE (@StartDate IS NULL OR ed.ArticleID IS NULL OR (ed.StartDate >= @StartDate))
			AND n.ArticleID IN (
				SELECT [ArticleID]
				FROM (
					SELECT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @UserEditCategories)
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflows] AS wf ON na.WorkflowId = wf.Id AND @Approved = 3
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs ON wfs.WorkflowId = wf.Id AND @Approved = 3
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS sai ON sai.ArticleId = na.ArticleID AND @Approved = 3
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateApproveRoles] AS war ON war.StateId = sai.StateId
						LEFT JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = war.RoleID AND @Approved = 3 AND wfs.AllUserEdit=0
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateApproveUsers] AS wau ON wau.StateId = sai.StateId AND wfs.AllUserEdit=0 
					WHERE na.PortalID=@PortalID
						AND na.HasPermissions = 0
						AND ((@Approved = 3) OR (@Approved = 0) OR ((@Approved = 1 AND na.Approved = 1) OR (@Approved = 2 AND na.Approved = 0)))		   
						AND ((@ArticleType = 0) OR ((@ArticleType = 1 AND na.EventArticle = 0) OR (@ArticleType = 2 AND na.EventArticle = 1)))
						AND ((@PermissionsByArticle = 0) OR ((@PermissionsByArticle = 1 AND na.HasPermissions = 1) OR (@PermissionsByArticle = 2 AND na.HasPermissions = 0)))		   
						AND ((@Published = 3 AND sai.Status = 1 AND (wfs.WorkflowStateType=2 OR wfs.WorkflowStateType=3)) OR (@Published = 0) OR ((@Published = 1 AND na.Active = 1) OR (@Published = 2 AND na.Active = 0)))
						AND ((@Featured = 0) OR ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 2 AND na.Featured = 0)))
						AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
						AND (@FilterByCustomFieldTemplate IS NULL OR na.CFGroupeID = @FilterByCustomFieldTemplate)
						AND ((@Published = 3 and wau.UserId=@userID ) OR (@Published = 3 AND ur.Userid=@userID ) OR (@Published = 3 AND (wfs.WorkflowStateType=2 OR wfs.WorkflowStateType=3) AND wfs.AllUserEdit=1)OR @Published <>3 )
					UNION ALL
					SELECT ArticleID
					FROM (
						SELECT na.[ArticleID] , na.[ArticleID] as test	
						FROM dbo.[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
							INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflows] AS wf ON na.WorkflowId = wf.Id AND @Approved = 3
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs ON wfs.WorkflowId = wf.Id AND @Approved = 3
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS sai ON sai.ArticleId = na.ArticleID AND @Approved = 3
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateApproveRoles] AS war ON war.StateId = sai.StateId
							LEFT JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = war.RoleID AND @Approved = 3 AND wfs.AllUserEdit=0 
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateApproveUsers] AS wau ON wau.StateId = sai.StateId AND wfs.AllUserEdit=0 
						WHERE na.PortalID=@PortalID
							AND na.HasPermissions = 1
							AND ((@EditPermission = 1) OR ((aup.Edit = 1) AND ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))))
							AND ((@Approved = 0) OR ((@Approved = 1 AND na.Approved = 1) OR (@Approved = 2 AND na.Approved = 0)))
							AND ((@ArticleType = 0) OR ((@ArticleType = 1 AND na.EventArticle = 0) OR (@ArticleType = 2 AND na.EventArticle = 1)))
							AND ((@PermissionsByArticle = 0) OR ((@PermissionsByArticle = 1 AND na.HasPermissions = 1) OR (@PermissionsByArticle = 2 AND na.HasPermissions = 0)))
							AND ((@Published = 3 AND sai.Status = 1 AND (wfs.WorkflowStateType=2 OR wfs.WorkflowStateType=3)) OR (@Published = 0) OR ((@Published = 1 AND na.Active = 1) OR (@Published = 2 AND na.Active = 0)))
							AND ((@Featured = 0) OR ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 2 AND na.Featured = 0)))
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
							AND (@inCategories IS NULL OR cat.CategoryID IN (SELECT Id FROM @CategoryFilter))
							AND (@FilterByCustomFieldTemplate IS NULL OR na.CFGroupeID = @FilterByCustomFieldTemplate)
							AND ((@Published = 3 and wau.UserId=@userID ) OR (@Published = 3 AND ur.Userid=@userID ) OR (@Published = 3 AND (wfs.WorkflowStateType=2 OR wfs.WorkflowStateType=3) AND wfs.AllUserEdit=1)OR @Published <>3 )
						UNION
						SELECT na.[ArticleID], na.[ArticleID] as test				
						FROM dbo.[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflows] AS wf ON na.WorkflowId = wf.Id AND @Approved = 3
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs ON wfs.WorkflowId = wf.Id AND @Approved = 3
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS sai ON sai.ArticleId = na.ArticleID AND @Approved = 3
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateApproveRoles] AS war ON war.StateId = sai.StateId
							LEFT JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = war.RoleID AND @Approved = 3 AND wfs.AllUserEdit=0 
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateApproveUsers] AS wau ON wau.StateId = sai.StateId AND wfs.AllUserEdit=0 
						WHERE na.PortalID=@PortalID
							AND na.HasPermissions = 1
							AND ((@EditPermission = 1) OR ((arp.Edit = 1) AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
							AND ((@Approved = 0) OR ((@Approved = 1 AND na.Approved = 1) OR (@Approved = 2 AND na.Approved = 0)))
							AND ((@ArticleType = 0) OR ((@ArticleType = 1 AND na.EventArticle = 0) OR (@ArticleType = 2 AND na.EventArticle = 1)))
							AND ((@PermissionsByArticle = 0) OR ((@PermissionsByArticle = 1 AND na.HasPermissions = 1) OR (@PermissionsByArticle = 2 AND na.HasPermissions = 0)))
							AND ((@Published = 3 AND sai.Status = 1 AND (wfs.WorkflowStateType=2 OR wfs.WorkflowStateType=3)) OR (@Published = 0) OR ((@Published = 1 AND na.Active = 1) OR (@Published = 2 AND na.Active = 0)))
							AND ((@Featured = 0) OR ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 2 AND na.Featured = 0)))
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
							AND (@inCategories IS NULL OR cat.CategoryID IN (SELECT Id FROM @CategoryFilter))
							AND (@FilterByCustomFieldTemplate IS NULL OR na.CFGroupeID = @FilterByCustomFieldTemplate)
							AND ((@Published = 3 and wau.UserId=@userID ) OR(@Published = 3 AND ur.Userid=@userID ) OR (@Published = 3 AND (wfs.WorkflowStateType=2 OR wfs.WorkflowStateType=3) AND wfs.AllUserEdit=1)OR @Published <>3 )
					) AS WithPerm
				) AS AllArticles
				WHERE (@SimpleSearchFindCondition IS NULL OR (
					AllArticles.ArticleID IN (
						SELECT na.[ArticleID]
						FROM dbo.[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\')
						WHERE na.PortalID=@PortalID
						UNION
						SELECT ti.[ArticleID]
						FROM dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
						INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
						WHERE t.PortalID=@PortalID
						UNION
						SELECT di.ArticleID
						FROM dbo.[{objectQualifier}EasyDNNNewsDocumentItems] AS di
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsDocuments] AS d ON di.DocumentID = d.DocEntryID
						INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE '\' OR d.Description LIKE st.Words ESCAPE '\')
						WHERE d.PortalID=@PortalID
							AND d.Visible = 1
						UNION
						SELECT li.ArticleID
						FROM dbo.[{objectQualifier}EasyDNNNewsLinkItems] AS li
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsLinks] AS l ON li.LinkID = l.LinkID
						INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE '\' OR l.Description LIKE st.Words ESCAPE '\')
						WHERE l.PortalID=@PortalID
					)
				)
			)
		)
	 ) AS AllNewsItems
	 LEFT OUTER JOIN dbo.[{objectQualifier}Users] AS u ON AllNewsItems.UserID = u.UserID
	 WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
		 CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
		 CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
		 CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
		 CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
		 CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
		 CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
		 CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
		 CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
		 CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy ='Title ASC' THEN Title END,
		 CASE WHEN @OrderBy ='Title DESC' THEN Title END DESC,
		 CASE WHEN @OrderBy2 ='PublishDate ASC' THEN PublishDate END,
		 CASE WHEN @OrderBy2 ='PublishDate DESC' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy2 ='NumberOfViews ASC' THEN NumberOfViews END,
		 CASE WHEN @OrderBy2 ='NumberOfViews DESC' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy2 ='RatingValue ASC' THEN RatingValue END,
		 CASE WHEN @OrderBy2 ='RatingValue DESC' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy2 ='DateAdded ASC' THEN DateAdded END,
		 CASE WHEN @OrderBy2 ='DateAdded DESC' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy2 ='ExpireDate ASC' THEN ExpireDate END,
		 CASE WHEN @OrderBy2 ='ExpireDate DESC' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy2 ='LastModified ASC' THEN LastModified END,
		 CASE WHEN @OrderBy2 ='LastModified DESC' THEN LastModified END DESC,
		 CASE WHEN @OrderBy2 ='NumberOfComments ASC' THEN NumberOfComments END,
		 CASE WHEN @OrderBy2 ='NumberOfComments DESC' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy2 ='Title ASC' THEN Title END,
		 CASE WHEN @OrderBy2 ='Title DESC' THEN Title END DESC;
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent]    Script Date: 17.12.2018. 15:12:48 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFAllContent]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@DateRange BIT = 0,
	@DateRangeType TINYINT = 0,
	@StartDate DATETIME = NULL,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL,
	@eToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange TINYINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	
	@FieldsTemplateID INT = NULL,
	@SearchOnlySelectedCFGroup BIT = 0,
	@CFGeneratedSQL NVARCHAR(MAX) = NULL,
	@SimpleSearchFindCondition NVARCHAR(2048) = NULL,
	@SimpleSearchType TINYINT = NULL,
	@SysDatesWhereCondition NVARCHAR(1000) = NULL,
	@OrderByID INT = NULL,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1,

	@ByLetter NVARCHAR(20) = NULL,
	@Alphabet NVARCHAR(2000) = NULL,
	@PartialSql NVARCHAR(MAX) = NULL,

	@ArticleIDtoSearch INT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRange BIT
	,@DateRangeType TINYINT
	,@StartDate DATETIME
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange TINYINT
	,@FieldsTemplateID INT
	,@SimpleSearchFindCondition NVARCHAR(2048)
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT
	,@ByLetter NVARCHAR(20)
	,@Alphabet NVARCHAR(2000)
	,@ArticleIDtoSearch INT'

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM dbo.[{objectQualifier}Roles] AS r
		INNER JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM dbo.[{objectQualifier}Roles] AS r
		INNER JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (Id INT PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX), CategoryURL NVARCHAR(1500)); '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #UserEditCategories (CategoryID INT PRIMARY KEY);
	INSERT INTO #UserEditCategories
	SELECT CategoryID
	FROM dbo.[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)

	DECLARE @HasEditCategories BIT;

	IF EXISTS (SELECT 1 FROM #UserEditCategories)
		SET @HasEditCategories = 1;
	ELSE
		SET @HasEditCategories = 0; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM dbo.[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM dbo.[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM dbo.[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM dbo.[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM dbo.[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM dbo.[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM dbo.[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS Id,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryURL ELSE cl.CategoryURL END AS CategoryURL
	FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategories) '
	
SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

IF @CFGeneratedSQL IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' DECLARE @tempArticles TABLE (ArticleID INT PRIMARY KEY); ' + @CFGeneratedSQL;

IF @SimpleSearchFindCondition IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	DECLARE @SearchTable TABLE (Words NVARCHAR(256) NOT NULL);
	DECLARE @word NVARCHAR(256), @PosWord INT
	SET @SimpleSearchFindCondition = LTRIM(RTRIM(@SimpleSearchFindCondition))+ '':''
	SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
	IF REPLACE(@SimpleSearchFindCondition, '':'', '''') <> ''''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SimpleSearchFindCondition, @PosWord - 1)))
			IF @word <> ''''
			BEGIN
				SET @word = replace( 
							replace( 
							replace( 
							replace( @word
							,''\'', ''\\'' )
							,''%'', ''\%'' )
							,''_'', ''\_'' )
							,''['', ''\['' )
				INSERT INTO @SearchTable (Words) VALUES (''% ''+@word+''%'')
				INSERT INTO @SearchTable (Words) VALUES (@word+''%'')
			END
			SET @SimpleSearchFindCondition = RIGHT(@SimpleSearchFindCondition, LEN(@SimpleSearchFindCondition) - @PosWord)
			SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
		END
	END ';

SET @TopInnerFilter = N'';
	IF @CFGeneratedSQL IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID '

	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN dbo.[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''''
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID '

	IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
		SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '

	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN dbo.[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN dbo.[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

	IF @SimpleSearchFindCondition IS NOT NULL
	BEGIN
		IF @LocaleCode IS NULL
		BEGIN
			IF @SimpleSearchType = 2
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.ArticleID = @ArticleIDtoSearch OR na.CleanArticleData LIKE st.Words ESCAPE ''\'') '
			ELSE IF @SimpleSearchType = 1
			SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.ArticleID = @ArticleIDtoSearch OR na.Title LIKE st.Words ESCAPE ''\'' OR na.SubTitle LIKE st.Words ESCAPE ''\'') '
			ELSE
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.ArticleID = @ArticleIDtoSearch OR na.Title LIKE st.Words ESCAPE ''\'' OR na.SubTitle LIKE st.Words ESCAPE ''\'' OR na.CleanArticleData LIKE st.Words ESCAPE ''\'') '	
		END
		ELSE
		BEGIN
			IF @SimpleSearchType = 2
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.ArticleID = @ArticleIDtoSearch OR ncl.CleanArticleData LIKE st.Words ESCAPE ''\'') '
			ELSE IF @SimpleSearchType = 1
			SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.ArticleID = @ArticleIDtoSearch OR ncl.Title LIKE st.Words ESCAPE ''\'' OR ncl.SubTitle LIKE st.Words ESCAPE ''\'') '
			ELSE
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.ArticleID = @ArticleIDtoSearch OR ncl.Title LIKE st.Words ESCAPE ''\'' OR ncl.SubTitle LIKE st.Words ESCAPE ''\'' OR ncl.CleanArticleData LIKE st.Words ESCAPE ''\'') '
		END
	END

	IF @FilterByTags = 1 SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
	IF @FilterByArticles = 1 SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
SET @TopInnerFilter = @TopInnerFilter + N'
WHERE ' + @sqlSharingPortal

	IF @SysDatesWhereCondition IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + @SysDatesWhereCondition

	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '
	IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
	
	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0
			SET @TopInnerFilter = @TopInnerFilter + N' AND (na.UserID = @UserID OR (na.Active = 1 AND na.Approved = 1)) '
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N' AND (na.UserID = @UserID OR na.Active = 1) '
	END

	IF @SearchOnlySelectedCFGroup = 1
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.CFGroupeID = @FieldsTemplateID '

IF @SimpleSearchFindCondition IS NOT NULL
BEGIN

	DECLARE @Top_TAG_InnerFilter NVARCHAR(MAX);
	SET @Top_TAG_InnerFilter = N'';
		IF @CFGeneratedSQL IS NOT NULL
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
		INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID '

	IF @GoogleMapsFilter = 2
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN dbo.[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''''
	ELSE IF @GoogleMapsFilter = 1
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID '

	IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' INNER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '

	IF @FilterByDNNGroupID <> 0 
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN dbo.[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID '
	ELSE IF @FilterByDNNUserID <> 0
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN dbo.[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

	IF @FilterByTags = 1 SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' INNER JOIN dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
	IF @FilterByArticles = 1 SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
	SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
	WHERE ' + @sqlSharingPortal

	IF @SysDatesWhereCondition IS NOT NULL
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + @SysDatesWhereCondition

	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1 SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.Featured = 1 '
	IF @FilterByDNNUserID <> 0
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '
	
	IF @QueryModulePermissions = 0
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND (na.UserID = @UserID OR (na.Active = 1 AND na.Approved = 1)) '
		ELSE
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND (na.UserID = @UserID OR na.Active = 1) '
	END

	IF @SearchOnlySelectedCFGroup = 1
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.CFGroupeID = @FieldsTemplateID '
END

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);
DECLARE @ControlTypeID INT;

IF @OrderByID IS NOT NULL
BEGIN
	DECLARE @CfOrderByID INT;
	DECLARE @SysOrderByID INT;
	DECLARE @SortOrder NCHAR(4);

	SELECT @CfOrderByID = CfIdOrderable
		,@SysOrderByID = SysIdOrderable
		,@SortOrder = SortOrder
	FROM dbo.[{objectQualifier}EasyDNNfieldsOrderByItems] AS obi
	WHERE obi.Id = @OrderByID
		--AND obi.CustomFieldID IN (
		--	SELECT CustomFieldID
		--	FROM dbo.[{objectQualifier}EasyDNNfieldsTemplateItems]
		--	WHERE FieldsTemplateID = @FieldsTemplateID
		--	)

	IF @CfOrderByID IS NOT NULL
	BEGIN

		SELECT @ControlTypeID = [ControlTypeID]
		FROM dbo.[{objectQualifier}EasyDNNfields]
		WHERE CustomFieldID = @CfOrderByID
			AND IsOrderable = 1;

		IF @ControlTypeID IS NOT NULL
		BEGIN
			SELECT @OrderByColumnName = CASE @ControlTypeID
					WHEN 1
						THEN N'[Text]'
					WHEN 3
						THEN N'[Int]'
					WHEN 4
						THEN N'[Decimal]'
					WHEN 5
						THEN N'[Decimal]'
					WHEN 6
						THEN N'[Text]'
					WHEN 9
						THEN N'[DateTime]'
					WHEN 10
						THEN N'[Text]'
					ELSE NULL
					END

			IF @OrderByColumnName IS NULL
			BEGIN
				SET @OrderByID = NULL;
				SET @CfOrderByID = NULL;
				SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
				SET @OrderByDirection = N'DESC';
				SET @OrderByColumnName = N'[PublishDate]';
			END
			ELSE
			BEGIN
				SET @OrderByCustomFieldID = @CfOrderByID;
				SET @OrderByDirection = @SortOrder;
			END
		END
		ELSE
		BEGIN
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByDirection = N'DESC';
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
		IF @SysOrderByID IS NOT NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			
			SELECT @OrderByColumnName = CASE @SysOrderByID
					WHEN 0
						THEN N'[DateAdded]'
					WHEN 1
						THEN N'[LastModified]'
					WHEN 2
						THEN N'[PublishDate]'
					WHEN 3
						THEN N'[ExpireDate]'
					WHEN 4
						THEN N'[NumberOfViews]'
					WHEN 5
						THEN N'[RatingValue]'
					WHEN 6
						THEN N'[Title]'
					WHEN 7
						THEN N'[StartDate]'
					WHEN 8
						THEN N'CommentedDate'
					WHEN 9
						THEN N'[NumberOfComments]'
					WHEN 10
						THEN N'NEWID()'
					ELSE N'[PublishDate]'
					END
			
			SET @OrderByDirection = @SortOrder;
		END
		ELSE
		BEGIN	
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
			SET @OrderByDirection = N'DESC';
			SET @OrderByColumnName = N'[PublishDate]';
		END
END
ELSE IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SELECT @ControlTypeID = [ControlTypeID] FROM dbo.[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END

IF @OrderByColumnName = N'NEWID()'
BEGIN
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
	SET @OrderByDirection = N''
END
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

SET @MainContentFilter = N'
;WITH AllContent AS( '

	IF @ByLetter IS NOT NULL AND  @ByLetter <> N'all'
	BEGIN

		SET @MainContentFilter = @MainContentFilter + N'
			SELECT n.ArticleID, RecurringID,StartDate
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n '

		IF @LocaleCode IS NOT NULL
			SET @MainContentFilter = @MainContentFilter + N'
				LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '

		SET @MainContentFilter = @MainContentFilter + N'
			INNER JOIN ('
	END

	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT ArticleID, CommentedDate,RecurringID,StartDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,inner_all.RecurringID
			,inner_all.StartDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID], inner_all.RecurringID ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @MainContentFilter = @MainContentFilter + N'inner_all.Featured DESC, '
			
			SET @MainContentFilter = @MainContentFilter + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
			
		FROM dbo.[{objectQualifier}EasyDNNNewsComments] AS nc
		INNER JOIN (';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT n.ArticleID,n.Featured,
		CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
		CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
	FROM dbo.[{objectQualifier}EasyDNNNews] AS n
	LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND '
	IF @DateRangeType = 3
		SET @MainContentFilter = @MainContentFilter + N' nerd.EndDateTime < @CurrentDate'
	ELSE IF @DateRangeType = 2
		SET @MainContentFilter = @MainContentFilter + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 1
		BEGIN
			IF @ListArchive = 0
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
			ELSE
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
		END
	ELSE IF @DateRangeType = 0
		SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE
		SET @MainContentFilter = @MainContentFilter + N' 1 = 0'
	
	SET @MainContentFilter = @MainContentFilter + N'
	WHERE n.ArticleID IN( '
	 
	 -- tu bi trebal staviti okolo da se filtrira po and !!!
	 
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.ArticleID IN ( ';
	END
	 
	 SET @MainContentFilter = @MainContentFilter + N'
		SELECT [ArticleID] FROM (
			SELECT DISTINCT na.[ArticleID]
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

				AND na.EventArticle = 0 '

			IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

			IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL
				SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '

		SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID]
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

				AND na.EventArticle = 1
				AND ne.Recurring = 0 '

			IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

			IF @DateRangeType = 3
				SET @MainContentFilter = @MainContentFilter + N' AND ne.EndDate < @CurrentDate'
			ELSE IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
				ELSE
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
			END
			ELSE IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

		SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID]
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)	
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
			IF @DateRangeType = 3
				SET @MainContentFilter = @MainContentFilter + N' nerd.EndDateTime < @CurrentDate'
			ELSE IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N'
				((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
			ELSE IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
					ELSE
						SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
				END
			ELSE IF @DateRangeType = 0
				SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
			ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND na.EventArticle = 1
				AND ne.Recurring = 1 '

			IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

		IF @SimpleSearchFindCondition IS NOT NULL
		BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION
			SELECT ArticleID
			FROM (
				SELECT ArticleID
				FROM (
					SELECT ti.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
					INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
					WHERE t.' + @sqlSharingPortalAll
					IF @SimpleSearchType = 4
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT di.ArticleID
						FROM dbo.[{objectQualifier}EasyDNNNewsDocumentItems] AS di
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsDocuments] AS d ON di.DocumentID = d.DocEntryID
						INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
						WHERE d.' + @sqlSharingPortalAll + N'
							AND d.Visible = 1
						UNION
						SELECT li.ArticleID
						FROM dbo.[{objectQualifier}EasyDNNNewsLinkItems] AS li
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsLinks] AS l ON li.LinkID = l.LinkID
						INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
						WHERE l.' + @sqlSharingPortalAll
					END
				SET @MainContentFilter = @MainContentFilter + N'
				) AS allSearchFields
				INTERSECT
				SELECT ArticleID
				FROM (
					SELECT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) '

					SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter + N'
						AND na.EventArticle = 0 '
					IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL
					SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

					SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter + N'
						AND na.EventArticle = 1
						AND ne.Recurring = 0 '

					IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

					IF @DateRangeType = 3
						SET @MainContentFilter = @MainContentFilter + N' AND ne.EndDate < @CurrentDate'
					ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 3
						SET @MainContentFilter = @MainContentFilter + N' nerd.EndDateTime < @CurrentDate'
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

					SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter + N'
						AND na.EventArticle = 1
						AND ne.Recurring = 1 '

					IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

				SET @MainContentFilter = @MainContentFilter + N') AS permissionPerArticle';
			SET @MainContentFilter = @MainContentFilter + N') AS tagsdocumentsLinks';
		END

		SET @MainContentFilter = @MainContentFilter + N'
		) AS NoPermissionsPerArticle '

	IF @QueryPermissionsPerArticles = 1
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		UNION ALL
		SELECT [ArticleID]
		FROM (
			SELECT DISTINCT na.[ArticleID]
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND na.HasPermissions = 1
				AND na.EventArticle = 0 '
			IF @CanEditAllContent = 0
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
				IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
				ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
			END
			IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL
				SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '

		SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID]
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 0 '
			IF @CanEditAllContent = 0
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
				IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
				ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
			END
			IF @DateRangeType = 3
				SET @MainContentFilter = @MainContentFilter + N' AND ne.EndDate < @CurrentDate'
			ELSE IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
				ELSE
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
			END
			ELSE IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

		SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID]
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
			IF @DateRangeType = 3
				SET @MainContentFilter = @MainContentFilter + N' nerd.EndDateTime < @CurrentDate'
			ELSE IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N'
				((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
			ELSE IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
					ELSE
						SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
				END
			ELSE IF @DateRangeType = 0
				SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
			ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND na.HasPermissions = 1
				AND na.EventArticle = 1
				AND ne.Recurring = 1 '
			IF @CanEditAllContent = 0
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
				IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
				ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
			END

			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION
			SELECT ArticleID
			FROM (
				SELECT ArticleID
				FROM (
					SELECT ti.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
					INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
					WHERE t.' + @sqlSharingPortalAll
					IF @SimpleSearchType = 4
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT di.ArticleID
						FROM dbo.[{objectQualifier}EasyDNNNewsDocumentItems] AS di
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsDocuments] AS d ON di.DocumentID = d.DocEntryID
						INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
						WHERE d.' + @sqlSharingPortalAll + N'
							AND d.Visible = 1
						UNION
						SELECT li.ArticleID
						FROM dbo.[{objectQualifier}EasyDNNNewsLinkItems] AS li
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsLinks] AS l ON li.LinkID = l.LinkID
						INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
						WHERE l.' + @sqlSharingPortalAll
					END
				SET @MainContentFilter = @MainContentFilter + N'
				) AS allSearchFields
				INTERSECT
				SELECT ArticleID
				FROM (
					SELECT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

					SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter + N'
					AND na.HasPermissions = 1
					AND na.EventArticle = 0 '

					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL
						SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)  '

					SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter + N'
						AND na.HasPermissions = 1
						AND na.EventArticle = 1
						AND ne.Recurring = 0 '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					IF @DateRangeType = 3
						SET @MainContentFilter = @MainContentFilter + N' AND ne.EndDate < @CurrentDate'
					ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 3
						SET @MainContentFilter = @MainContentFilter + N' nerd.EndDateTime < @CurrentDate'
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

					SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter + N'
						AND na.HasPermissions = 1
						AND na.EventArticle = 1
						AND ne.Recurring = 1 '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END

				SET @MainContentFilter = @MainContentFilter + N') AS permissionPerArticle';
			SET @MainContentFilter = @MainContentFilter + N') AS tagsdocumentsLinks';
		END

				SET @MainContentFilter = @MainContentFilter + N'
		) AS WithNoRolePermissions '

			IF @UserID <> -1
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N'
				UNION
				SELECT [ArticleID] FROM (
					SELECT DISTINCT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '
					
					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
					
					AND na.HasPermissions = 1
					AND na.EventArticle = 0 '
					IF @CanEditAllContent = 0
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '

					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL
						SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '

				SET @MainContentFilter = @MainContentFilter + N'
					UNION ALL
					SELECT DISTINCT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 0 '
					IF @CanEditAllContent = 0
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '

					IF @DateRangeType = 3
						SET @MainContentFilter = @MainContentFilter + N' AND ne.EndDate < @CurrentDate'
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
						END
						ELSE IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION All
					SELECT DISTINCT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 3
						SET @MainContentFilter = @MainContentFilter + N' nerd.EndDateTime < @CurrentDate'
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 1 '
					IF @CanEditAllContent = 0
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '


			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION
			SELECT ArticleID
			FROM (
				SELECT ArticleID
				FROM (
					SELECT ti.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
					INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
					WHERE t.' + @sqlSharingPortalAll
					IF @SimpleSearchType = 4
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT di.ArticleID
						FROM dbo.[{objectQualifier}EasyDNNNewsDocumentItems] AS di
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsDocuments] AS d ON di.DocumentID = d.DocEntryID
						INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
						WHERE d.' + @sqlSharingPortalAll + N'
							AND d.Visible = 1
						UNION
						SELECT li.ArticleID
						FROM dbo.[{objectQualifier}EasyDNNNewsLinkItems] AS li
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsLinks] AS l ON li.LinkID = l.LinkID
						INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
						WHERE l.' + @sqlSharingPortalAll
					END
				SET @MainContentFilter = @MainContentFilter + N'
				) AS allSearchFields
				INTERSECT
				SELECT ArticleID
				FROM (
					SELECT DISTINCT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

					SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter + N'

					AND na.HasPermissions = 1
					AND na.EventArticle = 0 '
					IF @CanEditAllContent = 0
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '

					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL
						SET @MainContentFilter = @MainContentFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION ALL
					SELECT DISTINCT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0 '

					SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter + N'
					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 0 '
					IF @CanEditAllContent = 0
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '

					IF @DateRangeType = 3
						SET @MainContentFilter = @MainContentFilter + N' AND ne.EndDate < @CurrentDate'
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
						END
						ELSE IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION ALL
					SELECT DISTINCT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 3
						SET @MainContentFilter = @MainContentFilter + N' nerd.EndDateTime < @CurrentDate'
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

					SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter + N'

					AND na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 1 '
					IF @CanEditAllContent = 0
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '

				SET @MainContentFilter = @MainContentFilter + N') AS permissionPerArticle';
			SET @MainContentFilter = @MainContentFilter + N') AS tagsdocumentsLinks';
		END

				SET @MainContentFilter = @MainContentFilter + N'
				) AS ByRolePermissions '
			END

		END
	
	-- treba desti ako se koristi AND operator
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	
	SET @MainContentFilter = @MainContentFilter + N' 
	) '
	
	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON nc.ArticleID = inner_all.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1'
	END

	IF @ByLetter IS NOT NULL AND  @ByLetter <> N'all'
	BEGIN
		IF @LocaleCode IS NULL
		BEGIN
			IF @ByLetter = N'OnlyNumbers'
				SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON n.ArticleID = inner_all.ArticleID AND n.Title LIKE ''[0-9]%'''
			ELSE IF @ByLetter = N'SpecialChars'
				SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON n.ArticleID = inner_all.ArticleID AND n.Title NOT LIKE ''[0-9]%'' AND LEFT(LTRIM(n.Title),1) NOT IN(SELECT KeyID FROM dbo.[{objectQualifier}EDS_StringListToTableString] (@Alphabet)) '
			ELSE
				SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON n.ArticleID = inner_all.ArticleID AND UPPER(CAST(LEFT(LTRIM(n.Title), LEN(@ByLetter)) AS NCHAR)) LIKE CAST(@ByLetter AS NCHAR) + ''%'''
		END
		ELSE
		BEGIN
			IF @ByLetter = N'OnlyNumbers'
				SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON n.ArticleID = inner_all.ArticleID  AND CASE WHEN cl.ArticleID IS NULL THEN n.Title ELSE cl.Title END LIKE ''[0-9]%'''
			ELSE IF @ByLetter = N'SpecialChars'
				SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON n.ArticleID = inner_all.ArticleID  AND CASE WHEN cl.ArticleID IS NULL THEN n.Title ELSE cl.Title END NOT LIKE ''[0-9]%'' AND LEFT(LTRIM(CASE WHEN cl.ArticleID IS NULL THEN n.Title ELSE cl.Title END),1) NOT IN(SELECT KeyID FROM dbo.[{objectQualifier}EDS_StringListToTableString] (@Alphabet)) '
			ELSE
				SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON n.ArticleID = inner_all.ArticleID AND UPPER(CAST(LEFT(LTRIM(CASE WHEN cl.ArticleID IS NULL THEN n.Title ELSE cl.Title END), LEN(@ByLetter)) AS NCHAR)) LIKE CAST(@ByLetter AS NCHAR)  + ''%'''
		END
	END

SET @MainContentFilter = @MainContentFilter + N' 
) '

IF @ByLetter IS NULL AND @PartialSql IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + @MainContentFilter + @PartialSql;
END
ELSE
BEGIN

	SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent '

	SET @sqlcommand = @sqlcommand + @MainContentFilter

	IF @LocaleCode IS NULL
	SET @sqlcommand = @sqlcommand + N'
	SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
		,e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], '
	ELSE
	SET @sqlcommand = @sqlcommand + N'
	SELECT n.[ArticleID],n.[PortalID],n.[UserID]
		,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
		,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
		,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
		,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
		,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
		,n.[DetailType]
		,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
		,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet]
		,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
		,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
		,n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
		,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
		,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
		,n.[CFGroupeID],e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], ';

	IF @QueryModulePermissions = 0
		SET @sqlcommand = @sqlcommand + N'0 AS CanEdit, '
	ELSE IF @CanEditAllContent = 1
		SET @sqlcommand = @sqlcommand + N'1 AS CanEdit, '
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		CASE WHEN @HasEditCategories = 0
		THEN 
			CASE WHEN EXISTS(
				SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0
			END
		ELSE
			CASE WHEN EXISTS(
				SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE '
				IF @EditOnlyAsOwner = 1
					SET @sqlcommand = @sqlcommand + N' n.UserID = @UserID AND '

				SET @sqlcommand = @sqlcommand + N' c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
			)
			OR EXISTS(
				SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0
			END
		END
		AS CanEdit, '
	END

	IF @LocaleCode IS NULL
	SET @sqlcommand = @sqlcommand + N'
		(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
		WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
		ORDER BY c.Position
		FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, 
		(		SELECT wfs.*, edas.Status,
		( SELECT TOP 1 war.RoleID
						FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveRoles AS war
						INNER JOIN {objectQualifier}UserRoles AS ur ON ur.RoleID = war.RoleID
						WHERE war.StateId = wfs.StateId AND ur.Userid=@userID
					 )  As RoleId,
					( SELECT TOP 1 wau.userId  
					FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveUsers AS wau
					WHERE wau.StateId = wfs.StateId AND wau.Userid =@userID
					)  As EditUserId
		FROM dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs
		LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS edas ON edas.StateId = wfs.StateId AND edas.ArticleId = n.ArticleID
		WHERE wfs.WorkflowId = n.WorkflowId
		ORDER BY wfs.position ASC
		FOR XML PATH(''WorkflowState''), ROOT(''WorkflowStates'')
	) AS WorkflowState,'
	ELSE
	SET @sqlcommand = @sqlcommand + N'
		(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", lc.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.Id
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
		WHERE ci.ArticleID = n.ArticleID
		ORDER BY c.Position
		FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, 
		(		SELECT wfs.*, edas.Status,
		( SELECT TOP 1 war.RoleID
						FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveRoles AS war
						INNER JOIN {objectQualifier}UserRoles AS ur ON ur.RoleID = war.RoleID
						WHERE war.StateId = wfs.StateId AND ur.Userid=@userID
					 )  As RoleId,
					( SELECT TOP 1 wau.userId  
					FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveUsers AS wau
					WHERE wau.StateId = wfs.StateId AND wau.Userid =@userID
					)  As EditUserId
		FROM dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs
		LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS edas ON edas.StateId = wfs.StateId AND edas.ArticleId = n.ArticleID
		WHERE wfs.WorkflowId = n.WorkflowId
		ORDER BY wfs.position ASC
		FOR XML PATH(''WorkflowState''), ROOT(''WorkflowStates'')
	) AS WorkflowState,'

	IF @QueryModulePermissions = 0
		SET @sqlcommand = @sqlcommand + N' 0 AS Published, 0 AS Approve, '
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		CASE n.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		END AS Published, '
		IF @UserCanApprove = 0
			SET @sqlcommand = @sqlcommand + N'0 AS Approve, '
		ELSE
			SET @sqlcommand = @sqlcommand + N'
				CASE n.Approved
					WHEN 1 THEN 0
					WHEN 0 THEN n.Active
				END AS Approve, '
	END

	SET @sqlcommand = @sqlcommand + N' @AllContentCount AS ContentCount '

	IF @LocaleCode IS NULL
	BEGIN
		IF @OrderByColumnName = N'CommentedDate'
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN (
				SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
				FROM (
					SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
						,ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

					SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				) AS finalSelection
				WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
			) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
		END
		ELSE IF @OrderByCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N',e_fsd.' + @OrderByColumnName + ',(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END)
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN (
				SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
				FROM (
					SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
					,ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'Featured DESC'
						SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

					IF @OrderByDirection = 'ASC'
						SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

					SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
				) AS finalSelection
				WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
			) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN (
				SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
				FROM (
					SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
						,ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

					SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				) AS finalSelection
				WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
			) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '
		END
	END
	ELSE
	BEGIN
		IF @OrderByColumnName = N'CommentedDate'
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN (
				SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
				FROM (
					SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
						,ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

					SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				) AS finalSelection
				WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
			) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
			LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
			END
		ELSE IF @OrderByCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN (
				SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
				FROM (
					SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
						,ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

					IF @OrderByDirection = 'ASC'
						SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
					SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
				) AS finalSelection
				WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
			) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
			LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN (
				SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
				FROM (
					SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
						,ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

					SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				) AS finalSelection
				WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
			) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
			LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
		END
	END

	SET @sqlcommand = @sqlcommand + N' ORDER BY '
		IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'Featured DESC, '
		IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
		SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection
END

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#UserEditCategories'') IS NOT NULL
		DROP TABLE #UserEditCategories; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
		DROP TABLE #LocalizedCategories; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRange = @DateRange
	,@DateRangeType = @DateRangeType
	,@StartDate = @StartDate
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@FieldsTemplateID = @FieldsTemplateID
	,@SimpleSearchFindCondition = @SimpleSearchFindCondition
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
	,@ByLetter = @ByLetter
	,@Alphabet = @Alphabet
	,@ArticleIDtoSearch = @ArticleIDtoSearch
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles]    Script Date: 17.12.2018. 15:12:48 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFArticles]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT,
	@ItemsTo INT,
	@DateRange BIT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@FilterByTagID INT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	
	@FieldsTemplateID INT = NULL,
	@SearchOnlySelectedCFGroup BIT = 0,
	@CFGeneratedSQL NVARCHAR(MAX) = NULL,
	@SimpleSearchFindCondition NVARCHAR(2048) = NULL,
	@SimpleSearchType TINYINT = NULL,
	@SysDatesWhereCondition NVARCHAR(1000) = NULL,
	@OrderByID INT = NULL,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1,

	@ByLetter NVARCHAR(20) = NULL,
	@Alphabet NVARCHAR(2000) = NULL,
	@PartialSql NVARCHAR(MAX) = NULL,

	@ArticleIDtoSearch INT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRange BIT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@LocaleCode NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@FilterByTagID INT
	,@FieldsTemplateID INT
	,@SimpleSearchFindCondition NVARCHAR(2048)
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT
	,@ByLetter NVARCHAR(20)
	,@Alphabet NVARCHAR(2000)
	,@ArticleIDtoSearch INT'

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM dbo.[{objectQualifier}Roles] AS r
		INNER JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM dbo.[{objectQualifier}Roles] AS r
		INNER JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (Id INT PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX), CategoryURL NVARCHAR(1500)); '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #UserEditCategories (CategoryID INT PRIMARY KEY);
	INSERT INTO #UserEditCategories
	SELECT CategoryID
	FROM dbo.[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)

	DECLARE @HasEditCategories BIT;

	IF EXISTS (SELECT 1 FROM #UserEditCategories)
		SET @HasEditCategories = 1;
	ELSE
		SET @HasEditCategories = 0; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM dbo.[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM dbo.[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM dbo.[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM dbo.[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM dbo.[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM dbo.[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM dbo.[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS Id,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryURL ELSE cl.CategoryURL END AS CategoryURL
	FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategories) '
	
SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

IF @CFGeneratedSQL IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' DECLARE @tempArticles TABLE (ArticleID INT PRIMARY KEY); ' + @CFGeneratedSQL;

IF @SimpleSearchFindCondition IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	DECLARE @SearchTable TABLE (Words NVARCHAR(256) NOT NULL);
	DECLARE @word NVARCHAR(256), @PosWord INT
	SET @SimpleSearchFindCondition = LTRIM(RTRIM(@SimpleSearchFindCondition))+ '':''
	SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
	IF REPLACE(@SimpleSearchFindCondition, '':'', '''') <> ''''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SimpleSearchFindCondition, @PosWord - 1)))
			IF @word <> ''''
			BEGIN
				SET @word = replace( 
							replace( 
							replace( 
							replace( @word
							,''\'', ''\\'' )
							,''%'', ''\%'' )
							,''_'', ''\_'' )
							,''['', ''\['' )
				INSERT INTO @SearchTable (Words) VALUES (''% ''+@word+''%'')
				INSERT INTO @SearchTable (Words) VALUES (@word+''%'')
			END
			SET @SimpleSearchFindCondition = RIGHT(@SimpleSearchFindCondition, LEN(@SimpleSearchFindCondition) - @PosWord)
			SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
		END
	END ';

SET @TopInnerFilter = N'';

	IF @CFGeneratedSQL IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID '
		
	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN dbo.[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''''
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID '

	IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
		SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
	
	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN dbo.[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN dbo.[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

	IF @SimpleSearchFindCondition IS NOT NULL
	BEGIN
		IF @LocaleCode IS NULL
		BEGIN
			IF @SimpleSearchType = 1
				SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @SearchTable AS st ON (na.ArticleID = @ArticleIDtoSearch OR  na.Title LIKE st.Words ESCAPE ''\'' OR na.SubTitle LIKE st.Words ESCAPE ''\'') '
			ELSE IF @SimpleSearchType = 2
				SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @SearchTable AS st ON (na.ArticleID = @ArticleIDtoSearch OR na.CleanArticleData LIKE st.Words ESCAPE ''\'') '
			ELSE
				SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @SearchTable AS st ON (na.ArticleID = @ArticleIDtoSearch OR na.Title LIKE st.Words ESCAPE ''\'' OR na.SubTitle LIKE st.Words ESCAPE ''\'' OR na.CleanArticleData LIKE st.Words ESCAPE ''\'') '
		END
		ELSE
		BEGIN
			IF @SimpleSearchType = 1
				SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @SearchTable AS st ON (na.ArticleID = @ArticleIDtoSearch OR ncl.Title LIKE st.Words ESCAPE ''\'' OR ncl.SubTitle LIKE st.Words ESCAPE ''\'') '
			ELSE IF @SimpleSearchType = 2
				SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @SearchTable AS st ON (na.ArticleID = @ArticleIDtoSearch OR ncl.CleanArticleData LIKE st.Words ESCAPE ''\'') '
			ELSE
				SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @SearchTable AS st ON (na.ArticleID = @ArticleIDtoSearch OR ncl.Title LIKE st.Words ESCAPE ''\'' OR ncl.SubTitle LIKE st.Words ESCAPE ''\'' OR ncl.CleanArticleData LIKE st.Words ESCAPE ''\'') '
		END
	END

	IF @FilterByTags = 1 SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
	IF @FilterByArticles = 1 SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
SET @TopInnerFilter = @TopInnerFilter + N'
WHERE ' + @sqlSharingPortal + '
	AND na.EventArticle = 0 '
	
	IF @SysDatesWhereCondition IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + @SysDatesWhereCondition
	
	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @DateRange = 2 SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate '
		ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @DateRange = 2 OR @DateRange = 1 SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '
	IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0
			SET @TopInnerFilter = @TopInnerFilter + N' AND (na.UserID = @UserID OR (na.Active = 1 AND na.Approved = 1)) '
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N' AND (na.UserID = @UserID OR na.Active = 1) '
	END

IF @SimpleSearchFindCondition IS NOT NULL
BEGIN

	DECLARE @Top_TAG_InnerFilter NVARCHAR(MAX);
	SET @Top_TAG_InnerFilter = N'';

		IF @CFGeneratedSQL IS NOT NULL
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
			INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID '
			
		IF @GoogleMapsFilter = 2
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
			INNER JOIN dbo.[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''''
		ELSE IF @GoogleMapsFilter = 1
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID '

		IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' INNER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '
		
		IF @FilterByDNNGroupID <> 0 
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN dbo.[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID '
		ELSE IF @FilterByDNNUserID <> 0
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN dbo.[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

		IF @FilterByTags = 1 SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' INNER JOIN dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
		IF @FilterByArticles = 1 SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
	SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
	WHERE ' + @sqlSharingPortal + '
		AND na.EventArticle = 0 '
		
		IF @SysDatesWhereCondition IS NOT NULL
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + @SysDatesWhereCondition
		
		IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
		BEGIN
			IF @DateRange = 2 SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate '
			ELSE SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
		END
		ELSE IF @DateRange = 2 OR @DateRange = 1 SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		ELSE SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
			
		IF @LocaleCode IS NULL SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.HideDefaultLocale = 0 '
		IF @Featured = 1 SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.Featured = 1 '
		IF @FilterByDNNUserID <> 0
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.UserID = @FilterByDNNUserID '
		ELSE IF @sqlAuthors IS NOT NULL
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

		IF @QueryModulePermissions = 0
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
		ELSE IF @CanEditAllContent = 0
		BEGIN
			IF @UserCanApprove = 0
				SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND (na.UserID = @UserID OR (na.Active = 1 AND na.Approved = 1)) '
			ELSE
				SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND (na.UserID = @UserID OR na.Active = 1) '
		END
END

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);
DECLARE @ControlTypeID INT;

IF @OrderByID IS NOT NULL
BEGIN
	DECLARE @CfOrderByID INT;
	DECLARE @SysOrderByID INT;
	DECLARE @SortOrder NCHAR(4);

	SELECT @CfOrderByID = CfIdOrderable
		,@SysOrderByID = SysIdOrderable
		,@SortOrder = SortOrder
	FROM dbo.[{objectQualifier}EasyDNNfieldsOrderByItems] AS obi
	WHERE obi.Id = @OrderByID
		--AND obi.CustomFieldID IN (
		--	SELECT CustomFieldID
		--	FROM dbo.[{objectQualifier}EasyDNNfieldsTemplateItems]
		--	WHERE FieldsTemplateID = @FieldsTemplateID
		--	)

	IF @CfOrderByID IS NOT NULL
	BEGIN

		SELECT @ControlTypeID = [ControlTypeID]
		FROM dbo.[{objectQualifier}EasyDNNfields]
		WHERE CustomFieldID = @CfOrderByID
			AND IsOrderable = 1;

		IF @ControlTypeID IS NOT NULL
		BEGIN
			SELECT @OrderByColumnName = CASE @ControlTypeID
					WHEN 1
						THEN N'[Text]'
					WHEN 3
						THEN N'[Int]'
					WHEN 4
						THEN N'[Decimal]'
					WHEN 5
						THEN N'[Decimal]'
					WHEN 6
						THEN N'[Text]'
					WHEN 9
						THEN N'[DateTime]'
					WHEN 10
						THEN N'[Text]'
					ELSE NULL
					END

			IF @OrderByColumnName IS NULL
			BEGIN
				SET @OrderByID = NULL;
				SET @CfOrderByID = NULL;
				SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
				SET @OrderByDirection = N'DESC';
				SET @OrderByColumnName = N'[PublishDate]';
			END
			ELSE
			BEGIN
				SET @OrderByCustomFieldID = @CfOrderByID;
				SET @OrderByDirection = @SortOrder;
			END
		END
		ELSE
		BEGIN
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByDirection = N'DESC';
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
		IF @SysOrderByID IS NOT NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			
			SELECT @OrderByColumnName = CASE @SysOrderByID
					WHEN 0
						THEN N'[DateAdded]'
					WHEN 1
						THEN N'[LastModified]'
					WHEN 2
						THEN N'[PublishDate]'
					WHEN 3
						THEN N'[ExpireDate]'
					WHEN 4
						THEN N'[NumberOfViews]'
					WHEN 5
						THEN N'[RatingValue]'
					WHEN 6
						THEN N'[Title]'
					WHEN 7
						THEN N'[PublishDate]'-- EventStartDate - only articles
					WHEN 8
						THEN N'CommentedDate'
					WHEN 9
						THEN N'[NumberOfComments]'
					WHEN 10
						THEN N'NEWID()'
					ELSE N'[PublishDate]'
					END
			
			SET @OrderByDirection = @SortOrder;
		END
		ELSE
		BEGIN	
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
			SET @OrderByDirection = N'DESC';
			SET @OrderByColumnName = N'[PublishDate]';
		END
END
ELSE IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SELECT @ControlTypeID = [ControlTypeID] FROM dbo.[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END

IF @OrderByColumnName = N'NEWID()'
BEGIN
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
	SET @OrderByDirection = N''
END
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;
	
SET @MainContentFilter = N'
;WITH AllContent AS( '

	IF @ByLetter IS NOT NULL AND  @ByLetter <> N'all'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
			SELECT n.ArticleID
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n '

		IF @LocaleCode IS NOT NULL
		SET @MainContentFilter = @MainContentFilter + N'
			LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '

		SET @MainContentFilter = @MainContentFilter + N'
			WHERE n.ArticleID IN ('
	END

	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT ArticleID, CommentedDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID] ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @MainContentFilter = @MainContentFilter + N'n.Featured DESC, '
			
			SET @MainContentFilter = @MainContentFilter + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsComments] AS nc ON nc.ArticleID = n.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		WHERE nc.ArticleID IN (';
	END
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID] FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.ArticleID IN ( ';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT DISTINCT na.[ArticleID]
	FROM dbo.[{objectQualifier}EasyDNNNews] AS na
	INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) '

		SET @MainContentFilter = @MainContentFilter + @TopInnerFilter

		IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

	IF @SimpleSearchFindCondition IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		UNION
		SELECT ArticleID
		FROM (
			SELECT ArticleID
			FROM (
				SELECT ti.[ArticleID]
				FROM dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti
				INNER JOIN dbo.[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
				INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
				WHERE t.' + @sqlSharingPortalAll
				IF @SimpleSearchType = 4
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT di.ArticleID
					FROM dbo.[{objectQualifier}EasyDNNNewsDocumentItems] AS di
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsDocuments] AS d ON di.DocumentID = d.DocEntryID
					INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
					WHERE d.' + @sqlSharingPortalAll + N'
						AND d.Visible = 1
					UNION
					SELECT li.ArticleID
					FROM dbo.[{objectQualifier}EasyDNNNewsLinkItems] AS li
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsLinks] AS l ON li.LinkID = l.LinkID
					INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
					WHERE l.' + @sqlSharingPortalAll
				END
			SET @MainContentFilter = @MainContentFilter + N'
			) AS allSearchFields
			INTERSECT
			SELECT na.[ArticleID]
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter) '

			SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter

			IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

		SET @MainContentFilter = @MainContentFilter + N') AS HasPermissionsFalse';
	END
	
	IF @QueryPermissionsPerArticles = 1
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		UNION ALL
		SELECT ArticleID FROM (
			SELECT ArticleID FROM (
			SELECT aup.ArticleID FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup '
				IF @CanEditAllContent = 0
				BEGIN
					SET @MainContentFilter = @MainContentFilter + N' WHERE aup.Show = 1 '
					IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
					ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
				END
			IF @UserID <> -1
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N'
				UNION
				SELECT arp.ArticleID FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' WHERE arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					END
			END
			SET @MainContentFilter = @MainContentFilter + N'
			) AS PermissionsByArticle
			INTERSECT
			SELECT na.[ArticleID] FROM dbo.[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

			AND na.HasPermissions = 1 ' 
		
			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION
			SELECT ArticleID
			FROM (
				SELECT ArticleID
				FROM (
					SELECT ti.[ArticleID]
						FROM dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
						INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
						WHERE t.' + @sqlSharingPortalAll
						IF @SimpleSearchType = 4
						BEGIN
							SET @MainContentFilter = @MainContentFilter + N'
							UNION
							SELECT di.ArticleID
							FROM dbo.[{objectQualifier}EasyDNNNewsDocumentItems] AS di
							INNER JOIN dbo.[{objectQualifier}EasyDNNNewsDocuments] AS d ON di.DocumentID = d.DocEntryID
							INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
							WHERE d.' + @sqlSharingPortalAll + N'
								AND d.Visible = 1
							UNION
							SELECT li.ArticleID
							FROM dbo.[{objectQualifier}EasyDNNNewsLinkItems] AS li
							INNER JOIN dbo.[{objectQualifier}EasyDNNNewsLinks] AS l ON li.LinkID = l.LinkID
							INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
							WHERE l.' + @sqlSharingPortalAll
						END
					SET @MainContentFilter = @MainContentFilter + N'
					) AS allSearchFields
					INTERSECT
					SELECT ArticleID FROM (
						SELECT ArticleID FROM (
						SELECT aup.ArticleID FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup '
							IF @CanEditAllContent = 0
							BEGIN
								SET @MainContentFilter = @MainContentFilter + N' WHERE aup.Show = 1 '
								IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
								ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
							END
						IF @UserID <> -1
						BEGIN
							SET @MainContentFilter = @MainContentFilter + N'
							UNION
							SELECT arp.ArticleID FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp '
								IF @CanEditAllContent = 0
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N' WHERE arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
								END
						END
						SET @MainContentFilter = @MainContentFilter + N'
						) AS PermissionsByArticle
						INTERSECT
						SELECT na.[ArticleID] FROM dbo.[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) '

						SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter + N'

						AND na.HasPermissions = 1
					) AS filterArticlesByArticlePermissiosn
				) AS documentsLinks '
			END

		SET @MainContentFilter = @MainContentFilter + N'
		) AS HasPermissionsTrue '
	END
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	END
	
	IF @OrderByColumnName = N'CommentedDate'
	SET @MainContentFilter = @MainContentFilter + N'
		)
	) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1
	'

	IF @ByLetter IS NOT NULL AND  @ByLetter <> N'all'
	BEGIN
		IF @LocaleCode IS NULL
		BEGIN
			IF @ByLetter = N'OnlyNumbers'
				SET @MainContentFilter = @MainContentFilter + N') AND n.Title LIKE ''[0-9]%'''
			ELSE IF @ByLetter = N'SpecialChars'
				SET @MainContentFilter = @MainContentFilter + N') AND n.Title NOT LIKE ''[0-9]%'' AND LEFT(LTRIM(n.Title),1) NOT IN(SELECT KeyID FROM dbo.[{objectQualifier}EDS_StringListToTableString] (@Alphabet)) '
			ELSE
				SET @MainContentFilter = @MainContentFilter + N') AND UPPER(CAST(LEFT(LTRIM(n.Title), LEN(@ByLetter)) AS NCHAR)) LIKE CAST(@ByLetter AS NCHAR) + ''%'''
		END
		ELSE
		BEGIN
			IF @ByLetter = N'OnlyNumbers'
				SET @MainContentFilter = @MainContentFilter + N') AND CASE WHEN cl.ArticleID IS NULL THEN n.Title ELSE cl.Title END LIKE ''[0-9]%'''
			ELSE IF @ByLetter = N'SpecialChars'
				SET @MainContentFilter = @MainContentFilter + N')
					AND CASE WHEN cl.ArticleID IS NULL THEN n.Title ELSE cl.Title END NOT LIKE ''[0-9]%''
					--AND NOT EXISTS (
					--	SELECT NULL FROM
					--	(SELECT KeyID + ''%'' AS filterKey FROM dbo.[{objectQualifier}EDS_StringListToTableString] (@Alphabet)) AS filterAlpha
					--	WHERE CASE WHEN cl.ArticleID IS NULL THEN n.Title ELSE cl.Title END LIKE filterAlpha.filterKey
					--)

					AND UPPER(CAST(LEFT(LTRIM(CASE WHEN cl.ArticleID IS NULL THEN n.Title ELSE cl.Title END),1) AS NCHAR)) NOT IN(SELECT CAST(KeyID AS NCHAR) FROM dbo.[{objectQualifier}EDS_StringListToTableString] (@Alphabet)) '

			ELSE
				SET @MainContentFilter = @MainContentFilter + N') AND UPPER(CAST(LEFT(LTRIM(CASE WHEN cl.ArticleID IS NULL THEN n.Title ELSE cl.Title END), LEN(@ByLetter)) AS NCHAR)) LIKE CAST(@ByLetter AS NCHAR)  + ''%'''
		END
	END

SET @MainContentFilter = @MainContentFilter + N'
) '

IF @ByLetter IS NULL AND @PartialSql IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + @MainContentFilter + @PartialSql;
END
ELSE
BEGIN

	SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent '

	SET @sqlcommand = @sqlcommand + @MainContentFilter

	IF @LocaleCode IS NULL
	SET @sqlcommand = @sqlcommand + N'
	SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID],n.[ContactEmail], ';
	ELSE
	SET @sqlcommand = @sqlcommand + N'
	SELECT n.[ArticleID],n.[PortalID],n.[UserID]
		,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
		,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
		,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
		,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
		,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
		,n.[DetailType]
		,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
		,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet]
		,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
		,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
		,n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
		,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
		,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
		,n.[CFGroupeID],n.[ContactEmail], ';

	IF @QueryModulePermissions = 0
		SET @sqlcommand = @sqlcommand + N'0 AS CanEdit, '
	ELSE IF @CanEditAllContent = 1
		SET @sqlcommand = @sqlcommand + N'1 AS CanEdit, '
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		CASE WHEN @HasEditCategories = 0
		THEN 
			CASE WHEN EXISTS(
				SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0
			END
		ELSE
			CASE WHEN EXISTS(
				SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE '
				IF @EditOnlyAsOwner = 1
					SET @sqlcommand = @sqlcommand + N' n.UserID = @UserID AND '

				SET @sqlcommand = @sqlcommand + N' c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
			)
			OR EXISTS(
				SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0
			END
		END
		AS CanEdit, '
	END

	IF @LocaleCode IS NULL
	SET @sqlcommand = @sqlcommand + N'
		(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
		WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
		ORDER BY c.Position
		FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow,
		(		SELECT wfs.*, edas.Status,
		( SELECT TOP 1 war.RoleID
						FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveRoles AS war
						INNER JOIN {objectQualifier}UserRoles AS ur ON ur.RoleID = war.RoleID
						WHERE war.StateId = wfs.StateId AND ur.Userid=@userID
					 )  As RoleId,
					( SELECT TOP 1 wau.userId  
					FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveUsers AS wau
					WHERE wau.StateId = wfs.StateId AND wau.Userid =@userID
					)  As EditUserId
		FROM dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs
		LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS edas ON edas.StateId = wfs.StateId AND edas.ArticleId = n.ArticleID
		WHERE wfs.WorkflowId = n.WorkflowId
		ORDER BY wfs.position ASC
		FOR XML PATH(''WorkflowState''), ROOT(''WorkflowStates'')
	) AS WorkflowState,'
	ELSE
	SET @sqlcommand = @sqlcommand + N'
		(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", lc.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.Id
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
		WHERE ci.ArticleID = n.ArticleID
		ORDER BY c.Position
		FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow, 
		(		SELECT wfs.*, edas.Status,
		( SELECT TOP 1 war.RoleID
						FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveRoles AS war
						INNER JOIN {objectQualifier}UserRoles AS ur ON ur.RoleID = war.RoleID
						WHERE war.StateId = wfs.StateId AND ur.Userid=@userID
					 )  As RoleId,
					( SELECT TOP 1 wau.userId  
					FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveUsers AS wau
					WHERE wau.StateId = wfs.StateId AND wau.Userid =@userID
					)  As EditUserId
		FROM dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs
		LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS edas ON edas.StateId = wfs.StateId AND edas.ArticleId = n.ArticleID
		WHERE wfs.WorkflowId = n.WorkflowId
		ORDER BY wfs.position ASC
		FOR XML PATH(''WorkflowState''), ROOT(''WorkflowStates'')
	) AS WorkflowState,'

	IF @QueryModulePermissions = 0
		SET @sqlcommand = @sqlcommand + N' 0 AS Published, 0 AS Approve, '
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		CASE n.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		END AS Published, '
		IF @UserCanApprove = 0
			SET @sqlcommand = @sqlcommand + N'0 AS Approve, '
		ELSE
			SET @sqlcommand = @sqlcommand + N'
				CASE n.Approved
					WHEN 1 THEN 0
					WHEN 0 THEN n.Active
				END AS Approve, '
	END

	SET @sqlcommand = @sqlcommand + N' @AllContentCount AS ContentCount '

	IF @LocaleCode IS NULL
	BEGIN
		IF @OrderByColumnName = N'CommentedDate'
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN (
				SELECT finalSelection.[ArticleID],finalSelection.CommentedDate
				FROM (
					SELECT inner_n.[ArticleID],inner_ac.CommentedDate
						,ROW_NUMBER() OVER (ORDER BY '
						IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

						SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				) AS finalSelection
				WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
			) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
		END
		ELSE IF @OrderByCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN (
				SELECT finalSelection.[ArticleID],finalSelection.' + @OrderByColumnName + '
				FROM (
					SELECT inner_n.[ArticleID],fv.' + @OrderByColumnName + '
					,ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

					IF @OrderByDirection = 'ASC'
						SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
					SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
				) AS finalSelection
				WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
			) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			WHERE n.ArticleID IN (
				SELECT finalSelection.ArticleID
				FROM (
					SELECT inner_n.ArticleID, ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'inner_n.Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '
				
					SET @sqlcommand = @sqlcommand + N' ' + @CleanOrderColumnWithDirection + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					WHERE inner_n.ArticleID IN (SELECT ArticleID FROM AllContent)
				) AS finalSelection
				WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
			)';
		END
	END
	ELSE
	BEGIN
		IF @OrderByColumnName = N'CommentedDate'
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN  (
				SELECT finalSelection.[ArticleID],finalSelection.CommentedDate
				FROM (
					SELECT inner_n.[ArticleID],inner_ac.CommentedDate
						,ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

					 SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				) AS finalSelection
				WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
			) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
			LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
		END
		ELSE IF @OrderByCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN (
				SELECT finalSelection.[ArticleID],finalSelection.' + @OrderByColumnName + '
				FROM (
					SELECT inner_n.[ArticleID],fv.' + @OrderByColumnName + '
						,ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, fv.'

					IF @OrderByDirection = 'ASC'
						SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

					SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
				) AS finalSelection
				WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
			) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
			LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode
			WHERE n.ArticleID IN (
				SELECT finalSelection.ArticleID
				FROM (
					SELECT inner_n.ArticleID, ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'inner_n.Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

					SET @sqlcommand = @sqlcommand + N' ' + @CleanOrderColumnWithDirection + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					WHERE inner_n.ArticleID IN (SELECT ArticleID FROM AllContent)
				) AS finalSelection
				WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
			)';
		END
	END

	SET @sqlcommand = @sqlcommand + N' ORDER BY '
		IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'Featured DESC, '
		IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
		SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection
END

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#UserEditCategories'') IS NOT NULL
		DROP TABLE #UserEditCategories; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
		DROP TABLE #LocalizedCategories; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '

EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRange = @DateRange
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@LocaleCode = @LocaleCode
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@FilterByTagID = @FilterByTagID
	,@FieldsTemplateID = @FieldsTemplateID
	,@SimpleSearchFindCondition = @SimpleSearchFindCondition
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
	,@ByLetter = @ByLetter
	,@Alphabet = @Alphabet
	,@ArticleIDtoSearch = @ArticleIDtoSearch
GO
/****** Object:  StoredProcedure {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents]    Script Date: 17.12.2018. 15:12:48 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsSearchCFEvents]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@OrderByColumnName NVARCHAR(30),
	@OrderByDirection NVARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@ItemsFrom INT = 1,
	@ItemsTo INT = 5,
	@DateRangeType TINYINT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = NULL,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 0,
	@FillterSettingsSource BIT = 0,
	@StartDate DATETIME = NULL,
	@OuterModuleID INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = NULL,
	@NewsFilterAuthors NVARCHAR(1000) = NULL,
	@NewsFilterGroups NVARCHAR(1000) = NULL,
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange TINYINT = NULL,
	@AdminFuturePostsVisible BIT = 0,
	@UseAndOperator BIT = NULL,
	@GoogleMapsFilter TINYINT = NULL,
	
	@FieldsTemplateID INT = NULL,
	@SearchOnlySelectedCFGroup BIT = 0,
	@CFGeneratedSQL NVARCHAR(MAX) = NULL,
	@SimpleSearchFindCondition NVARCHAR(2048) = NULL,
	@SimpleSearchType TINYINT = NULL,
	@SysDatesWhereCondition NVARCHAR(1000) = NULL,
	@OrderByID INT = NULL,
	@IsPortalSharing BIT = 0,
	@CanEditAllContent BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1,

	@ByLetter NVARCHAR(20) = NULL,
	@Alphabet NVARCHAR(2000) = NULL,
	@PartialSql NVARCHAR(MAX) = NULL,

	@ArticleIDtoSearch INT = 0
AS
SET NOCOUNT ON;
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N'
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@ItemsFrom INT
	,@ItemsTo INT
	,@DateRangeType TINYINT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@StartDate DATETIME
	,@OuterModuleID INT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange TINYINT
	,@FieldsTemplateID INT
	,@SimpleSearchFindCondition NVARCHAR(2048)
	,@IsPortalSharing BIT
	,@CanEditAllContent BIT
	,@QueryPermissionsPerArticles BIT
	,@QueryModulePermissions BIT
	,@ByLetter NVARCHAR(20)
	,@Alphabet NVARCHAR(2000)
	,@ArticleIDtoSearch INT'

DECLARE @sqlcommand NVARCHAR(MAX);
DECLARE @MainContentFilter NVARCHAR(MAX);
DECLARE @TopInnerFilter NVARCHAR(MAX);
DECLARE @sqlSharingPortal NVARCHAR(300);
DECLARE @sqlSharingPortalAll NVARCHAR(300);

SET @sqlcommand = N'
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY); '

IF @IsPortalSharing = 1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
	INSERT INTO #SharingPortals
	SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID;';

	SET @sqlSharingPortal = N' EXISTS (SELECT PortalID FROM #SharingPortals AS sp WHERE sp.PortalID = na.PortalID) ';
	SET @sqlSharingPortalAll = N'PortalID IN (SELECT PortalID FROM #SharingPortals) ';
END
ELSE
BEGIN
	SET @sqlSharingPortal = N' na.PortalID = @PortalID ';
	SET @sqlSharingPortalAll = N'PortalID = @PortalID ';
END

IF @UserID <> -1
BEGIN
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #UserInRoles '

	IF @IsPortalSharing = 0
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM dbo.[{objectQualifier}Roles] AS r
		INNER JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		WHERE r.PortalID = @PortalID AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		SELECT DISTINCT r.[RoleID]
		FROM dbo.[{objectQualifier}Roles] AS r
		INNER JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsModulePortals] AS mp ON mp.SharingPortalID = r.PortalID
		WHERE mp.ModuleID = @ModuleID
			AND ur.UserID = @UserID
			AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
			AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate); '
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategories '

IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
BEGIN
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
	SET @sqlCommand = @sqlCommand + N'
		SELECT c.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
		WHERE c.PortalID = @PortalID; '
END
ELSE IF @UserID = -1
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal - ako je portal sharing to bi trebalo biti false
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID IS NULL
				AND rps.RoleID IS NULL); '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		WHERE rpsc.PremissionSettingsID IN (
			SELECT PremissionSettingsID
			FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps
			WHERE rps.PortalID = @PortalID
				AND rps.ModuleID = @ModuleID
				AND rps.RoleID IS NULL); '
	END
END
ELSE -- registrirani korisnik
BEGIN
	IF @PermissionSettingsSource = 1 -- by portal
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID
		WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL
		UNION
		SELECT upsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL; '
	END
	ELSE -- by module
	BEGIN
		SET @sqlCommand = @sqlCommand + N'
		SELECT rpsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpsc.PremissionSettingsID
		INNER JOIN #UserInRoles AS uir ON rps.RoleID = uir.RoleID 
		WHERE rps.ModuleID = @ModuleID
		UNION
		SELECT upsc.[CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upsc.PremissionSettingsID
		WHERE ups.UserID = @UserID AND ups.ModuleID = @ModuleID; '
	END
END

IF @NewsFilterCategories IS NOT NULL
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT fc.KeyID
	FROM dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc; '
ELSE IF @OnlyOneCategory IS NOT NULL -- filtrira se po jednoj kategoriji
	SET @sqlCommand = @sqlCommand + N'
	INSERT INTO #FilterCategories
	SELECT @OnlyOneCategory; '
ELSE IF @CategoryFilterType = 0 -- 0 All categories
	IF @IsPortalSharing = 1
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID); '
	ELSE
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList]
		WHERE PortalID = @PortalID; '
ELSE IF @OuterModuleID IS NOT NULL
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
		SET @sqlCommand = @sqlCommand + N'
		INSERT INTO #FilterCategories
		SELECT [CategoryID]
		FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems]
		WHERE ModuleID = @OuterModuleID; '
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @IsPortalSharing = 1
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				UNION ALL
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		ELSE
		SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
					WHERE ci.ModuleID = @OuterModuleID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
	END
END
ELSE
BEGIN
	IF @CategoryFilterType = 1 -- 1 - SELECTion
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsPortalCategoryItems]
			WHERE PortalID = @PortalID; '
		ELSE -- module
			SET @sqlCommand = @sqlCommand + N'
			INSERT INTO #FilterCategories
			SELECT [CategoryID]
			FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems]
			WHERE ModuleID = @ModuleID; '
	END
	ELSE IF @CategoryFilterType = 2 -- 2 - AutoAdd
	BEGIN
		IF @FillterSettingsSource = 1 -- portal
		BEGIN
			SET @sqlCommand = @sqlCommand + N'
			;WITH hierarchy AS(
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE EXISTS (
					SELECT [CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS ci
					WHERE ci.PortalID = @PortalID
						AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
				)
				AND cl.PortalID = @PortalID
				UNION ALL
				SELECT cl.[CategoryID]
				FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
			)
			INSERT INTO #FilterCategories
			SELECT DISTINCT CategoryID
			FROM hierarchy; '
		END
		ELSE -- module
		BEGIN
			IF @IsPortalSharing = 1
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID IN (SELECT SharingPortalID FROM dbo.[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
					UNION ALL
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
			ELSE
				SET @sqlCommand = @sqlCommand + N'
				;WITH hierarchy AS(
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE EXISTS (
						SELECT [CategoryID]
						FROM dbo.[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS ci
						WHERE ci.ModuleID = @ModuleID
							AND (ci.CategoryID = cl.ParentCategory OR ci.CategoryID = cl.CategoryID)
					)
					AND cl.PortalID = @PortalID
					UNION ALL
					SELECT cl.[CategoryID]
					FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					INNER JOIN hierarchy AS p ON cl.ParentCategory = p.CategoryID
				)
				INSERT INTO #FilterCategories
				SELECT DISTINCT CategoryID
				FROM hierarchy; '
		END
	END
END

SET @sqlCommand = @sqlCommand + N'
INSERT INTO #ViewCategoriesWithFilter
SELECT vc.CategoryID
FROM #ViewCategories AS vc
INTERSECT
SELECT fc.CategoryID
FROM #FilterCategories AS fc; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #LocalizedCategories (Id INT PRIMARY KEY, Name NVARCHAR(200), CategoryText NVARCHAR(MAX), CategoryURL NVARCHAR(1500)); '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N' 
	CREATE TABLE #UserEditCategories (CategoryID INT PRIMARY KEY);
	INSERT INTO #UserEditCategories
	SELECT CategoryID
	FROM dbo.[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,@CurrentDate)

	DECLARE @HasEditCategories BIT;

	IF EXISTS (SELECT 1 FROM #UserEditCategories)
		SET @HasEditCategories = 1;
	ELSE
		SET @HasEditCategories = 0; '

IF @NewsFilterCategories IS NULL
BEGIN
	IF @OuterModuleID IS NULL AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM dbo.[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM dbo.[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; '

	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID '
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID IS NULL AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N' 
		DECLARE @FilterTagsTable TABLE (TagID INT PRIMARY KEY);
		IF @FillterSettingsSource = 1
			INSERT INTO @FilterTagsTable SELECT TagID FROM dbo.[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM dbo.[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; '
END

DECLARE @sqlAuthors NVARCHAR(2000);

IF @NewsFilterAuthors IS NULL AND @NewsFilterGroups IS NULL
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0 AND @FilterByAuthor <> 0
			SET @sqlAuthors = N' 
				SELECT ap.[UserID]
				FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
	END
	ELSE
	BEGIN
		IF @OuterModuleID IS NOT NULL AND @ShowAllAuthors = 0
			SET @sqlAuthors = N'
			SELECT mai.[UserID]
			FROM dbo.[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai
			WHERE mai.ModuleID = @OuterModuleID
			UNION 
			SELECT ap.[UserID]
			FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @OuterModuleID; '
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			BEGIN
				IF @FillterSettingsSource = 1
					SET @sqlAuthors = N'
					SELECT pai.[UserID]
					FROM dbo.[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai
					WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID]
					FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
					WHERE pgi.PortalID = @PortalID; '
				ELSE
					SET @sqlAuthors = N'
					SELECT [UserID] FROM dbo.[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
					WHERE mgi.ModuleID = @ModuleID; '
			END
			ELSE IF @FilterByAuthor <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
				WHERE ap.[AuthorProfileID] = @FilterByAuthor; '
			ELSE IF @FilterByGroupID <> 0
				SET @sqlAuthors = N'
				SELECT ap.[UserID]
				FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
				INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
				WHERE agi.GroupID = @FilterByGroupID; '
		END
	END
END
ELSE
BEGIN
	IF @NewsFilterAuthors IS NOT NULL AND @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N'
		SELECT ap.[UserID]
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + '
		UNION
		SELECT ap.[UserID] 
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterAuthors IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID
		WHERE ap.' + @sqlSharingPortalAll + ' '
	ELSE IF @NewsFilterGroups IS NOT NULL
		SET @sqlAuthors = N' 
		SELECT ap.[UserID]
		FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
		INNER JOIN dbo.[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.' + @sqlSharingPortalAll + ' '
END

IF @sqlAuthors IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N'
	CREATE TABLE #FilterAuthors (UserID INT PRIMARY KEY);
	INSERT INTO #FilterAuthors ' + @sqlAuthors
END

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	INSERT INTO #LocalizedCategories
	SELECT c.CategoryID AS Id,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryName ELSE cl.Title END AS Name,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryText ELSE cl.CategoryText END AS CategoryText,
	CASE WHEN cl.CategoryID IS NULL THEN c.CategoryURL ELSE cl.CategoryURL END AS CategoryURL
	FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
	LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.CategoryID = cl.CategoryID AND cl.LocaleCode = @LocaleCode
	WHERE c.CategoryID IN (SELECT CategoryID FROM #ViewCategories) '
	
SET @sqlcommand = @sqlcommand + N' DECLARE @AllContentCount INT'

IF @CFGeneratedSQL IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' DECLARE @tempArticles TABLE (ArticleID INT PRIMARY KEY); ' + @CFGeneratedSQL;

IF @SimpleSearchFindCondition IS NOT NULL
	SET @sqlcommand = @sqlcommand + N' 
	DECLARE @SearchTable TABLE (Words NVARCHAR(256) NOT NULL);
	DECLARE @word NVARCHAR(256), @PosWord INT
	SET @SimpleSearchFindCondition = LTRIM(RTRIM(@SimpleSearchFindCondition))+ '':''
	SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
	IF REPLACE(@SimpleSearchFindCondition, '':'', '''') <> ''''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SimpleSearchFindCondition, @PosWord - 1)))
			IF @word <> ''''
			BEGIN
				SET @word = replace( 
							replace( 
							replace( 
							replace( @word
							,''\'', ''\\'' )
							,''%'', ''\%'' )
							,''_'', ''\_'' )
							,''['', ''\['' )
				INSERT INTO @SearchTable (Words) VALUES (''% ''+@word+''%'')
				INSERT INTO @SearchTable (Words) VALUES (@word+''%'')
			END
			SET @SimpleSearchFindCondition = RIGHT(@SimpleSearchFindCondition, LEN(@SimpleSearchFindCondition) - @PosWord)
			SET @PosWord = CHARINDEX('':'', @SimpleSearchFindCondition, 1)
		END
	END ';

SET @TopInnerFilter = N'';
	IF @CFGeneratedSQL IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID '
		
	IF @GoogleMapsFilter = 2
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN dbo.[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''' '
	ELSE IF @GoogleMapsFilter = 1
		SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID '

	IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
		SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '

	IF @FilterByDNNGroupID <> 0 
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN dbo.[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N'
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN dbo.[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

	IF @SimpleSearchFindCondition IS NOT NULL
	BEGIN
		IF @LocaleCode IS NULL
		BEGIN
			IF @SimpleSearchType = 2
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.ArticleID = @ArticleIDtoSearch OR na.CleanArticleData LIKE st.Words ESCAPE ''\'') '
			ELSE IF @SimpleSearchType = 1
			SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.ArticleID = @ArticleIDtoSearch OR na.Title LIKE st.Words ESCAPE ''\'' OR na.SubTitle LIKE st.Words ESCAPE ''\'') '
			ELSE
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.ArticleID = @ArticleIDtoSearch OR na.Title LIKE st.Words ESCAPE ''\'' OR na.SubTitle LIKE st.Words ESCAPE ''\'' OR na.CleanArticleData LIKE st.Words ESCAPE ''\'') '	
		END
		ELSE
		BEGIN
			IF @SimpleSearchType = 2
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.ArticleID = @ArticleIDtoSearch OR ncl.CleanArticleData LIKE st.Words ESCAPE ''\'') '
			ELSE IF @SimpleSearchType = 1
			SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.ArticleID = @ArticleIDtoSearch OR ncl.Title LIKE st.Words ESCAPE ''\'' OR ncl.SubTitle LIKE st.Words ESCAPE ''\'') '
			ELSE
				SET @TopInnerFilter = @TopInnerFilter + N'
				INNER JOIN @SearchTable AS st ON (na.ArticleID = @ArticleIDtoSearch OR ncl.Title LIKE st.Words ESCAPE ''\'' OR ncl.SubTitle LIKE st.Words ESCAPE ''\'' OR ncl.CleanArticleData LIKE st.Words ESCAPE ''\'') '
		END
	END

	IF @FilterByTags = 1 SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
	IF @FilterByArticles = 1 SET @TopInnerFilter = @TopInnerFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
	
SET @TopInnerFilter = @TopInnerFilter + N'
WHERE ' + @sqlSharingPortal + '
	AND na.EventArticle = 1 '
	
	IF @SysDatesWhereCondition IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + @SysDatesWhereCondition
	
	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE SET @TopInnerFilter = @TopInnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL SET @TopInnerFilter = @TopInnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1 SET @TopInnerFilter = @TopInnerFilter + N' AND na.Featured = 1 '
	IF @FilterByDNNUserID <> 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

	IF @QueryModulePermissions = 0
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0
			SET @TopInnerFilter = @TopInnerFilter + N' AND (na.UserID = @UserID OR (na.Active = 1 AND na.Approved = 1)) '
		ELSE
			SET @TopInnerFilter = @TopInnerFilter + N' AND (na.UserID = @UserID OR na.Active = 1) '
	END
	
	IF @SearchOnlySelectedCFGroup = 1
		SET @TopInnerFilter = @TopInnerFilter + N' AND na.CFGroupeID = @FieldsTemplateID '

IF @SimpleSearchFindCondition IS NOT NULL
BEGIN

	DECLARE @Top_TAG_InnerFilter NVARCHAR(MAX);
	SET @Top_TAG_InnerFilter = N'';
		IF @CFGeneratedSQL IS NOT NULL
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
		INNER JOIN @tempArticles AS ta ON na.ArticleID = ta.ArticleID '
		
	IF @GoogleMapsFilter = 2
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID
		INNER JOIN dbo.[{objectQualifier}EasyDNNnewsGoogleMapsData] AS gmd ON gmc.GoogleMapID = gmd.GoogleMapID AND gmd.PointData <> N'''' '
	ELSE IF @GoogleMapsFilter = 1
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleGoogleMapConnection] AS gmc ON na.ArticleID = gmc.ArticleID '

	IF @HideUnlocalizedItems = 1 OR (@LocaleCode IS NOT NULL AND @SimpleSearchFindCondition IS NOT NULL)
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' INNER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode '

	IF @FilterByDNNGroupID <> 0 
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
		INNER JOIN dbo.[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '
	ELSE IF @FilterByDNNUserID <> 0
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
		INNER JOIN dbo.[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey '

	IF @FilterByTags = 1 SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' INNER JOIN dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID '
	IF @FilterByArticles = 1 SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID '
	
	SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N'
	WHERE ' + @sqlSharingPortal + '
	AND na.EventArticle = 1 '
	
	IF @SysDatesWhereCondition IS NOT NULL
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + @SysDatesWhereCondition
	
	IF @AdminFuturePostsVisible = 1 AND @QueryModulePermissions = 1
	BEGIN
		IF @RestrictionByDateRange IS NOT NULL SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate '
		ELSE SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND @CurrentDate <= na.[ExpireDate] '
	END
	ELSE IF @RestrictionByDateRange IS NOT NULL SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
	ELSE SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] '
		
	IF @LocaleCode IS NULL SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.HideDefaultLocale = 0 '
	IF @Featured = 1 SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.Featured = 1 '
	IF @FilterByDNNUserID <> 0
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.UserID = @FilterByDNNUserID '
	ELSE IF @sqlAuthors IS NOT NULL
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.UserID IN (SELECT UserID FROM #FilterAuthors) '

	IF @QueryModulePermissions = 0
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.Approved = 1 AND na.Active = 1 '
	ELSE IF @CanEditAllContent = 0
	BEGIN
		IF @UserCanApprove = 0
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND (na.UserID = @UserID OR (na.Active = 1 AND na.Approved = 1)) '
		ELSE
			SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND (na.UserID = @UserID OR na.Active = 1) '
	END
	
	IF @SearchOnlySelectedCFGroup = 1
		SET @Top_TAG_InnerFilter = @Top_TAG_InnerFilter + N' AND na.CFGroupeID = @FieldsTemplateID '
END

DECLARE @CleanOrderColumnWithDirection NVARCHAR(35);
DECLARE @ControlTypeID INT;

IF @OrderByID IS NOT NULL
BEGIN
	DECLARE @CfOrderByID INT;
	DECLARE @SysOrderByID INT;
	DECLARE @SortOrder NCHAR(4);

	SELECT @CfOrderByID = CfIdOrderable
		,@SysOrderByID = SysIdOrderable
		,@SortOrder = SortOrder
	FROM dbo.[{objectQualifier}EasyDNNfieldsOrderByItems] AS obi
	WHERE obi.Id = @OrderByID
		--AND obi.CustomFieldID IN (
		--	SELECT CustomFieldID
		--	FROM dbo.[{objectQualifier}EasyDNNfieldsTemplateItems]
		--	WHERE FieldsTemplateID = @FieldsTemplateID
		--	)

	IF @CfOrderByID IS NOT NULL
	BEGIN

		SELECT @ControlTypeID = [ControlTypeID]
		FROM dbo.[{objectQualifier}EasyDNNfields]
		WHERE CustomFieldID = @CfOrderByID
			AND IsOrderable = 1;

		IF @ControlTypeID IS NOT NULL
		BEGIN
			SELECT @OrderByColumnName = CASE @ControlTypeID
					WHEN 1
						THEN N'[Text]'
					WHEN 3
						THEN N'[Int]'
					WHEN 4
						THEN N'[Decimal]'
					WHEN 5
						THEN N'[Decimal]'
					WHEN 6
						THEN N'[Text]'
					WHEN 9
						THEN N'[DateTime]'
					WHEN 10
						THEN N'[Text]'
					ELSE NULL
					END

			IF @OrderByColumnName IS NULL
			BEGIN
				SET @OrderByID = NULL;
				SET @CfOrderByID = NULL;
				SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
				SET @OrderByDirection = N'DESC';
				SET @OrderByColumnName = N'[PublishDate]';
			END
			ELSE
			BEGIN
				SET @OrderByCustomFieldID = @CfOrderByID;
				SET @OrderByDirection = @SortOrder;
			END
		END
		ELSE
		BEGIN
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByDirection = N'DESC';
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
		IF @SysOrderByID IS NOT NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			
			SELECT @OrderByColumnName = CASE @SysOrderByID
					WHEN 0
						THEN N'[DateAdded]'
					WHEN 1
						THEN N'[LastModified]'
					WHEN 2
						THEN N'[PublishDate]'
					WHEN 3
						THEN N'[ExpireDate]'
					WHEN 4
						THEN N'[NumberOfViews]'
					WHEN 5
						THEN N'[RatingValue]'
					WHEN 6
						THEN N'[Title]'
					WHEN 7
						THEN N'[StartDate]'
					WHEN 8
						THEN N'CommentedDate'
					WHEN 9
						THEN N'[NumberOfComments]'
					WHEN 10
						THEN N'NEWID()'
					ELSE N'[PublishDate]'
					END
			
			SET @OrderByDirection = @SortOrder;
		END
		ELSE
		BEGIN	
			SET @OrderByID = NULL;
			SET @CfOrderByID = NULL;
			SET @OrderByCustomFieldID = NULL; -- ovo je zbog toga jer cforderby i taj parametar su isti!! slicni
			SET @OrderByDirection = N'DESC';
			SET @OrderByColumnName = N'[PublishDate]';
		END
END
ELSE IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SELECT @ControlTypeID = [ControlTypeID] FROM dbo.[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N'[Text]'
				WHEN 3 THEN N'[Int]'
				WHEN 4 THEN N'[Decimal]'
				WHEN 5 THEN N'[Decimal]'
				WHEN 6 THEN N'[Text]'
				WHEN 9 THEN N'[DateTime]'
				WHEN 10 THEN N'[Text]'
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N'[PublishDate]';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N'[PublishDate]';
	END
END

IF @OrderByColumnName = N'NEWID()'
BEGIN
	SET @CleanOrderColumnWithDirection = @OrderByColumnName
	SET @OrderByDirection = N''
END
ELSE
	SET @CleanOrderColumnWithDirection = @OrderByColumnName + N' ' + @OrderByDirection;

SET @MainContentFilter = N'
;WITH AllContent AS( '

	IF @ByLetter IS NOT NULL AND  @ByLetter <> N'all'
	BEGIN

		SET @MainContentFilter = @MainContentFilter + N'
			SELECT n.ArticleID, RecurringID,StartDate
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n '

		IF @LocaleCode IS NOT NULL
			SET @MainContentFilter = @MainContentFilter + N'
				LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode '

		SET @MainContentFilter = @MainContentFilter + N'
			INNER JOIN ('
	END

	IF @OrderByColumnName = N'CommentedDate'
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT ArticleID, CommentedDate,RecurringID,StartDate FROM (
		SELECT nc.[ArticleID]
			,nc.[DateAdded] AS CommentedDate
			,inner_all.RecurringID
			,inner_all.StartDate
			,ROW_NUMBER() OVER(PARTITION BY nc.[ArticleID], inner_all.RecurringID ORDER BY '
			
			IF @FirstOrderBy = 'Featured DESC' SET @MainContentFilter = @MainContentFilter + N'inner_all.Featured DESC, '
			
			SET @MainContentFilter = @MainContentFilter + N' nc.[DateAdded] ' + @OrderByDirection + ') AS OnlyFirstOccurance
			
		FROM dbo.[{objectQualifier}EasyDNNNewsComments] AS nc
		INNER JOIN (';
	END
	
	SET @MainContentFilter = @MainContentFilter + N'
	SELECT n.ArticleID,n.Featured,
		CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate,
		CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID
	FROM dbo.[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
	LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND '
	IF @DateRangeType = 3
		SET @MainContentFilter = @MainContentFilter + N' nerd.EndDateTime < @CurrentDate'
	ELSE IF @DateRangeType = 2
		SET @MainContentFilter = @MainContentFilter + N'
		((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
			 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
	ELSE IF @DateRangeType = 1
		BEGIN
			IF @ListArchive = 0
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
			ELSE
				SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
		END
	ELSE IF @DateRangeType = 0
		SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
	ELSE
		SET @MainContentFilter = @MainContentFilter + N' 1 = 0'
	
	SET @MainContentFilter = @MainContentFilter + N'
	WHERE n.ArticleID IN( '
	 
	 -- tu bi trebal staviti okolo da se filtrira po and !!!
	 
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
	BEGIN
		SET @MainContentFilter = @MainContentFilter + N'
		SELECT DISTINCT [ArticleID]
		FROM (
			SELECT na.[ArticleID], ROW_NUMBER() OVER (PARTITION BY na.[ArticleID] ORDER BY na.[ArticleID] DESC ) AS Recency
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
			INNER JOIN #FilterCategories AS fbc ON fbc.CategoryID = cat.CategoryID
			WHERE na.ArticleID IN ( ';
	END
	 
	SET @MainContentFilter = @MainContentFilter + N'
		SELECT [ArticleID]
		FROM (
			SELECT DISTINCT na.[ArticleID]
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND ne.Recurring = 0 '

			IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

			IF @DateRangeType = 3
				SET @MainContentFilter = @MainContentFilter + N' AND ne.EndDate < @CurrentDate'
			ELSE IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
				ELSE
					SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
			END
			ELSE IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '


		SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT DISTINCT na.[ArticleID]
			FROM dbo.[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 1
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
			IF @DateRangeType = 3
				SET @MainContentFilter = @MainContentFilter + N' nerd.EndDateTime < @CurrentDate'
			ELSE IF @DateRangeType = 2
				SET @MainContentFilter = @MainContentFilter + N'
				((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
			ELSE IF @DateRangeType = 1
				BEGIN
					IF @ListArchive = 0
						SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
					ELSE
						SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
				END
			ELSE IF @DateRangeType = 0
				SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
			ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

			SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'
				AND ne.Recurring = 1 '

			IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

			IF @SimpleSearchFindCondition IS NOT NULL
			BEGIN
				SET @MainContentFilter = @MainContentFilter + N'
				UNION
				SELECT ArticleID
				FROM (
					SELECT ArticleID
					FROM (
						SELECT ti.[ArticleID]
						FROM dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
						INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
						WHERE t.' + @sqlSharingPortalAll
						IF @SimpleSearchType = 4
						BEGIN
							SET @MainContentFilter = @MainContentFilter + N'
							UNION
							SELECT di.ArticleID
							FROM dbo.[{objectQualifier}EasyDNNNewsDocumentItems] AS di
							INNER JOIN dbo.[{objectQualifier}EasyDNNNewsDocuments] AS d ON di.DocumentID = d.DocEntryID
							INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
							WHERE d.' + @sqlSharingPortalAll + N'
								AND d.Visible = 1
							UNION
							SELECT li.ArticleID
							FROM dbo.[{objectQualifier}EasyDNNNewsLinkItems] AS li
							INNER JOIN dbo.[{objectQualifier}EasyDNNNewsLinks] AS l ON li.LinkID = l.LinkID
							INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
							WHERE l.' + @sqlSharingPortalAll
						END
					SET @MainContentFilter = @MainContentFilter + N'
					) AS allSearchFields
					INTERSECT
					SELECT ArticleID
					FROM (
						SELECT na.[ArticleID]
						FROM dbo.[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

						SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter + N'
							AND ne.Recurring = 0 '

						IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

						IF @DateRangeType = 3
							SET @MainContentFilter = @MainContentFilter + N' AND ne.EndDate < @CurrentDate'
						ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
						END
						ELSE IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT na.[ArticleID]
						FROM dbo.[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
						IF @DateRangeType = 3
							SET @MainContentFilter = @MainContentFilter + N' nerd.EndDateTime < @CurrentDate'
						ELSE IF @DateRangeType = 2
							SET @MainContentFilter = @MainContentFilter + N'
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
						ELSE IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
								ELSE
									SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
							END
						ELSE IF @DateRangeType = 0
							SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
						ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

						SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter + N'
							AND ne.Recurring = 1 '

						IF @QueryPermissionsPerArticles = 1 SET @MainContentFilter = @MainContentFilter + N' AND na.HasPermissions = 0 '

					SET @MainContentFilter = @MainContentFilter + N') AS permissionPerArticle';
				SET @MainContentFilter = @MainContentFilter + N') AS tagsdocumentsLinks';
			END

		SET @MainContentFilter = @MainContentFilter + N'
		) AS HasPermissionsFalse '

		IF @QueryPermissionsPerArticles = 1
		BEGIN
			SET @MainContentFilter = @MainContentFilter + N'
			UNION ALL
			SELECT [ArticleID] FROM (
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 0
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

					AND na.HasPermissions = 1
					AND ne.Recurring = 0 '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					IF @DateRangeType = 3
							SET @MainContentFilter = @MainContentFilter + N' AND ne.EndDate < @CurrentDate'
					ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					SET @MainContentFilter = @MainContentFilter + N'
					UNION
					SELECT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

					AND na.HasPermissions = 1
					AND ne.Recurring = 0 '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					END
					IF @DateRangeType = 3
							SET @MainContentFilter = @MainContentFilter + N' AND ne.EndDate < @CurrentDate'
					ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
					END
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

					IF @SimpleSearchFindCondition IS NOT NULL
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT ArticleID
						FROM (
							SELECT ArticleID
							FROM (
								SELECT ti.[ArticleID]
								FROM dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti
								INNER JOIN dbo.[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
								INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
								WHERE t.' + @sqlSharingPortalAll
								IF @SimpleSearchType = 4
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N'
									UNION
									SELECT di.ArticleID
									FROM dbo.[{objectQualifier}EasyDNNNewsDocumentItems] AS di
									INNER JOIN dbo.[{objectQualifier}EasyDNNNewsDocuments] AS d ON di.DocumentID = d.DocEntryID
									INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
									WHERE d.' + @sqlSharingPortalAll + N'
										AND d.Visible = 1
									UNION
									SELECT li.ArticleID
									FROM dbo.[{objectQualifier}EasyDNNNewsLinkItems] AS li
									INNER JOIN dbo.[{objectQualifier}EasyDNNNewsLinks] AS l ON li.LinkID = l.LinkID
									INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
									WHERE l.' + @sqlSharingPortalAll
								END
							SET @MainContentFilter = @MainContentFilter + N'
							) AS allSearchFields
							INTERSECT
							SELECT ArticleID
							FROM (
								SELECT na.[ArticleID]
								FROM dbo.[{objectQualifier}EasyDNNNews] AS na
								INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
								INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
								INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID '

								SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter + N'
								AND na.HasPermissions = 1
								AND ne.Recurring = 0 '
								IF @CanEditAllContent = 0
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
									IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
									ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
								END
								IF @DateRangeType = 3
									SET @MainContentFilter = @MainContentFilter + N' AND ne.EndDate < @CurrentDate'
								ELSE IF @DateRangeType = 1
								BEGIN
									IF @ListArchive = 0
										SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
									ELSE
										SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
								END
								ELSE IF @DateRangeType = 2
									SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

								SET @MainContentFilter = @MainContentFilter + N'
								UNION
								SELECT na.[ArticleID]
								FROM dbo.[{objectQualifier}EasyDNNNews] AS na
								INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
								INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
								INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 '

								SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter + N'
								AND na.HasPermissions = 1
								AND ne.Recurring = 0 '
								IF @CanEditAllContent = 0
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
								END
								IF @DateRangeType = 3
									SET @MainContentFilter = @MainContentFilter + N' AND ne.EndDate < @CurrentDate'
								ELSE IF @DateRangeType = 1
								BEGIN
									IF @ListArchive = 0
										SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate '
									ELSE
										SET @MainContentFilter = @MainContentFilter + N' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate '
								END
								ELSE IF @DateRangeType = 2
									SET @MainContentFilter = @MainContentFilter + N' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) '

							SET @MainContentFilter = @MainContentFilter + N') AS permissionPerArticle';

						SET @MainContentFilter = @MainContentFilter + N') AS tagsdocumentsLinks';
					END
				
				SET @MainContentFilter = @MainContentFilter + N'
				) AS NotRecurring
				UNION ALL
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 1
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) 
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
				IF @DateRangeType = 3
					SET @MainContentFilter = @MainContentFilter + N' nerd.EndDateTime < @CurrentDate'
				ELSE IF @DateRangeType = 2
					SET @MainContentFilter = @MainContentFilter + N'
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
						ELSE
							SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
					END
				ELSE IF @DateRangeType = 0
					SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
				ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

				SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

					AND na.HasPermissions = 1
					AND ne.Recurring = 1 '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
						IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
						ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
					END
					
				SET @MainContentFilter = @MainContentFilter + N' 
					UNION
					SELECT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories) 
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
					IF @DateRangeType = 3
						SET @MainContentFilter = @MainContentFilter + N' nerd.EndDateTime < @CurrentDate'
					ELSE IF @DateRangeType = 2
						SET @MainContentFilter = @MainContentFilter + N'
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
							ELSE
								SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
						END
					ELSE IF @DateRangeType = 0
						SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
					ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

					SET @MainContentFilter = @MainContentFilter + @TopInnerFilter + N'

					AND na.HasPermissions = 1
					AND ne.Recurring = 1 '
					IF @CanEditAllContent = 0
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
					END

					IF @SimpleSearchFindCondition IS NOT NULL
					BEGIN
						SET @MainContentFilter = @MainContentFilter + N'
						UNION
						SELECT ArticleID
						FROM (
							SELECT ArticleID
							FROM (
								SELECT ti.[ArticleID]
								FROM dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti
								INNER JOIN dbo.[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
								INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
								WHERE t.' + @sqlSharingPortalAll
								IF @SimpleSearchType = 4
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N'
									UNION
									SELECT di.ArticleID
									FROM dbo.[{objectQualifier}EasyDNNNewsDocumentItems] AS di
									INNER JOIN dbo.[{objectQualifier}EasyDNNNewsDocuments] AS d ON di.DocumentID = d.DocEntryID
									INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE ''\'' OR d.Description LIKE st.Words ESCAPE ''\'')
									WHERE d.' + @sqlSharingPortalAll + N'
										AND d.Visible = 1
									UNION
									SELECT li.ArticleID
									FROM dbo.[{objectQualifier}EasyDNNNewsLinkItems] AS li
									INNER JOIN dbo.[{objectQualifier}EasyDNNNewsLinks] AS l ON li.LinkID = l.LinkID
									INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE ''\'' OR l.Description LIKE st.Words ESCAPE ''\'')
									WHERE l.' + @sqlSharingPortalAll
								END
							SET @MainContentFilter = @MainContentFilter + N'
							) AS allSearchFields
							INTERSECT
							SELECT ArticleID
							FROM (
								SELECT na.[ArticleID]
								FROM dbo.[{objectQualifier}EasyDNNNews] AS na
								INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
								INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
								INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
								INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
								IF @DateRangeType = 3
									SET @MainContentFilter = @MainContentFilter + N' nerd.EndDateTime < @CurrentDate'
								ELSE IF @DateRangeType = 2
									SET @MainContentFilter = @MainContentFilter + N'
									((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
										 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
								ELSE IF @DateRangeType = 1
									BEGIN
										IF @ListArchive = 0
											SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
										ELSE
											SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
									END
								ELSE IF @DateRangeType = 0
									SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
								ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

								SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter + N'

								AND na.HasPermissions = 1
								AND ne.Recurring = 1 '
								IF @CanEditAllContent = 0
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N' AND aup.Show = 1 '
									IF @UserID = -1 SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID IS NULL '
									ELSE SET @MainContentFilter = @MainContentFilter + N' AND aup.UserID = @UserID '
								END

								SET @MainContentFilter = @MainContentFilter + N'
								UNION
								SELECT na.[ArticleID]
								FROM dbo.[{objectQualifier}EasyDNNNews] AS na
								INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
								INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
								INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
								INNER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND '
								IF @DateRangeType = 3
									SET @MainContentFilter = @MainContentFilter + N' nerd.EndDateTime < @CurrentDate'
								ELSE IF @DateRangeType = 2
									SET @MainContentFilter = @MainContentFilter + N'
									((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
										 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) '
								ELSE IF @DateRangeType = 1
									BEGIN
										IF @ListArchive = 0
											SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate '
										ELSE
											SET @MainContentFilter = @MainContentFilter + N' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate '
									END
								ELSE IF @DateRangeType = 0
									SET @MainContentFilter = @MainContentFilter + N' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) '
								ELSE SET @MainContentFilter = @MainContentFilter + N' 1 = 0 '

								SET @MainContentFilter = @MainContentFilter + @Top_TAG_InnerFilter + N'

								AND na.HasPermissions = 1
								AND ne.Recurring = 1 '
								IF @CanEditAllContent = 0
								BEGIN
									SET @MainContentFilter = @MainContentFilter + N' AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) '
								END

							SET @MainContentFilter = @MainContentFilter + N') AS permissionPerArticle';

						SET @MainContentFilter = @MainContentFilter + N') AS tagsdocumentsLinks';
					END

				SET @MainContentFilter = @MainContentFilter + N' 
				) AS Recurring
			) AS HasPermissionsTrue '
		END
	-- treba desti ako se koristi AND operator
	
	IF @UseAndOperator IS NOT NULL AND @NewsFilterCategories IS NOT NULL
		SET @MainContentFilter = @MainContentFilter + N'
			)
		) AS OnlyWithGoogleMaps
		WHERE Recency >= (SELECT COUNT(*) FROM #FilterCategories) ';
	
	SET @MainContentFilter = @MainContentFilter + N'
	) '
	
	IF @OrderByColumnName = N'CommentedDate'
		SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON nc.ArticleID = inner_all.ArticleID AND nc.Approved = ''True'' AND nc.' + @sqlSharingPortalAll + '
		) AS OnlyFirstRows
	WHERE OnlyFirstOccurance = 1'
	
	DECLARE @UseMask BIT = 1

	IF @ByLetter IS NOT NULL AND  @ByLetter <> N'all'
	BEGIN
		IF @LocaleCode IS NULL
		BEGIN
			IF @ByLetter = N'OnlyNumbers'
				SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON n.ArticleID = inner_all.ArticleID AND n.Title LIKE ''[0-9]%'''
			ELSE IF @ByLetter = N'SpecialChars'
				SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON n.ArticleID = inner_all.ArticleID AND n.Title NOT LIKE ''[0-9]%'' AND LEFT(LTRIM(n.Title),1) NOT IN(SELECT KeyID FROM dbo.[{objectQualifier}EDS_StringListToTableString] (@Alphabet)) '
			ELSE
				SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON n.ArticleID = inner_all.ArticleID AND UPPER(CAST(LEFT(LTRIM(n.Title), LEN(@ByLetter)) AS NCHAR)) LIKE CAST(@ByLetter AS NCHAR) + ''%'''
		END
		ELSE
		BEGIN
			IF @ByLetter = N'OnlyNumbers'
				SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON n.ArticleID = inner_all.ArticleID AND CASE WHEN cl.ArticleID IS NULL THEN n.Title ELSE cl.Title END LIKE ''[0-9]%'''
			ELSE IF @ByLetter = N'SpecialChars'
				SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON n.ArticleID = inner_all.ArticleID AND CASE WHEN cl.ArticleID IS NULL THEN n.Title ELSE cl.Title END NOT LIKE ''[0-9]%'' AND LEFT(LTRIM(CASE WHEN cl.ArticleID IS NULL THEN n.Title ELSE cl.Title END),1) NOT IN(SELECT KeyID FROM dbo.[{objectQualifier}EDS_StringListToTableString] (@Alphabet)) '
			ELSE
				SET @MainContentFilter = @MainContentFilter + N') AS inner_all ON n.ArticleID = inner_all.ArticleID AND UPPER(CAST(LEFT(LTRIM(CASE WHEN cl.ArticleID IS NULL THEN n.Title ELSE cl.Title END), LEN(@ByLetter)) AS NCHAR)) LIKE CAST(@ByLetter AS NCHAR)  + ''%'''
		END
	END

SET @MainContentFilter = @MainContentFilter + N' 
) '

IF @ByLetter IS NULL AND @PartialSql IS NOT NULL
BEGIN
	SET @sqlcommand = @sqlcommand + @MainContentFilter + @PartialSql;
END
ELSE
BEGIN

	SET @sqlcommand = @sqlcommand + @MainContentFilter + N' SELECT @AllContentCount = COUNT(ArticleID) FROM AllContent '

	SET @sqlcommand = @sqlcommand + @MainContentFilter

	IF @LocaleCode IS NULL
	SET @sqlcommand = @sqlcommand + N'
	SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,n.[TitleLink],n.[DetailType],n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle],n.[MainImageDescription],n.[CFGroupeID]
		,e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], '
	ELSE
	SET @sqlcommand = @sqlcommand + N'
	SELECT n.[ArticleID],n.[PortalID],n.[UserID]
		,CASE WHEN cl.ArticleID IS NULL THEN n.[Title] ELSE cl.[Title] END AS Title
		,CASE WHEN cl.ArticleID IS NULL THEN n.[SubTitle] ELSE cl.[SubTitle] END AS SubTitle
		,CASE WHEN cl.ArticleID IS NULL THEN n.[Summary] ELSE cl.[Summary] END AS Summary
		,CASE WHEN cl.ArticleID IS NULL THEN n.[Article] ELSE cl.[Article] END AS Article
		,n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
		,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active]
		,CASE WHEN cl.ArticleID IS NULL THEN n.[TitleLink] ELSE cl.[clTitleLink] END AS TitleLink
		,n.[DetailType]
		,CASE WHEN cl.ArticleID IS NULL THEN n.[DetailTypeData] ELSE cl.[DetailTypeData] END AS DetailTypeData
		,n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType]
		,n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme],n.[ArticleImageFolder],n.[NumberOfComments]
		,n.[ArticleImageSet]
		,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaDecription] ELSE cl.[MetaDecription] END AS MetaDecription
		,CASE WHEN cl.ArticleID IS NULL THEN n.[MetaKeywords] ELSE cl.[MetaKeywords] END AS MetaKeywords
		,n.[DisplayStyle],n.[DetailTarget]
		,n.[ArticleFromRSS],n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID]
		,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageTitle] ELSE cl.[MainImageTitle] END AS MainImageTitle
		,CASE WHEN cl.ArticleID IS NULL THEN n.[MainImageDescription] ELSE cl.[MainImageDescription] END AS MainImageDescription
		,n.[CFGroupeID],e_fsd.StartDate,e_fsd.RecurringID,n.[ContactEmail], ';


	IF @QueryModulePermissions = 0
		SET @sqlcommand = @sqlcommand + N'0 AS CanEdit, '
	ELSE IF @CanEditAllContent = 1
		SET @sqlcommand = @sqlcommand + N'1 AS CanEdit, '
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		CASE WHEN @HasEditCategories = 0
		THEN 
			CASE WHEN EXISTS(
				SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0
			END
		ELSE
			CASE WHEN EXISTS(
				SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c
				WHERE '
				IF @EditOnlyAsOwner = 1
					SET @sqlcommand = @sqlcommand + N' n.UserID = @UserID AND '

				SET @sqlcommand = @sqlcommand + N' c.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #UserEditCategories)
			)
			OR EXISTS(
				SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
				WHERE arp.ArticleID = n.ArticleID AND arp.Edit = 1 AND arp.RoleID IN (SELECT RoleID FROM #UserInRoles)
			)
			OR EXISTS(
				SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
				WHERE aup.ArticleID = n.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID
			)
			THEN 1 ELSE 0
			END
		END
		AS CanEdit, '
	END

	IF @LocaleCode IS NULL
	SET @sqlcommand = @sqlcommand + N'
		(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", c.CategoryName AS "@name", c.CategoryURL AS "@url", c.Color AS "@color", c.CategoryText AS "@description", c.CategoryImage AS "@image"
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
		WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
		ORDER BY c.Position
		FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow,
		(		SELECT wfs.*, edas.Status,
		( SELECT TOP 1 war.RoleID
						FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveRoles AS war
						INNER JOIN {objectQualifier}UserRoles AS ur ON ur.RoleID = war.RoleID
						WHERE war.StateId = wfs.StateId AND ur.Userid=@userID
					 )  As RoleId,
					( SELECT TOP 1 wau.userId  
					FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveUsers AS wau
					WHERE wau.StateId = wfs.StateId AND wau.Userid =@userID
					)  As EditUserId
		FROM dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs
		LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS edas ON edas.StateId = wfs.StateId AND edas.ArticleId = n.ArticleID
		WHERE wfs.WorkflowId = n.WorkflowId
		ORDER BY wfs.position ASC
		FOR XML PATH(''WorkflowState''), ROOT(''WorkflowStates'')
	) AS WorkflowState, '
	ELSE
	SET @sqlcommand = @sqlcommand + N'
		(SELECT c.CategoryID AS "@id", c.PortalID AS "@portalid", lc.Name AS "@name", lc.CategoryURL AS "@url", c.Color AS "@color", lc.CategoryText AS "@description", c.CategoryImage AS "@image"
		FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] AS c
		INNER JOIN #LocalizedCategories AS lc ON c.CategoryID = lc.Id
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS ci ON ci.CategoryID = c.CategoryID
		WHERE ci.ArticleID = n.ArticleID
		ORDER BY c.Position
		FOR XML PATH(''category''), ROOT(''categories'')) AS CatToShow,
		(		SELECT wfs.*, edas.Status,
		( SELECT TOP 1 war.RoleID
						FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveRoles AS war
						INNER JOIN {objectQualifier}UserRoles AS ur ON ur.RoleID = war.RoleID
						WHERE war.StateId = wfs.StateId AND ur.Userid=@userID
					 )  As RoleId,
					( SELECT TOP 1 wau.userId  
					FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveUsers AS wau
					WHERE wau.StateId = wfs.StateId AND wau.Userid =@userID
					)  As EditUserId
		FROM dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs
		LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS edas ON edas.StateId = wfs.StateId AND edas.ArticleId = n.ArticleID
		WHERE wfs.WorkflowId = n.WorkflowId
		ORDER BY wfs.position ASC
		FOR XML PATH(''WorkflowState''), ROOT(''WorkflowStates'')
	) AS WorkflowState, '

	IF @QueryModulePermissions = 0
		SET @sqlcommand = @sqlcommand + N' 0 AS Published, 0 AS Approve, '
	ELSE
	BEGIN
		SET @sqlcommand = @sqlcommand + N'
		CASE n.Active
			WHEN 1 THEN 0
			WHEN 0 THEN 1
		END AS Published, '
		IF @UserCanApprove = 0
			SET @sqlcommand = @sqlcommand + N'0 AS Approve, '
		ELSE
			SET @sqlcommand = @sqlcommand + N'
				CASE n.Approved
					WHEN 1 THEN 0
					WHEN 0 THEN n.Active
				END AS Approve, '
	END
	SET @sqlcommand = @sqlcommand + N' @AllContentCount AS ContentCount '

	IF @LocaleCode IS NULL
	BEGIN
		IF @OrderByColumnName = N'CommentedDate'
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN (
				SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
				FROM (
					SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
						,ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

					SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				) AS finalSelection
				WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
			) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
		END
		ELSE IF @OrderByCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N',e_fsd.' + @OrderByColumnName + ',(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END)
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN (
				SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
				FROM (
					SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
					,ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'Featured DESC'
						SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

					IF @OrderByDirection = 'ASC'
						SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'

					SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
				) AS finalSelection
				WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
			) AS e_fsd ON n.ArticleID = e_fsd.ArticleID ';
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN (
				SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
				FROM (
					SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
						,ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

					SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				) AS finalSelection
				WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
			) AS e_fsd ON n.ArticleID = e_fsd.ArticleID '
		END
	END
	ELSE
	BEGIN
		IF @OrderByColumnName = N'CommentedDate'
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN (
				SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.CommentedDate
				FROM (
					SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,inner_ac.CommentedDate
						,ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

					SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				) AS finalSelection
				WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
			) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
			LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
		END
		ELSE IF @OrderByCustomFieldID IS NOT NULL
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN (
				SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID,finalSelection.' + @OrderByColumnName + '
				FROM (
					SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID,fv.' + @OrderByColumnName + '
						,ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

					IF @OrderByDirection = 'ASC'
						SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
				
					SET @sqlcommand = @sqlcommand + N'fv.'+ @CleanOrderColumnWithDirection + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
					LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = inner_n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID
				) AS finalSelection
				WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
			) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
			LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
		END
		ELSE
		BEGIN
			SET @sqlcommand = @sqlcommand + N'
			FROM dbo.[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN (
				SELECT finalSelection.[ArticleID],finalSelection.StartDate,finalSelection.RecurringID
				FROM (
					SELECT inner_n.[ArticleID],inner_ac.StartDate,inner_ac.RecurringID
						,ROW_NUMBER() OVER (ORDER BY '
					IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'inner_n.Featured DESC, '

					SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection + N') AS Kulike
					FROM dbo.[{objectQualifier}EasyDNNNews] AS inner_n
					INNER JOIN AllContent AS inner_ac ON inner_n.ArticleID = inner_ac.ArticleID
				) AS finalSelection
				WHERE finalSelection.Kulike BETWEEN @ItemsFrom AND @ItemsTo
			) AS e_fsd ON n.ArticleID = e_fsd.ArticleID
			LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsContentLocalization] AS cl ON n.ArticleID = cl.ArticleID AND cl.LocaleCode = @LocaleCode ';
		END
	END

	SET @sqlcommand = @sqlcommand + N' ORDER BY '
		IF @FirstOrderBy = 'Featured DESC' SET @sqlcommand = @sqlcommand + N'Featured DESC, '
		IF @OrderByCustomFieldID IS NOT NULL AND @OrderByDirection = 'ASC'
			SET @sqlcommand = @sqlcommand + N'(CASE WHEN ' + @OrderByColumnName + ' IS NULL THEN 1 ELSE 0 END),'
		SET @sqlcommand = @sqlcommand + @CleanOrderColumnWithDirection
END

SET @sqlcommand = @sqlcommand + N'
IF OBJECT_ID(''tempdb..#UserInRoles'') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''tempdb..#ViewCategories'') IS NOT NULL
	DROP TABLE #ViewCategories;
IF OBJECT_ID(''tempdb..#ViewCategoriesWithFilter'') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
IF OBJECT_ID(''tempdb..#FilterCategories'') IS NOT NULL
	DROP TABLE #FilterCategories; '

IF @IsPortalSharing = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#SharingPortals'') IS NOT NULL
		DROP TABLE #SharingPortals; '

IF @CanEditAllContent = 0 AND @QueryModulePermissions = 1
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#UserEditCategories'') IS NOT NULL
		DROP TABLE #UserEditCategories; '

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#LocalizedCategories'') IS NOT NULL
		DROP TABLE #LocalizedCategories; '

IF @sqlAuthors IS NOT NULL
	SET @sqlcommand = @sqlcommand + N'
	IF OBJECT_ID(''tempdb..#FilterAuthors'') IS NOT NULL
		DROP TABLE #FilterAuthors; '
		
EXEC SP_EXECUTESQL @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@ItemsFrom = @ItemsFrom
	,@ItemsTo = @ItemsTo
	,@DateRangeType = @DateRangeType
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@StartDate = @StartDate
	,@OuterModuleID = @OuterModuleID
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange
	,@FieldsTemplateID = @FieldsTemplateID
	,@SimpleSearchFindCondition = @SimpleSearchFindCondition
	,@IsPortalSharing = @IsPortalSharing
	,@CanEditAllContent = @CanEditAllContent
	,@QueryPermissionsPerArticles = @QueryPermissionsPerArticles
	,@QueryModulePermissions = @QueryModulePermissions
	,@ByLetter = @ByLetter
	,@Alphabet = @Alphabet
	,@ArticleIDtoSearch = @ArticleIDtoSearch
GO
