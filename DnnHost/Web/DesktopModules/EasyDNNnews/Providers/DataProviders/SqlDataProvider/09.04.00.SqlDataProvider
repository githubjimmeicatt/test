IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNews' and column_name = 'GoodVotesCount')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNews] ADD GoodVotesCount INT CONSTRAINT DF_{objectQualifier}EasyDNNNews_GoodVotesCount DEFAULT(0) NOT NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNews' and column_name = 'BadVotesCount')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNews] ADD BadVotesCount INT CONSTRAINT DF_{objectQualifier}EasyDNNNews_BadVotesCount DEFAULT(0) NOT NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'EnableArticleVoting')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD EnableArticleVoting BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_EnableArticleVoting DEFAULT(0) NOT NULL
END
GO
IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'EnableArticleVoting')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD EnableArticleVoting BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_EnableArticleVoting DEFAULT(0) NOT NULL
END
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetContentNoPermissions]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetContentNoPermissions]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetContentByPermissions]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@ArticleID INT,
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@PermissionSettingsSource BIT = 1,
	@IsPortalSharing BIT = 0,
	@QueryPermissionsPerArticles BIT = 1,
	@QueryModulePermissions BIT = 1
AS
SET NOCOUNT ON;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @ArticleAuthorId INT;

DECLARE @HasPermissionsPerArticle BIT;
IF @IsPortalSharing = 0
	SELECT @HasPermissionsPerArticle = HasPermissions, @ArticleAuthorId = UserID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews]
	WHERE ArticleID = @ArticleID AND PortalID = @PortalID;
ELSE
	SELECT @HasPermissionsPerArticle = HasPermissions, @ArticleAuthorId = UserID
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews]
	WHERE ArticleID = @ArticleID
		AND PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID);

IF @HasPermissionsPerArticle IS NOT NULL
BEGIN
	DECLARE @CanView BIT = 0;
	DECLARE @CanEdit BIT = 0;
	CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);

	IF @UserID <> -1
	BEGIN
		IF @IsPortalSharing = 0
			INSERT INTO #UserInRoles
			SELECT DISTINCT r.[RoleID]
			FROM {databaseOwner}[{objectQualifier}Roles] AS r
			INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
			WHERE r.PortalID = @PortalID
				AND ur.UserID = @UserID
				AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
				AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);
		ELSE
			INSERT INTO #UserInRoles
			SELECT DISTINCT r.[RoleID]
			FROM {databaseOwner}[{objectQualifier}Roles] AS r
			INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID
			WHERE r.PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID)
				AND ur.UserID = @UserID
				AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate)
				AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);
	END

	CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
	--fill #ViewCategories - it is used in main select
	IF @AdminOrSuperUser = 1 OR @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
	BEGIN
		IF @IsPortalSharing = 0
			INSERT INTO #ViewCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
			WHERE PortalID = @PortalID;
		ELSE
			INSERT INTO #ViewCategories
			SELECT [CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList]
			WHERE PortalID IN (SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleID);
	END
	ELSE IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc 
			WHERE rpsc.PremissionSettingsID IN (
				SELECT PremissionSettingsID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings]
				WHERE PortalID = @PortalID
					AND ModuleID IS NULL
					AND RoleID IS NULL
				);
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (
				SELECT [PremissionSettingsID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings]
				WHERE [PortalID] = @PortalID
					AND [ModuleID] = @ModuleID
					AND [RoleID] IS NULL
				);
	END
	ELSE
	BEGIN
		IF @PermissionSettingsSource = 1
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (
				SELECT [PremissionSettingsID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings]
				WHERE [PortalID] = @PortalID
					AND [ModuleID] IS NULL
					AND RoleID IN (SELECT [RoleID] FROM #UserInRoles)
				)
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			WHERE upsc.[PremissionSettingsID] IN (
				SELECT [PremissionSettingsID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings]
				WHERE [PortalID] = @PortalID
					AND [UserID] = @UserID
					AND [ModuleID] IS NULL
				);
		ELSE
			INSERT INTO #ViewCategories
			SELECT rpsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsShowCategories] AS rpsc
			WHERE rpsc.[PremissionSettingsID] IN (
				SELECT [PremissionSettingsID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings]
				WHERE [ModuleID] = @ModuleID
					AND RoleID IN (SELECT [RoleID] FROM #UserInRoles))
			UNION
			SELECT upsc.[CategoryID]
			FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsShowCategories] AS upsc
			WHERE upsc.[PremissionSettingsID] IN (
				SELECT [PremissionSettingsID]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings]
				WHERE [PortalID] = @PortalID
					AND [UserID] = @UserID
					AND [ModuleID] = @ModuleID
				)
	END

	IF @AdminOrSuperUser = 1
		SET @CanEdit = 1;
	ELSE
	BEGIN
		IF @HasPermissionsPerArticle = 1
		BEGIN
			IF @QueryPermissionsPerArticles = 0
			BEGIN
				IF EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					WHERE n.ArticleID=@ArticleID
						AND (n.UserID = @UserID OR ((n.Approved = 1 OR @UserCanApprove = 1) AND (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate])))
				)
				SET @CanView = 1;
			END
			ELSE
			BEGIN
				IF @UserID = -1
				BEGIN
					IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
						WHERE aup.ArticleID = @ArticleID
							AND aup.UserID IS NULL
							AND (n.Approved = 1 OR @UserCanApprove = 1)
							AND (n.UserID = @UserID OR (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]))
						)
						SET @CanView = 1;
				END
				ELSE
				BEGIN
					IF EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp
						WHERE arp.ArticleID = @ArticleID
							AND arp.Edit = 1
							AND arp.RoleID IN(SELECT [RoleID] FROM #UserInRoles)
					)
					OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup
						WHERE aup.ArticleID = @ArticleID
							AND aup.Edit = 1
							AND aup.UserID = @UserID
					)
						SET @CanEdit = 1;
					ELSE
						IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON n.ArticleID = aup.ArticleID
							WHERE aup.ArticleID = @ArticleID
								AND aup.UserID = @UserID
								AND aup.Show = 1
								AND (n.UserID = @UserID OR ((n.Approved = 1 OR @UserCanApprove = 1) AND (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate])))
							)
						OR EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON n.ArticleID = arp.ArticleID
							WHERE arp.ArticleID = @ArticleID
								AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
								AND arp.Show = 1
								AND (n.UserID = @UserID OR ((n.Approved = 1 OR @UserCanApprove = 1) AND (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate])))
							)
							SET @CanView = 1;
				END
			END
		END
		ELSE
		BEGIN
			-- resolve EDIT RIGHTS
			IF @Perm_EditAllCategores = 1
			BEGIN
				IF @EditOnlyAsOwner = 0 OR @ArticleAuthorId = @UserID
					SET @CanEdit = 1;
			END 
			ELSE
			BEGIN
				DECLARE @HasEditRights BIT = 0;

				IF @UserID = -1
				BEGIN
					IF @PermissionSettingsSource = 1
					BEGIN
						IF EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
							WHERE c.ArticleID = @ArticleID AND c.CategoryID IN (
								SELECT rpatc.[CategoryID]
								FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
								WHERE rpatc.[PremissionSettingsID] IN (
									SELECT [PremissionSettingsID]
									FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings]
									WHERE [PortalID] = @PortalID
										AND [ModuleID] IS NULL
										AND [RoleID] IS NULL
								)
							)
						)
						SET @HasEditRights = 1;
					END
					ELSE
					BEGIN
						IF EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
							WHERE c.ArticleID = @ArticleID AND c.CategoryID IN (
								SELECT rpatc.[CategoryID]
								FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
								WHERE rpatc.[PremissionSettingsID] IN (
									SELECT [PremissionSettingsID]
									FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings]
									WHERE [PortalID] = @PortalID
										AND [ModuleID] = @ModuleID
										AND [RoleID] IS NULL
								)
							)
						)
						SET @HasEditRights = 1;
					END
				END
				ELSE
				BEGIN
					IF @PermissionSettingsSource = 1
					BEGIN
						IF EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
							WHERE c.ArticleID = @ArticleID AND c.CategoryID IN (
								SELECT rpatc.[CategoryID]
								FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
								WHERE rpatc.[PremissionSettingsID] IN (
									SELECT [PremissionSettingsID]
									FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings]
									WHERE [PortalID] = @PortalID
										AND [ModuleID] IS NULL
										AND RoleID IN (SELECT [RoleID] FROM #UserInRoles))
								UNION
								SELECT upatc.[CategoryID]
								FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
								WHERE upatc.[PremissionSettingsID] IN (
									SELECT [PremissionSettingsID]
									FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings]
									WHERE [PortalID] = @PortalID
										AND [UserID] = @UserID
										AND [ModuleID] IS NULL
								)
							)
						)
						SET @HasEditRights = 1;
					END
					ELSE
					BEGIN
						IF EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c
							WHERE c.ArticleID = @ArticleID AND c.CategoryID IN (
								SELECT rpatc.[CategoryID]
								FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
								WHERE rpatc.[PremissionSettingsID] IN (
									SELECT [PremissionSettingsID]
									FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRolePremissionSettings]
									WHERE [ModuleID] = @ModuleID
										AND RoleID IN (SELECT [RoleID] FROM #UserInRoles)
								)
								UNION
								SELECT upatc.[CategoryID]
								FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
								WHERE upatc.[PremissionSettingsID] IN (
									SELECT [PremissionSettingsID]
									FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUserPremissionSettings]
									WHERE [UserID] = @UserID
										AND [PortalID] = @PortalID
										AND [ModuleID] = @ModuleID
								)
							)
						)
						SET @HasEditRights = 1;
					END
				END

				IF @HasEditRights = 1 AND (@EditOnlyAsOwner = 0 OR @ArticleAuthorId = @UserID)
					SET @CanEdit = 1;
			END

			IF @CanEdit <> 1
			BEGIN
				IF @Perm_ViewAllCategores = 1 OR @QueryModulePermissions = 0
				BEGIN
					IF EXISTS(SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						WHERE n.ArticleID=@ArticleID
							AND (n.UserID = @UserID OR ((n.Approved = 1 OR @UserCanApprove = 1) AND (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate])))
					)
					SET @CanView = 1;
				END
				ELSE
				BEGIN
					IF EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS c ON n.ArticleID = c.ArticleID
						INNER JOIN #ViewCategories AS uvc ON uvc.CategoryID = c.CategoryID
						WHERE n.ArticleID=@ArticleID
							AND (n.UserID = @UserID OR ((n.Approved = 1 OR @UserCanApprove = 1) AND (n.Active = 1 AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate])))
						)
						SET @CanView = 1;
				END
			END
		END
	END

	IF @CanEdit = 1 OR @CanView = 1
	BEGIN
		IF @LocaleCode IS NOT NULL AND EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID = @ArticleID AND LocaleCode = @LocaleCode)
		BEGIN
			SELECT n.[ArticleID],n.[PortalID],n.[UserID],ncl.[Title],ncl.[SubTitle],ncl.[Summary],ncl.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active],ncl.[clTitleLink] AS TitleLink,n.[DetailType]
				,ncl.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType],n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme]
				,n.[ArticleImageFolder],n.[NumberOfComments],n.[ArticleImageSet],ncl.[MetaDecription],ncl.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget],n.[ArticleFromRSS]
				,n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],ncl.[MainImageTitle]
				,ncl.[MainImageDescription],n.[CFGroupeID],n.[DetailsDocumentsTemplate],n.[DetailsLinksTemplate],n.[DetailsRelatedArticlesTemplate],n.[ContactEmail],ncl.[TitleTag]
				,n.[OpenGraphMetaTags],n.[TwitterCardMetaTags],[StructuredDataJSON],[GoodVotesCount],[BadVotesCount],@CanEdit AS CanEdit
				,(
					SELECT c.[CategoryID] AS "@id", c.[PortalID] AS "@portalid"
						,CASE WHEN cl.CategoryID IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS "@name", cl.[CategoryURL] AS "@url", c.[Color] AS "@color", cl.[CategoryText] AS "@description", c.[CategoryImage] AS "@image"
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.[CategoryID] = ci.[CategoryID]
					LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.[CategoryID] = cl.[CategoryID] AND cl.[LocaleCode] = @LocaleCode
					WHERE ci.ArticleID = n.ArticleID
					ORDER BY c.Position
					FOR XML PATH('category'), ROOT('categories')
				) AS CatToShow
				,(
					SELECT l.[localeCode] AS "@localeCode"
						,l.[titleLink] AS "@titleLink"
					FROM (
						SELECT cl.[LocaleCode] AS "localeCode"
							,cl.[clTitleLink] AS "titleLink"
						FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl
						WHERE cl.ArticleID = n.ArticleID
						UNION ALL
						SELECT '' AS "localeCode"
							,n.[TitleLink] AS "titleLink"
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
						WHERE n.ArticleID = @ArticleID
					) AS l
					FOR XML PATH('localization'), ROOT('localizations')
				) AS Localizations
				,CASE WHEN n.Active = 1 THEN 0 ELSE 1 END AS Published
				,CASE @UserCanApprove
					WHEN 0 THEN 0
					WHEN 1 THEN
						CASE n.Approved
						 WHEN 1 THEN 0
						 WHEN 0 THEN
							 CASE n.Active
								WHEN 1 THEN 1
								WHEN 0 THEN 0
							END
						END
				END AS Approve
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
			WHERE n.ArticleID = @ArticleID;
		END
		ELSE
		BEGIN
			SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
				,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active],n.[TitleLink],n.[DetailType]
				,n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType],n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme]
				,n.[ArticleImageFolder],n.[NumberOfComments],n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget],n.[ArticleFromRSS]
				,n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle]
				,n.[MainImageDescription],n.[CFGroupeID],n.[DetailsDocumentsTemplate],n.[DetailsLinksTemplate],n.[DetailsRelatedArticlesTemplate],n.[ContactEmail],n.[TitleTag]
				,n.[OpenGraphMetaTags],n.[TwitterCardMetaTags],[StructuredDataJSON],[GoodVotesCount],[BadVotesCount],@CanEdit AS CanEdit
				,(
					SELECT c.[CategoryID] AS "@id", c.[PortalID] AS "@portalid", c.[CategoryName] AS "@name", c.[CategoryURL] AS "@url", c.[Color] AS "@color", c.[CategoryText] AS "@description", c.[CategoryImage] AS "@image"
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
					WHERE ci.ArticleID = n.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM #ViewCategories)
					ORDER BY c.Position
					FOR XML PATH('category'), ROOT('categories')
				) AS CatToShow
				,(
					SELECT cl.[LocaleCode] AS "@localeCode"
						,cl.[clTitleLink] AS "@titleLink"
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl
					WHERE cl.ArticleID = n.ArticleID
					FOR XML PATH('localization'), ROOT('localizations')
				) AS Localizations
				,CASE WHEN n.Active = 1 THEN 0 ELSE 1 END AS Published
				,CASE @UserCanApprove
					WHEN 0 THEN 0
					WHEN 1 THEN
						CASE n.Approved
						 WHEN 1 THEN 0
						 WHEN 0 THEN
							 CASE n.Active
								WHEN 1 THEN 1
								WHEN 0 THEN 0
							END
						END
				END AS Approve
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			WHERE n.ArticleID = @ArticleID;
		END
	END
END

IF OBJECT_ID('tempdb..#UserInRoles') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID('tempdb..#ViewCategories') IS NOT NULL
	DROP TABLE #ViewCategories;
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetContentNoPermissions]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetContentNoPermissions] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetContentNoPermissions]
	@PortalID INT,
	@ModuleID INT,
	@ArticleID INT,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsPortalSharing BIT = 0
AS
SET NOCOUNT ON;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

DECLARE @ArticleExists BIT;
SET @ArticleExists = 0;

IF (@IsPortalSharing = 1
		AND EXISTS (
			SELECT 1
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			WHERE n.PortalID IN (
				SELECT SharingPortalID
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals]
				WHERE ModuleID = @ModuleID
				)
				AND n.ArticleID = @ArticleID
				AND n.Approved = 1
				AND n.Active = 1
				AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]
		)
	) OR (
	@IsPortalSharing = 0
		AND EXISTS (
			SELECT 1
			FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
			WHERE n.PortalID = @PortalID
				AND n.ArticleID = @ArticleID
				AND n.Approved = 1
				AND n.Active = 1
				AND @CurrentDate BETWEEN n.[PublishDate] AND n.[ExpireDate]
		)
	)
BEGIN
	IF @LocaleCode IS NOT NULL AND EXISTS (SELECT 1 FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] WHERE ArticleID = @ArticleID AND LocaleCode = @LocaleCode)
	BEGIN
		SELECT n.[ArticleID],n.[PortalID],n.[UserID],ncl.[Title],ncl.[SubTitle],ncl.[Summary],ncl.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
			,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active],ncl.[clTitleLink] AS TitleLink,n.[DetailType]
			,ncl.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType],n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme]
			,n.[ArticleImageFolder],n.[NumberOfComments],n.[ArticleImageSet],ncl.[MetaDecription],ncl.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget],n.[ArticleFromRSS]
			,n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],ncl.[MainImageTitle]
			,ncl.[MainImageDescription],n.[CFGroupeID],n.[DetailsDocumentsTemplate],n.[DetailsLinksTemplate],n.[DetailsRelatedArticlesTemplate],n.[ContactEmail],ncl.[TitleTag]
			,n.[OpenGraphMetaTags],n.[TwitterCardMetaTags],[StructuredDataJSON],[GoodVotesCount],[BadVotesCount]
			,0 AS CanEdit
			,0 AS Published
			,0 AS Approve
			,(
				SELECT c.[CategoryID] AS "@id", c.[PortalID] AS "@portalid"
					,CASE WHEN cl.CategoryID IS NULL THEN c.[CategoryName] ELSE cl.[Title] END AS "@name", cl.[CategoryURL] AS "@url", c.[Color] AS "@color", cl.[CategoryText] AS "@description", c.[CategoryImage] AS "@image"
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.[CategoryID] = ci.[CategoryID]
				LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryLocalization] AS cl ON c.[CategoryID] = cl.[CategoryID] AND cl.[LocaleCode] = @LocaleCode
				WHERE ci.ArticleID = n.ArticleID
				ORDER BY c.Position
				FOR XML PATH('category'), ROOT('categories')
			) AS CatToShow
			,(
				SELECT l.[localeCode] AS "@localeCode"
					,l.[titleLink] AS "@titleLink"
				FROM (
					SELECT cl.[LocaleCode] AS "localeCode"
						,cl.[clTitleLink] AS "titleLink"
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl
					WHERE cl.ArticleID = n.ArticleID
					UNION ALL
					SELECT '' AS "localeCode"
						,n.[TitleLink] AS "titleLink"
					FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
					WHERE n.ArticleID = @ArticleID
				) AS l
				FOR XML PATH('localization'), ROOT('localizations')
			) AS Localizations
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = n.ArticleID AND ncl.LocaleCode = @LocaleCode
		WHERE n.ArticleID = @ArticleID;
	END
	ELSE
	BEGIN
		SELECT n.[ArticleID],n.[PortalID],n.[UserID],n.[Title],n.[SubTitle],n.[Summary],n.[Article],n.[ArticleImage],n.[DateAdded],n.[LastModified],n.[PublishDate]
			,n.[ExpireDate],n.[Approved],n.[Featured],n.[NumberOfViews],n.[RatingValue],n.[RatingCount],n.[AllowComments],n.[Active],n.[TitleLink],n.[DetailType]
			,n.[DetailTypeData],n.[DetailsTemplate],n.[DetailsTheme],n.[GalleryPosition],n.[GalleryDisplayType],n.[ShowMainImage],n.[ShowMainImageFront],n.[CommentsTheme]
			,n.[ArticleImageFolder],n.[NumberOfComments],n.[ArticleImageSet],n.[MetaDecription],n.[MetaKeywords],n.[DisplayStyle],n.[DetailTarget],n.[ArticleFromRSS]
			,n.[HasPermissions],n.[EventArticle],n.[DetailMediaType],n.[DetailMediaData],n.[AuthorAliasName],n.[ShowGallery],n.[ArticleGalleryID],n.[MainImageTitle]
			,n.[MainImageDescription],n.[CFGroupeID],n.[DetailsDocumentsTemplate],n.[DetailsLinksTemplate],n.[DetailsRelatedArticlesTemplate],n.[ContactEmail],n.[TitleTag]
			,n.[OpenGraphMetaTags],n.[TwitterCardMetaTags],[StructuredDataJSON],[GoodVotesCount],[BadVotesCount]
			,0 AS CanEdit
			,0 AS Published
			,0 AS Approve
			,(
				SELECT c.[CategoryID] AS "@id", c.[PortalID] AS "@portalid", c.[CategoryName] AS "@name", c.[CategoryURL] AS "@url", c.[Color] AS "@color", c.[CategoryText] AS "@description", c.[CategoryImage] AS "@image"
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS ci ON c.CategoryID = ci.CategoryID
				WHERE ci.ArticleID = n.ArticleID
				ORDER BY c.Position
				FOR XML PATH('category'), ROOT('categories')
			) AS CatToShow
			,(
				SELECT cl.[LocaleCode] AS "@localeCode"
					,cl.[clTitleLink] AS "@titleLink"
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS cl
				WHERE cl.ArticleID = n.ArticleID
				FOR XML PATH('localization'), ROOT('localizations')
			) AS Localizations
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		WHERE n.ArticleID = @ArticleID;
	END
END
GO
