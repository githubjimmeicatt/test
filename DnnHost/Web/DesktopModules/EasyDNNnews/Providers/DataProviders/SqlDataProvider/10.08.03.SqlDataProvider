IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsTagCloudGetTags]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsTagCloudGetTags]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsTagCloudGetTags]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsTagCloudGetTags] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsTagCloudGetTags]
	@PortalId  INT,
	@UserId INT,
	@ModuleId INT,
	@OrderBy NVARCHAR(20) = 'Size DESC',
	@AdminOrSuperUser BIT  = 0,
	@RowCount INT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,
	@FilterByDnnUserId INT = 0,
	@FilterByDnnGroupId INT = 0,
	@ShowAllAuthors BIT = 1,
	@CategoryFilterType TINYINT = 0,
	@FilterByCategoryId INT = NULL,
	@HideUnlocalizedItems BIT = 0,
	@SatellitePermissionsSource TINYINT = 0,
	@PermissionsModuleId INT = 0,
	@FilterByArticles BIT = 1,
	@FilterByEvents BIT = 0
AS
SET NOCOUNT ON;
DECLARE @PortalsCount INT;
DECLARE @IsPortalSharing BIT
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();

CREATE TABLE #SharingPortals (PortalID INT PRIMARY KEY);
CREATE TABLE #UserInRoles (RoleID INT PRIMARY KEY);
CREATE TABLE #ViewCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #FilterCategories (CategoryID INT PRIMARY KEY);
CREATE TABLE #ViewCategoriesWithFilter (CategoryID INT PRIMARY KEY);

INSERT INTO #SharingPortals
SELECT SharingPortalID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModulePortals] WHERE ModuleID = @ModuleId;

SELECT @PortalsCount = @@ROWCOUNT;

IF @PortalsCount = 0
BEGIN
	SET @IsPortalSharing = 0;
	INSERT INTO #SharingPortals SELECT @PortalId
END
ELSE
BEGIN
	SET @IsPortalSharing = 1;
	IF @PortalsCount = 1
	BEGIN
		SET @PortalId = (SELECT PortalID FROM #SharingPortals); -- because of social dnn tvf
	END
END

IF @UserId <> -1
BEGIN
	INSERT INTO #UserInRoles
	EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsUserRoles] @PortalId,@UserId,@IsPortalSharing;
END

INSERT INTO #ViewCategories
EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsViewCategories] @PortalId,@PermissionsModuleId,@UserId,@AdminOrSuperUser,@SatellitePermissionsSource,@IsPortalSharing;

IF @FilterByCategoryId IS NULL
BEGIN
	INSERT INTO #FilterCategories
	EXEC {databaseOwner}[{objectQualifier}EasyDNNnewsFilterCategories] @PortalId,@ModuleId,@CategoryFilterType,NULL,NULL,NULL,@ModuleId;

	INSERT INTO #ViewCategoriesWithFilter
	SELECT c.CategoryID FROM #ViewCategories AS c WHERE c.CategoryID IN (SELECT CategoryID FROM #FilterCategories);
END
ELSE
BEGIN
	INSERT INTO #ViewCategoriesWithFilter SELECT [CategoryID] FROM #ViewCategories WHERE CategoryID = @FilterByCategoryId;
	INSERT INTO #FilterCategories SELECT @FilterByCategoryId;
END

DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT PRIMARY KEY);
IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDnnGroupId <> 0
		BEGIN	
			SET @FilterBySocialGroup = 1;
		END
	END
ELSE
BEGIN
	IF @ShowAllAuthors = 0
	BEGIN
		SET @FilterAuthorOrAuthors = 1;
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleId
		UNION 
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
			WHERE mgi.ModuleID = @ModuleId
	END
END

IF @RowCount < 1
	SET @RowCount = 5000;

IF @LocaleCode IS NULL
BEGIN
	IF @IsSocialInstance = 0
	BEGIN
		IF @FilterByArticles = 1 AND @FilterByEvents = 0 -- only articles
		BEGIN
			SELECT TOP(@RowCount) *
			FROM (
				SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			)
			GROUP BY ti.TagID, nt.Name) AS FinalContent
			ORDER BY
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
		ELSE IF @FilterByArticles = 0 AND @FilterByEvents = 1 -- only events
		BEGIN
			SELECT TOP(@RowCount) * FROM (
				SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (ne.EndDate > @CurrentDate OR ne.EndDate IS NULL OR (nerd.EndDateTime IS NOT NULL AND nerd.EndDateTime > @CurrentDate ))
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (ne.EndDate > @CurrentDate OR ne.EndDate IS NULL OR (nerd.EndDateTime IS NOT NULL AND nerd.EndDateTime > @CurrentDate ))
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (ne.EndDate > @CurrentDate OR ne.EndDate IS NULL OR (nerd.EndDateTime IS NOT NULL AND nerd.EndDateTime > @CurrentDate ))
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			)
			GROUP BY ti.TagID, nt.Name) AS FinalContent
			ORDER BY
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
		ELSE -- articles and events
		BEGIN
			SELECT TOP(@RowCount) * FROM (
				SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT DISTINCT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (ne.EndDate > @CurrentDate OR ne.EndDate IS NULL)
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						UNION ALL
						SELECT DISTINCT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (ne.EndDate > @CurrentDate OR ne.EndDate IS NULL)
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
						UNION
						SELECT DISTINCT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (ne.EndDate > @CurrentDate OR ne.EndDate IS NULL)
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
			)
			GROUP BY ti.TagID, nt.Name) AS FinalContent ORDER BY
			CASE WHEN @OrderBy ='Name ASC' THEN Name END,
			CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
			CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
			CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
	END
	ELSE IF @FilterBySocialGroup = 1
	BEGIN
		IF @FilterByArticles = 1 AND @FilterByEvents = 0 -- only articles
		BEGIN
			SELECT TOP(@RowCount) * FROM (
				SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
			)
			GROUP BY ti.TagID, nt.Name) AS FinalContent
			ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
		ELSE IF @FilterByArticles = 0 AND @FilterByEvents = 1 -- only events
		BEGIN
			SELECT TOP(@RowCount) * FROM (
				SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
			)
			GROUP BY ti.TagID, nt.Name) AS FinalContent
			ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
		ELSE -- articles and events
		BEGIN
			SELECT TOP(@RowCount) * FROM (
				SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
			)
			GROUP BY ti.TagID, nt.Name) AS FinalContent
			ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
	END
	ELSE IF @FilterByDnnUserId <> 0
	BEGIN
		IF @FilterByArticles = 1 AND @FilterByEvents = 0 -- only articles
		BEGIN
			SELECT TOP(@RowCount) * FROM (
				SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND na.UserID = @FilterByDnnUserId
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND na.UserID = @FilterByDnnUserId
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1  AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND na.UserID = @FilterByDnnUserId
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
			)
			GROUP BY ti.TagID, nt.Name) AS FinalContent
			ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
		ELSE IF @FilterByArticles = 0 AND @FilterByEvents = 1 -- only events
		BEGIN
			SELECT TOP(@RowCount) * FROM (
				SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND na.UserID = @FilterByDnnUserId
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND na.UserID = @FilterByDnnUserId
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1  AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND na.UserID = @FilterByDnnUserId
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
			)
			GROUP BY ti.TagID, nt.Name) AS FinalContent
			ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
		ELSE -- articles and events
		BEGIN
			SELECT TOP(@RowCount) * FROM (
				SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 0
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND na.UserID = @FilterByDnnUserId
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND na.UserID = @FilterByDnnUserId
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1  AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.HideDefaultLocale = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND na.UserID = @FilterByDnnUserId
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
			)
			GROUP BY ti.TagID, nt.Name) AS FinalContent
			ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;	
		END
	END
END
ELSE
BEGIN
	IF @IsSocialInstance = 0
	BEGIN
		IF @FilterByArticles = 1 AND @FilterByEvents = 0 -- only articles
		BEGIN
			;WITH AllTags(TagID, Size, Name) AS (
				SELECT TOP(@RowCount) * FROM (
					SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
					WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals) 
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
					)
					GROUP BY ti.TagID, nt.Name) AS Result
					ORDER BY 
						CASE WHEN @OrderBy ='Name ASC' THEN Name END,
						CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
						CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
						CASE WHEN @OrderBy ='Size ASC' THEN Size END
			),
			LocalizedTags(TagID, Size, Name) AS (
				SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
			),
			NotLocalizedTags(TagID, Size, Name) AS(
				SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
			)
			SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS FinalContent ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
		ELSE IF @FilterByArticles = 0 AND @FilterByEvents = 1 -- only events
		BEGIN
			;WITH AllTags(TagID, Size, Name) AS (
				SELECT TOP(@RowCount) * FROM (
					SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
					WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
						AND ti.ArticleID IN (
							SELECT na.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
							WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
								AND na.HasPermissions = 0
								AND na.EventArticle = 1
								AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
								AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
								AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
								AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
							UNION ALL
							SELECT na.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
							WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
								AND na.EventArticle = 1
								AND na.HasPermissions = 1
								AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
								AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
									AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
								))
								AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
								AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
							UNION
							SELECT na.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
							WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
								AND na.EventArticle = 1
								AND na.HasPermissions = 1
								AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
								AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
									AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
								))
								AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
								AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
					)
					GROUP BY ti.TagID, nt.Name) AS Result
					ORDER BY 
						CASE WHEN @OrderBy ='Name ASC' THEN Name END,
						CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
						CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
						CASE WHEN @OrderBy ='Size ASC' THEN Size END
			),
			LocalizedTags(TagID, Size, Name) AS (
				SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
			),
			NotLocalizedTags(TagID, Size, Name) AS(
				SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
			)
			SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS FinalContent ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;	
		END
		ELSE -- articles and events
		BEGIN
			;WITH AllTags(TagID, Size, Name) AS (
				SELECT TOP(@RowCount) * FROM (
					SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
					WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
						AND ti.ArticleID IN (
							SELECT na.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
							WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
								AND na.HasPermissions = 0
								AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
								AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
								AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
								AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
							UNION ALL
							SELECT na.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
							WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
								AND na.HasPermissions = 1
								AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
								AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
									AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
								))
								AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
								AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
							UNION
							SELECT na.[ArticleID]
							FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
							LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
							WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
								AND na.HasPermissions = 1
								AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
								AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
									AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
								))
								AND ((@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)) OR (@FilterAuthorOrAuthors = 0))
								AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
					)
					GROUP BY ti.TagID, nt.Name) AS Result
					ORDER BY 
						CASE WHEN @OrderBy ='Name ASC' THEN Name END,
						CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
						CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
						CASE WHEN @OrderBy ='Size ASC' THEN Size END
			),
			LocalizedTags(TagID, Size, Name) AS (
				SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
			),
			NotLocalizedTags(TagID, Size, Name) AS(
				SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
			)
			SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS FinalContent ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;	
		END
	END
	ELSE IF @FilterBySocialGroup = 1
	BEGIN
		IF @FilterByArticles = 1 AND @FilterByEvents = 0 -- only articles
		BEGIN
			;WITH AllTags(TagID, Size, Name) AS (
			SELECT TOP(@RowCount) * FROM (SELECT nt.TagID, COUNT(*) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
				GROUP BY ti.TagID, nt.TagID, nt.Name) AS Result
				ORDER BY 
					CASE WHEN @OrderBy ='Name ASC' THEN Name END,
					CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
					CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
					CASE WHEN @OrderBy ='Size ASC' THEN Size END
			),
			LocalizedTags(TagID, Size, Name) AS (
				SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
			),
			NotLocalizedTags(TagID, Size, Name) AS(
				SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
			)
			SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS FinalContent ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
		ELSE IF @FilterByArticles = 0 AND @FilterByEvents = 1 -- only events
		BEGIN
			;WITH AllTags(TagID, Size, Name) AS (
			SELECT TOP(@RowCount) * FROM (SELECT nt.TagID, COUNT(*) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
				GROUP BY ti.TagID, nt.TagID, nt.Name) AS Result ORDER BY 
					CASE WHEN @OrderBy ='Name ASC' THEN Name END,
					CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
					CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
					CASE WHEN @OrderBy ='Size ASC' THEN Size END
			),
			LocalizedTags(TagID, Size, Name) AS (
				SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
			),
			NotLocalizedTags(TagID, Size, Name) AS(
				SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
			)
			SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS FinalContent ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;		
		END
		ELSE -- articles and events
		BEGIN
			;WITH AllTags(TagID, Size, Name) AS (
			SELECT TOP(@RowCount) * FROM (SELECT nt.TagID, COUNT(*) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 0
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDnnGroupId
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
				GROUP BY ti.TagID, nt.TagID, nt.Name) AS Result
				ORDER BY 
					CASE WHEN @OrderBy ='Name ASC' THEN Name END,
					CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
					CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
					CASE WHEN @OrderBy ='Size ASC' THEN Size END
			),
			LocalizedTags(TagID, Size, Name) AS (
				SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
			),
			NotLocalizedTags(TagID, Size, Name) AS(
				SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
			)
			SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS FinalContent ORDER BY 
				CASE WHEN @OrderBy ='Name ASC' THEN Name END,
				CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
				CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
				CASE WHEN @OrderBy ='Size ASC' THEN Size END;		
		END
	END
	ELSE IF @FilterByDnnUserId <> 0
	BEGIN
		IF @FilterByArticles = 1 AND @FilterByEvents = 0 -- only articles
		BEGIN
			;WITH AllTags(TagID, Size, Name) AS (
			SELECT TOP(@RowCount) * FROM (SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 0
							AND na.UserID = @FilterByDnnUserId
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.UserID = @FilterByDnnUserId
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 0
							AND na.HasPermissions = 1
							AND na.UserID = @FilterByDnnUserId
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
				GROUP BY ti.TagID, nt.Name) AS Result
				ORDER BY 
					CASE WHEN @OrderBy ='Name ASC' THEN Name END,
					CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
					CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
					CASE WHEN @OrderBy ='Size ASC' THEN Size END
			),
			LocalizedTags(TagID, Size, Name) AS (
				SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
			),
			NotLocalizedTags(TagID, Size, Name) AS(
				SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
			)
			SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS FinalContent ORDER BY 
					CASE WHEN @OrderBy ='Name ASC' THEN Name END,
					CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
					CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
					CASE WHEN @OrderBy ='Size ASC' THEN Size END;
		END
		ELSE IF @FilterByArticles = 0 AND @FilterByEvents = 1 -- only events
		BEGIN
			;WITH AllTags(TagID, Size, Name) AS (
			SELECT TOP(@RowCount) * FROM (SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 0
							AND na.UserID = @FilterByDnnUserId
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.UserID = @FilterByDnnUserId
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.EventArticle = 1
							AND na.HasPermissions = 1
							AND na.UserID = @FilterByDnnUserId
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
				GROUP BY ti.TagID, nt.Name) AS Result
				ORDER BY 
					CASE WHEN @OrderBy ='Name ASC' THEN Name END,
					CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
					CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
					CASE WHEN @OrderBy ='Size ASC' THEN Size END
			),
			LocalizedTags(TagID, Size, Name) AS (
				SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
			),
			NotLocalizedTags(TagID, Size, Name) AS(
				SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
			)
			SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS FinalContent ORDER BY 
					CASE WHEN @OrderBy ='Name ASC' THEN Name END,
					CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
					CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
					CASE WHEN @OrderBy ='Size ASC' THEN Size END;		
		END
		ELSE -- articles and events
		BEGIN
			;WITH AllTags(TagID, Size, Name) AS (
			SELECT TOP(@RowCount) * FROM (SELECT ti.TagID, COUNT(ti.TagID) AS Size, nt.[Name]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsNewTags] AS nt ON nt.TagID = ti.TagID
				WHERE nt.PortalID IN (SELECT PortalID FROM #SharingPortals)
					AND ti.ArticleID IN (
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #ViewCategoriesWithFilter)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 0
							AND na.UserID = @FilterByDnnUserId
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND (@AdminOrSuperUser = 1 OR (na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION ALL
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.UserID = @FilterByDnnUserId
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (((@UserId = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserId))
								AND aup.Show = 1 AND na.Approved = 1 AND (na.Active=1 OR na.UserID=@UserId)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
						UNION
						SELECT na.[ArticleID]
						FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FilterCategories)
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserId, @FilterByDnnGroupId) AS t ON t.seckey = nss.SecurityKey
						LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID
						WHERE na.PortalID IN (SELECT PortalID FROM #SharingPortals)
							AND na.HasPermissions = 1
							AND na.UserID = @FilterByDnnUserId
							AND na.PublishDate <= @CurrentDate AND na.[ExpireDate] >= @CurrentDate
							AND ((@AdminOrSuperUser = 1) OR (na.Approved = 1
								AND (na.Active=1 OR na.UserID=@UserId) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles)
							))
							AND ((@HideUnlocalizedItems = 1 AND ncl.ArticleID IS NOT NULL AND ncl.LocaleCode = @LocaleCode) OR (@HideUnlocalizedItems = 0))
				)
				GROUP BY ti.TagID, nt.Name) AS Result
				ORDER BY 
					CASE WHEN @OrderBy ='Name ASC' THEN Name END,
					CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
					CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
					CASE WHEN @OrderBy ='Size ASC' THEN Size END
			),
			LocalizedTags(TagID, Size, Name) AS (
				SELECT t.[TagID],t.[Size],ntl.[Name] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsTagsLocalization] AS ntl INNER JOIN AllTags AS t on ntl.TagID = t.TagID WHERE ntl.LocaleCode = @LocaleCode
			),
			NotLocalizedTags(TagID, Size, Name) AS(
				SELECT [TagID],[Size],[Name] FROM AllTags WHERE TagID NOT IN (SELECT TagID FROM LocalizedTags)
			)
			SELECT TagID, Size, Name FROM (SELECT TagID, Size, Name FROM LocalizedTags UNION SELECT TagID, Size, Name FROM NotLocalizedTags) AS FinalContent ORDER BY 
					CASE WHEN @OrderBy ='Name ASC' THEN Name END,
					CASE WHEN @OrderBy ='Size DESC' THEN Size END DESC,
					CASE WHEN @OrderBy ='Name DESC' THEN Name END DESC,
					CASE WHEN @OrderBy ='Size ASC' THEN Size END;	
		END
	END
END

IF OBJECT_ID('tempdb..#SharingPortals') IS NOT NULL
	DROP TABLE #SharingPortals;
IF OBJECT_ID('tempdb..#UserInRoles') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID('tempdb..#ViewCategories') IS NOT NULL
	DROP TABLE #ViewCategories;
	IF OBJECT_ID('tempdb..#FilterCategories') IS NOT NULL
	DROP TABLE #FilterCategories;
IF OBJECT_ID('tempdb..#ViewCategoriesWithFilter') IS NOT NULL
	DROP TABLE #ViewCategoriesWithFilter;
GO
