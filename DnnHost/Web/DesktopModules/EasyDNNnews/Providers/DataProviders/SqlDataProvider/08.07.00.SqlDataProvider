SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCategoryItems]') AND type in (N'U'))
BEGIN
	CREATE TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCategoryItems](
		[RSSID] [int] NOT NULL,
		[CategoryID] [int] NOT NULL,
	 CONSTRAINT [PK_{objectQualifier}EasyDNNNewsRSSFeedCategoryItems] PRIMARY KEY CLUSTERED 
	(
		[RSSID] ASC,
		[CategoryID] ASC
	)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF)
	)
END
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsRSSFeedImport_EasyDNNNewsCategoryList]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedImport]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedImport] DROP CONSTRAINT [FK_{objectQualifier}EasyDNNNewsRSSFeedImport_EasyDNNNewsCategoryList]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsRSSFeedCategoryItems_EasyDNNNewsCategoryList]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCategoryItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCategoryItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsRSSFeedCategoryItems_EasyDNNNewsCategoryList] FOREIGN KEY([CategoryID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] ([CategoryID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsRSSFeedCategoryItems_EasyDNNNewsCategoryList]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCategoryItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCategoryItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsRSSFeedCategoryItems_EasyDNNNewsCategoryList]
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsRSSFeedCategoryItems_EasyDNNNewsRSSFeedImport]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCategoryItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCategoryItems]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyDNNNewsRSSFeedCategoryItems_EasyDNNNewsRSSFeedImport] FOREIGN KEY([RSSID])
REFERENCES {databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedImport] ([RSSID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyDNNNewsRSSFeedCategoryItems_EasyDNNNewsRSSFeedImport]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCategoryItems]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCategoryItems] CHECK CONSTRAINT [FK_{objectQualifier}EasyDNNNewsRSSFeedCategoryItems_EasyDNNNewsRSSFeedImport]
GO
IF EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsRSSFeedImport' AND column_name = 'CategoryID')
BEGIN
	EXEC('INSERT INTO {databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedCategoryItems] (RSSID, CategoryID)
	SELECT RSSID, CategoryID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedImport];
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsRSSFeedImport] DROP COLUMN [CategoryID]')
END
GO
