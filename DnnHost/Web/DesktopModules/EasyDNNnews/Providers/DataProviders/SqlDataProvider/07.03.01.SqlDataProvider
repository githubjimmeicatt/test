IF NOT EXISTS (SELECT UpdateVersion FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUpdate] WHERE UpdateVersion = '07.03.01')
BEGIN
	INSERT {databaseOwner}[{objectQualifier}EasyDNNNewsUpdate]([UpdateVersion],[Finished]) VALUES(N'07.03.01',0)
END
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetRegistratedUsers]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetRegistratedUsers]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlePreviousNext]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlePreviousNext]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetRegistratedUsers]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetRegistratedUsers]
	@ArticleID INT,
	@RecurringID INT,
	@SupportsCustomFields BIT,
	@SupportsPayment BIT
AS
SET NOCOUNT ON;
DECLARE @query NVARCHAR(MAX);
DECLARE @RegistrationCFtemplateID INT;
DECLARE @singleValueColumns NVARCHAR(MAX);
DECLARE @multiValueColumns NVARCHAR(MAX);

IF @SupportsCustomFields = 1
BEGIN
	
	SELECT @RegistrationCFtemplateID = [RegistrationCFtemplateID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] WHERE [RegistrationCFtemplateID] IS NOT NULL AND [ArticleID] = @ArticleID

	SELECT @singleValueColumns = STUFF((SELECT '','' + QUOTENAME(cf.[LabelValue]) 
						FROM {databaseOwner}[{objectQualifier}EasyDNNfields] AS cf
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] AS gti ON cf.CustomFieldID = gti.CustomFieldID
						WHERE gti.[FieldsTemplateID] = @RegistrationCFtemplateID AND cf.ControlTypeID IN (1,2,3,4,5)
						GROUP BY cf.[LabelValue],gti.Position
						ORDER BY gti.Position
				FOR XML PATH(''''), TYPE
				).value(''.'', ''NVARCHAR(MAX)'') 
			,1,1,'''');
	        
	SELECT @multiValueColumns = STUFF((SELECT '','' + QUOTENAME(cf.[LabelValue]) 
						FROM {databaseOwner}[{objectQualifier}EasyDNNfields] AS cf
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsTemplateItems] AS gti ON cf.CustomFieldID = gti.CustomFieldID
						WHERE gti.[FieldsTemplateID] = @RegistrationCFtemplateID AND cf.ControlTypeID IN (20,21,23)
						GROUP BY cf.[LabelValue],gti.Position
						ORDER BY gti.Position
				FOR XML PATH(''''), TYPE
				).value(''.'', ''NVARCHAR(MAX)'') 
			,1,1,'''');
END

DECLARE @EUIWHERECLAUSE NVARCHAR(300);
IF @RecurringID IS NULL
	SET @EUIWHERECLAUSE = N'' eui.ArticleID = @ArticleID ''
ELSE
	SET @EUIWHERECLAUSE = N'' eui.RecurringArticleID = @ArticleID AND eui.RecurringID = @RecurringID ''

SET @query = N''
SET NOCOUNT ON;

SELECT
	 eui.[Id] AS RegistrationID
	,rud.[FirstName]
	,rud.[LastName]
	,rud.[Email]
	,eui.[ApproveStatus]
	,eui.[UserStatus]
	,eui.[CreatedOnDate]
	,eui.[NumberOfTickets]
	,eui.[Message] ''
IF @RegistrationCFtemplateID IS NOT NULL -- prva i glavna provjera za CF
BEGIN
	IF @singleValueColumns IS NOT NULL AND @multiValueColumns IS NOT NULL 
		SET @query = @query + N'','' + @singleValueColumns + '','' +@multiValueColumns;
	ELSE IF @singleValueColumns IS NOT NULL
		SET @query = @query + N'','' + @singleValueColumns;
	ELSE IF @multiValueColumns IS NOT NULL
		SET @query = @query + N'','' + @multiValueColumns;
	ELSE
		SET @RegistrationCFtemplateID = NULL
END

IF @SupportsPayment = 1
SET @query = @query + N''
,ep.[SubTotal]
,ep.[Discount]
,ep.[TaxValue]
,ep.[EstimatedTotal]
,ep.[PaymentStatus]
'';

SET @query = @query + N'' FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] AS eui ''

IF @SupportsPayment = 1
SET @query = @query + N'' LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsPayment] AS ep ON eui.Id = ep.EventUserItemID ''

SET @query = @query + N'' 
INNER JOIN (
	SELECT eui.Id, au.[FirstName],au.[LastName],au.[Email]
	FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEmailAuthenticatedUsers] AS au 
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventUsers] AS eu ON au.Id = eu.EmailAuthenticatedUserID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] AS eui ON eui.EventUserID = eu.Id
	WHERE'' + @EUIWHERECLAUSE + N''
	UNION ALL
	SELECT eui.Id, u.[FirstName],u.[LastName],u.[Email]
	FROM {databaseOwner}[{objectQualifier}Users] AS u
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventUsers] AS eu ON u.UserID = eu.DNNUserID
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] AS eui ON eui.EventUserID = eu.Id
	WHERE'' + @EUIWHERECLAUSE + N''
)  AS rud ON rud.Id = eui.Id AND '' + @EUIWHERECLAUSE

IF @RegistrationCFtemplateID IS NOT NULL AND @multiValueColumns IS NOT NULL AND (@singleValueColumns IS NOT NULL) 
BEGIN
SET @query = @query + N''
 LEFT OUTER JOIN ( 
	SELECT singleValues.glb_fix_id,'' + @singleValueColumns + '','' + @multiValueColumns + '' FROM (
		SELECT glb_fix_id,'' + @singleValueColumns + '' 
            FROM 
            (
              SELECT eui.Id AS glb_fix_id, cf.[LabelValue] AS ColumnName,
				 CASE cf.[ControlTypeID]
					 WHEN 1 THEN CAST(frv.[Text] AS NVARCHAR(max))
					 WHEN 2 THEN CAST(frv.[RText] AS NVARCHAR(max))
					 WHEN 3 THEN CAST(frv.[Int] AS NVARCHAR(max))
					 WHEN 4 THEN CAST(frv.[Decimal] AS NVARCHAR(max))
					 WHEN 5 THEN CAST(frv.[Bit] AS NVARCHAR(max))
					 WHEN 6 THEN CAST(frv.[DateTime] AS NVARCHAR(max))
					 ELSE NULL
				END	AS ColumnValue 
				FROM {databaseOwner}[{objectQualifier}EasyDNNfields] AS cf
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsRegistrationValues] AS frv ON cf.[CustomFieldID] = frv.[CustomFieldID]
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] AS eui ON eui.Id = frv.[EventUserItemID]
				WHERE'' + @EUIWHERECLAUSE + N''AND cf.ControlTypeID IN (1,2,3,4,5)
            ) x
            pivot 
            (
                max(ColumnValue)
                for ColumnName in ('' + @singleValueColumns + '')
            ) p  
		) AS singleValues INNER JOIN (
			SELECT glb_fix_id,'' + @multiValueColumns + '' 
            FROM 
            (
             SELECT eui.Id AS glb_fix_id, cf.[LabelValue] AS ColumnName,me.[Text] AS ColumnValue 
				FROM {databaseOwner}[{objectQualifier}EasyDNNfields] AS cf
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsRegistrationMultiSelected] AS fme ON cf.[CustomFieldID] = fme.[CustomFieldID]
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] AS eui ON eui.Id = fme.[EventUserItemID]
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] AS me ON me.FieldElementID = fme.[FieldElementID]
				WHERE'' + @EUIWHERECLAUSE + N''AND cf.ControlTypeID IN (20,21,23)
            ) x
            pivot 
            (
                max(ColumnValue)
                for ColumnName in ('' + @multiValueColumns + '')
            ) p 
        ) AS MultiValues ON singleValues.glb_fix_id = MultiValues.glb_fix_id
	) AS cf_all ON cf_all.glb_fix_id = eui.Id AND '' + @EUIWHERECLAUSE;	
END
ELSE IF @RegistrationCFtemplateID IS NOT NULL AND (@singleValueColumns IS NOT NULL) 
BEGIN
SET @query = @query + N''
LEFT OUTER JOIN ( 
	SELECT glb_fix_id,'' + @singleValueColumns + '' 
    FROM 
    (
      SELECT eui.Id AS glb_fix_id, cf.[LabelValue] AS ColumnName,
		 CASE cf.[ControlTypeID]
			 WHEN 1 THEN CAST(frv.[Text] AS NVARCHAR(max))
			 WHEN 2 THEN CAST(frv.[RText] AS NVARCHAR(max))
			 WHEN 3 THEN CAST(frv.[Int] AS NVARCHAR(max))
			 WHEN 4 THEN CAST(frv.[Decimal] AS NVARCHAR(max))
			 WHEN 5 THEN CAST(frv.[Bit] AS NVARCHAR(max))
			 WHEN 6 THEN CAST(frv.[DateTime] AS NVARCHAR(max))
			 ELSE NULL
		END	AS ColumnValue 
		FROM {databaseOwner}[{objectQualifier}EasyDNNfields] AS cf
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsRegistrationValues] AS frv ON cf.[CustomFieldID] = frv.[CustomFieldID]
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] AS eui ON eui.Id = frv.[EventUserItemID]
		WHERE'' + @EUIWHERECLAUSE + N''AND cf.ControlTypeID IN (1,2,3,4,5)
    ) x
    pivot 
    (
        max(ColumnValue)
        for ColumnName in ('' + @singleValueColumns + '')
    ) p  
) AS cf_all ON cf_all.glb_fix_id = eui.Id AND '' + @EUIWHERECLAUSE;	
END
ELSE IF @RegistrationCFtemplateID IS NOT NULL AND (@multiValueColumns IS NOT NULL) 
BEGIN
SET @query = @query + N''
LEFT OUTER JOIN ( 
	SELECT glb_fix_id,'' + @multiValueColumns + '' 
    FROM 
    (
     SELECT eui.Id AS glb_fix_id, cf.[LabelValue] AS ColumnName,me.[Text] AS ColumnValue 
		FROM {databaseOwner}[{objectQualifier}EasyDNNfields] AS cf
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsRegistrationMultiSelected] AS fme ON cf.[CustomFieldID] = fme.[CustomFieldID]
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsUserItems] AS eui ON eui.Id = fme.[EventUserItemID]
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsMultiElements] AS me ON me.FieldElementID = fme.[FieldElementID]
		WHERE'' + @EUIWHERECLAUSE + N''AND cf.ControlTypeID IN (20,21,23)
    ) x
    pivot 
    (
        max(ColumnValue)
        for ColumnName in ('' + @multiValueColumns + '')
    ) p 
) AS cf_all ON cf_all.glb_fix_id = eui.Id AND '' + @EUIWHERECLAUSE;	
END

SET @query = @query + N'' WHERE '' + @EUIWHERECLAUSE;	
SET @query = @query + N'' ORDER BY FirstName;'';

DECLARE @paramList NVARCHAR(500);

SET @paramList = N''@ArticleID INT
	,@RecurringID INT''
		
exec sp_executesql @statement = @query
	,@paramList = @paramList
	,@ArticleID = @ArticleID
	,@RecurringID = @RecurringID

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetEventsPreviousNext]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@CurrentArticleID INT,
	@RecurringID INT = NULL,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@DateRangeType TINYINT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,

	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = '''',
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 0,
	@FillterSettingsSource BIT = 0,
	@StartDate DATETIME = NULL,
	@OuterModuleID INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = '''',
	@NewsFilterAuthors NVARCHAR(1000) = '''',
	@NewsFilterGroups NVARCHAR(1000) = '''',
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange TINYINT = NULL,
	@AdminFuturePostsVisible BIT = 0
AS
SET NOCOUNT ON;
DECLARE @EditAll TINYINT;

IF @AdminOrSuperUser = 1 OR (@EditOnlyAsOwner = 0 AND @Perm_EditAllCategores = 1) SET @EditAll = 1;
ELSE IF EXISTS(SELECT * FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,GETUTCDATE())) SET @EditAll = 2;
ELSE SET @EditAll = 3;

DECLARE @sqlcommand NVARCHAR(max);
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N''
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@CurrentArticleID INT
	,@RecurringID INT
	,@DateRangeType TINYINT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@StartDate DATETIME
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange TINYINT''
	
SET @sqlcommand = N''
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); ''

IF @NewsFilterCategories = ''''
BEGIN
	IF @OuterModuleID = 0 AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- -- portal settings
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; ''

	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID ''
		SET @FilterByTags = 1
	END	
	ELSE IF @OuterModuleID = 0 AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- portal settings
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; ''
END

SET @sqlcommand = @sqlcommand + N'' 

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
	
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO #UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND ( ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate ) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;

CREATE TABLE #UserViewCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserViewCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EDS_ViewPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_ViewAllCategores,@PermissionSettingsSource,@CurrentDate) ''

SET @sqlcommand = @sqlcommand + N''

IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;

CREATE TABLE #UserViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;

CREATE TABLE #FiltredByCategories (CategoryID INT NOT NULL PRIMARY KEY); ''

IF @NewsFilterCategories <> ''''
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #FiltredByCategories SELECT fc.KeyID FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID IN (SELECT CAtegoryID FROM #FiltredByCategories); ''
END
ELSE
BEGIN
	IF @OnlyOneCategory IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID = @OnlyOneCategory;
		INSERT INTO #FiltredByCategories SELECT @OnlyOneCategory; ''
	END
	ELSE IF @OuterModuleID <> 0
	BEGIN
		IF @CategoryFilterType = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
				
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID; ''
		END
		ELSE IF @CategoryFilterType = 2
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			;WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
		END
	END
	ELSE
	BEGIN
		IF @CategoryFilterType = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1
		BEGIN
			IF @FillterSettingsSource = 1
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID; ''
			END
			ELSE
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID; ''
			END
		END
		ELSE IF @CategoryFilterType = 2
		BEGIN
			IF @FillterSettingsSource = 1
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
			ELSE
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
		END
	END
END

DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

IF @NewsFilterAuthors = '''' AND @NewsFilterGroups = ''''
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
			IF @FilterByAuthor <> 0
				SET @FilterAuthorOrAuthors = 1;
	END
	ELSE
	BEGIN
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE
		BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;	
		ELSE IF @FilterByAuthor <> 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE IF @FilterByGroupID <> 0
			SET @FilterAuthorOrAuthors = 1;
		END
	END
END
ELSE
	SET @FilterAuthorOrAuthors = 1;

SET @sqlcommand = @sqlcommand + N''
DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY); ''

IF @NewsFilterAuthors = '''' AND @NewsFilterGroups = ''''
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END ''
		END
	END
	ELSE
	BEGIN
		-- ovaj dio odnosi se na filtriranje autora
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
				WHERE mgi.ModuleID = @OuterModuleID ''
		END
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				IF @FillterSettingsSource = 1 -- by portal
				BEGIN
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
						WHERE pgi.PortalID = @PortalID
				END
				ELSE -- by modul
				BEGIN
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
						WHERE mgi.ModuleID = @ModuleID
				END ''
			END
			ELSE IF @FilterByAuthor <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor; ''
			END
			ELSE IF @FilterByGroupID <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
					WHERE agi.GroupID = @FilterByGroupID ''
			END
		END
	END
END
ELSE
BEGIN
	SET @FilterAuthorOrAuthors = 1;
	IF @NewsFilterAuthors <> '''' AND @NewsFilterGroups <> ''''
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID WHERE PortalID = @PortalID
		UNION
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID ''
	ELSE IF @NewsFilterAuthors <> ''''
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID WHERE PortalID = @PortalID ''
	ELSE IF @NewsFilterGroups <> ''''
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT ap.[UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID ''
END

SET @sqlcommand = @sqlcommand + N'' DECLARE @CurrentArticlePosition INT '';

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N''
	DECLARE @FinalArticles TABLE
	(
		 [ArticleID] INT
		,[RecurringID] INT NULL
		,[Title] NVARCHAR (800)
		,[TitleLink] NVARCHAR (800)
		,[DetailType] VARCHAR (10) NULL
		,[DetailTypeData] NVARCHAR (800) NULL
		,[ArticlePosition] INT
	) ''

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N''Text''
				WHEN 3 THEN N''Int''
				WHEN 4 THEN N''Decimal''
				WHEN 5 THEN N''Decimal''
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N''PublishDate'';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N''PublishDate'';
	END
END

SET @CleanOrderColumnWithDirection = N''['' + @OrderByColumnName + N''] '' + @OrderByDirection;

DECLARE @MainFilter NVARCHAR(MAX);

SET @MainFilter = N''
;WITH MainFilters AS(
	SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

		IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
		IF @FilterByDNNGroupID <> 0 
			SET @MainFilter = @MainFilter + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
		ELSE IF @FilterByDNNUserID <> 0
			SET @MainFilter = @MainFilter + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

		IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
		IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
	SET @MainFilter = @MainFilter + N''
	WHERE na.PortalID=@PortalID
		AND na.EventArticle = 1 ''
		IF @AdminFuturePostsVisible = 1
		BEGIN
			IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
			ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
		END
		ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
		
		IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
		IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
		IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
		ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
	SET @MainFilter = @MainFilter + N''
),
AllContent AS(''

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @MainFilter = @MainFilter + N''
	SELECT ArticleID,RecurringID, ROW_NUMBER() OVER (ORDER BY ''
	IF @FirstOrderBy = ''Featured DESC''
		SET @MainFilter = @MainFilter + N''Featured DESC, ''
		
	IF @OrderByDirection = ''ASC''
		SET @MainFilter = @MainFilter + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
	
	SET @MainFilter = @MainFilter + @CleanOrderColumnWithDirection + N'', ArticleID) AS ArticlePosition ''
END
ELSE
BEGIN
	SET @MainFilter = @MainFilter + N''
	SELECT ArticleID,RecurringID, ROW_NUMBER() OVER (ORDER BY ''
	IF @FirstOrderBy = ''Featured DESC'' SET @MainFilter = @MainFilter + N''Featured DESC, ''

	SET @MainFilter = @MainFilter + @OrderByColumnName + N'' '' + @OrderByDirection + N'', ArticleID) AS ArticlePosition ''
END
	
	SET @MainFilter = @MainFilter + N''
	FROM (
		SELECT n.ArticleID,
			CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END AS StartDate,
			CASE WHEN ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
			n.Title,n.NumberOfViews,n.RatingValue,n.DateAdded,n.PublishDate,n.ExpireDate,n.LastModified,n.NumberOfComments,n.Featured ''
		
		IF @OrderByCustomFieldID IS NOT NULL
			SET @MainFilter = @MainFilter + N'',fv.['' + @OrderByColumnName + '']''
		
		SET @MainFilter = @MainFilter + N''
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.Recurring = 1 AND ''
		IF @DateRangeType = 2
			SET @MainFilter = @MainFilter + N''
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
		ELSE IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
				ELSE
					SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
			END
		ELSE IF @DateRangeType = 0
			SET @MainFilter = @MainFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
		ELSE
			SET @MainFilter = @MainFilter + N'' 1 = 0''
		
		IF @OrderByCustomFieldID IS NOT NULL
		BEGIN
			SET @MainFilter = @MainFilter + N''
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID''
		END
		
		SET @MainFilter = @MainFilter + N''
		 WHERE n.ArticleID IN(
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 0
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
				WHERE na.HasPermissions = 0
					AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
					AND ne.Recurring = 0 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
						ELSE
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
					SET @MainFilter = @MainFilter + N''
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 0 AND Recurring 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
				IF @DateRangeType = 2
					SET @MainFilter = @MainFilter + N''
					((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
						 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
				ELSE IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
						ELSE
							SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
					END
				ELSE IF @DateRangeType = 0
					SET @MainFilter = @MainFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
				ELSE SET @MainFilter = @MainFilter + N'' 1 = 0 ''
				SET @MainFilter = @MainFilter + N''
				WHERE na.HasPermissions = 0
					AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
					AND ne.Recurring = 1 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					END
				SET @MainFilter = @MainFilter + N''
			) AS HasPermissionsFalse
			UNION ALL
			SELECT [ArticleID] FROM (
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0
					WHERE na.HasPermissions = 1
						AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
						AND ne.Recurring = 0 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
						IF @UserID = -1 SET @MainFilter = @MainFilter + N'' AND aup.UserID IS NULL ''
						ELSE SET @MainFilter = @MainFilter + N'' AND aup.UserID = @UserID ''
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
						ELSE
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
					SET @MainFilter = @MainFilter + N''
					UNION
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0	
					WHERE na.HasPermissions = 1
						AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
						AND ne.Recurring = 0 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
						ELSE
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
					SET @MainFilter = @MainFilter + N''
				) AS NotRecurring
				UNION ALL
				SELECT [ArticleID] FROM (
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND UserPermissions AND Recurring 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
					IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N''
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
							ELSE
								SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
						END
					ELSE IF @DateRangeType = 0
						SET @MainFilter = @MainFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
					ELSE SET @MainFilter = @MainFilter + N'' 1 = 0 ''
					SET @MainFilter = @MainFilter + N''
					WHERE na.HasPermissions = 1
						AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
						AND ne.Recurring = 1 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
						IF @UserID = -1 SET @MainFilter = @MainFilter + N'' AND aup.UserID IS NULL ''
						ELSE SET @MainFilter = @MainFilter + N'' AND aup.UserID = @UserID ''
					END
					SET @MainFilter = @MainFilter + N'' 
					UNION
					SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na -- EV 1 AND HasPermissions 1 AND RolePermissions AND Recurring 0
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
					IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N''
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
							ELSE
								SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
						END
					ELSE IF @DateRangeType = 0
						SET @MainFilter = @MainFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
					ELSE SET @MainFilter = @MainFilter + N'' 1 = 0 ''
					SET @MainFilter = @MainFilter + N''
					WHERE na.HasPermissions = 1
						AND na.ArticleID IN (SELECT ArticleID FROM MainFilters)
						AND ne.Recurring = 1 ''
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					END
					SET @MainFilter = @MainFilter + N'' 
				) AS Recurring
			) AS HasPermissionsTrue			
		)
	) AS AllArticles
) '';

DECLARE @MainCondition VARCHAR(500);
IF @RecurringID IS NULL
	SET @sqlcommand = @sqlcommand + @MainFilter +N'' SELECT @CurrentArticlePosition = ArticlePosition FROM AllContent WHERE ArticleID = @CurrentArticleID; ''
ELSE
	SET @sqlcommand = @sqlcommand + @MainFilter +N'' SELECT @CurrentArticlePosition = ArticlePosition FROM AllContent WHERE ArticleID = @CurrentArticleID AND RecurringID = @RecurringID; ''

SET @sqlcommand = @sqlcommand + '' '' + @MainFilter;

IF @LocaleCode IS NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N''
SELECT TOP (3) n.[ArticleID],apn.RecurringID,n.[Title],n.[TitleLink],n.[DetailType],n.[DetailTypeData]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN AllContent AS apn ON n.ArticleID = apn.ArticleID
WHERE apn.ArticlePosition = @CurrentArticlePosition
	OR (apn.ArticlePosition = @CurrentArticlePosition - 1)
	OR (apn.ArticlePosition = @CurrentArticlePosition + 1)
ORDER BY apn.ArticlePosition ''
END
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N''	
	INSERT INTO @FinalArticles 
	SELECT n.[ArticleID],apn.RecurringID,n.[Title],n.[TitleLink],n.[DetailType],n.[DetailTypeData],apn.ArticlePosition 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN AllContent AS apn ON n.ArticleID = apn.ArticleID
		WHERE apn.ArticlePosition = @CurrentArticlePosition
			OR (apn.ArticlePosition = @CurrentArticlePosition - 1)
			OR (apn.ArticlePosition = @CurrentArticlePosition + 1)
			
	;WITH LocalizedArticles ([ArticleID],[RecurringID],[Title],[TitleLink],[DetailType],[DetailTypeData],[ArticlePosition]) AS(	
		SELECT fas.[ArticleID],fas.[RecurringID],ncl.[Title],ncl.[clTitleLink] AS TitleLink,fas.[DetailType],fas.[DetailTypeData],fas.[ArticlePosition]
		FROM @FinalArticles AS fas
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON fas.ArticleID = ncl.ArticleID AND LocaleCode = @LocaleCode
	)
	SELECT [ArticleID],[RecurringID],[Title],[TitleLink],[DetailType],[DetailTypeData],ArticlePosition FROM @FinalArticles WHERE ArticleID NOT IN (SELECT ArticleID FROM LocalizedArticles)
	UNION ALL
	SELECT [ArticleID],[RecurringID],[Title],[TitleLink],[DetailType],[DetailTypeData],ArticlePosition FROM LocalizedArticles
	ORDER BY ArticlePosition ''
END

SET @sqlcommand = @sqlcommand + N''
IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;
IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories; ''

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@CurrentArticleID = @CurrentArticleID
	,@RecurringID = @RecurringID
	,@DateRangeType = @DateRangeType
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@StartDate = @StartDate
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlePreviousNext]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetArticlePreviousNext]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@CurrentArticleID INT,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@DateRange BIT = 0,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,

	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = '''',
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = '''',
	@NewsFilterAuthors NVARCHAR(1000) = '''',
	@NewsFilterGroups NVARCHAR(1000) = '''',
	@FilterByTagID INT = NULL,
	@AdminFuturePostsVisible BIT = 0
AS
SET NOCOUNT ON;
DECLARE @EditAll TINYINT;

IF @AdminOrSuperUser = 1 OR (@EditOnlyAsOwner = 0 AND @Perm_EditAllCategores = 1) SET @EditAll = 1;
ELSE IF EXISTS(SELECT * FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,GETUTCDATE())) SET @EditAll = 2;
ELSE SET @EditAll = 3;

DECLARE @sqlcommand NVARCHAR(max);
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N''
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@CurrentArticleID INT
	,@DateRange BIT
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@OnlyOneCategory INT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@LocaleCode NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@FilterByTagID INT''

SET @sqlcommand = N''
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); ''

IF @NewsFilterCategories = ''''
BEGIN
	IF @OuterModuleID = 0 AND @FilterByArticles = 1
		SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- -- portal settings
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; ''
	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID; ''
		SET @FilterByTags = 1; -- must bee because of flow
	END
	ELSE IF @OuterModuleID = 0 AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- portal settings
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; ''
END

SET @sqlcommand = @sqlcommand + N''

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
	
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO #UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND ( ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate ) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;

CREATE TABLE #UserViewCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserViewCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EDS_ViewPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_ViewAllCategores,@PermissionSettingsSource,@CurrentDate) ''

SET @sqlcommand = @sqlcommand + N''
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;

CREATE TABLE #UserViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;

CREATE TABLE #FiltredByCategories (CategoryID INT NOT NULL PRIMARY KEY); ''

IF @NewsFilterCategories <> ''''
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #FiltredByCategories SELECT fc.KeyID FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID IN (SELECT CAtegoryID FROM #FiltredByCategories); ''
END
ELSE
BEGIN
	IF @OnlyOneCategory IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID = @OnlyOneCategory;
		INSERT INTO #FiltredByCategories SELECT @OnlyOneCategory; ''
	END
	ELSE IF @OuterModuleID <> 0
	BEGIN
		IF @CategoryFilterType = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
				
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID; ''
		END
		ELSE IF @CategoryFilterType = 2
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			;WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
		END
	END
	ELSE
	BEGIN
		IF @CategoryFilterType = 0 
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1
		BEGIN
			IF @FillterSettingsSource = 1
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID; ''
			END
			ELSE
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID; ''
			END
		END
		ELSE IF @CategoryFilterType = 2
		BEGIN
			IF @FillterSettingsSource = 1
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
			ELSE
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
		END
	END
END

DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

IF @NewsFilterAuthors = '''' AND @NewsFilterGroups = ''''
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
			IF @FilterByAuthor <> 0
				SET @FilterAuthorOrAuthors = 1;
	END
	ELSE
	BEGIN
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE
		BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;	
		ELSE IF @FilterByAuthor <> 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE IF @FilterByGroupID <> 0
			SET @FilterAuthorOrAuthors = 1;
		END
	END
END
ELSE
	SET @FilterAuthorOrAuthors = 1;

SET @sqlcommand = @sqlcommand + N''
DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY); ''

IF @NewsFilterAuthors = '''' AND @NewsFilterGroups = ''''
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END ''
		END
	END
	ELSE
	BEGIN
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
				WHERE mgi.ModuleID = @OuterModuleID ''
		END
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				IF @FillterSettingsSource = 1 -- by portal
				BEGIN
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
						WHERE pgi.PortalID = @PortalID
				END
				ELSE -- by modul
				BEGIN
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
						WHERE mgi.ModuleID = @ModuleID
				END ''
			END
			ELSE IF @FilterByAuthor <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor; ''
			END
			ELSE IF @FilterByGroupID <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
					WHERE agi.GroupID = @FilterByGroupID ''
			END
		END
	END
END
ELSE
BEGIN
	SET @FilterAuthorOrAuthors = 1;
	IF @NewsFilterAuthors <> '''' AND @NewsFilterGroups <> ''''
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID WHERE PortalID = @PortalID
		UNION
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID ''
	ELSE IF @NewsFilterAuthors <> ''''
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID WHERE PortalID = @PortalID ''
	ELSE IF @NewsFilterGroups <> ''''
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT ap.[UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID ''
END

SET @sqlcommand = @sqlcommand + N'' DECLARE @CurrentArticlePosition INT '';

IF @LocaleCode IS NOT NULL
	SET @sqlcommand = @sqlcommand + N''
	DECLARE @FinalArticles TABLE
	(
		 [ArticleID] INT
		,[Title] NVARCHAR (800)
		,[TitleLink] NVARCHAR (800)
		,[DetailType] VARCHAR (10) NULL
		,[DetailTypeData] NVARCHAR (800) NULL
		,[ArticlePosition] INT
	) ''

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N''Text''
				WHEN 3 THEN N''Int''
				WHEN 4 THEN N''Decimal''
				WHEN 5 THEN N''Decimal''
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N''PublishDate'';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N''PublishDate'';
	END
END

SET @CleanOrderColumnWithDirection = N''['' + @OrderByColumnName + N''] '' + @OrderByDirection;

DECLARE @MainFilter NVARCHAR(MAX);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @MainFilter = N''
	SELECT n.ArticleID, ROW_NUMBER() OVER (ORDER BY ''
	IF @FirstOrderBy = ''Featured DESC''
		SET @MainFilter = @MainFilter + N''n.Featured DESC, ''
		
	IF @OrderByDirection = ''ASC''
		SET @MainFilter = @MainFilter + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
	
	SET @MainFilter = @MainFilter + N''fv.''+ @CleanOrderColumnWithDirection + N'', n.ArticleID) AS ArticlePosition
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n 
	LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID''
END
ELSE
BEGIN
	SET @MainFilter = N''
	SELECT n.ArticleID, ROW_NUMBER() OVER (ORDER BY ''
	IF @FirstOrderBy = ''Featured DESC''
		SET @MainFilter = @MainFilter + N''n.Featured DESC, ''
	SET @MainFilter = @MainFilter + @OrderByColumnName + N'' '' + @OrderByDirection + N'', n.ArticleID) AS ArticlePosition
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n ''
END

	SET @MainFilter = @MainFilter + N''
	WHERE n.ArticleID IN (
		SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	''
		
		-- ovo je iz main filtera
		IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
		IF @FilterByDNNGroupID <> 0 
			SET @MainFilter = @MainFilter + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
		ELSE IF @FilterByDNNUserID <> 0
			SET @MainFilter = @MainFilter + N''
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
			INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''	
		IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
		IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
		-- do tud

		SET @MainFilter = @MainFilter + N''
		WHERE na.HasPermissions = 0
			
			AND na.PortalID=@PortalID
			AND na.EventArticle = 0 ''
			IF @EditAll <> 1
			BEGIN
				SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''
				IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
			END
			
			-- ovo je iz main filtera
			IF @AdminFuturePostsVisible = 1
			BEGIN
				IF @DateRange = 2 SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate ''
				ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
			END
			ELSE IF @DateRange = 2 OR @DateRange = 1 SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
			ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
			
			IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
			IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
			IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
			ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
			-- do tud
			
		SET @MainFilter = @MainFilter + N''
		UNION ALL
		SELECT ArticleID FROM (
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

				IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
				IF @FilterByDNNGroupID <> 0 
					SET @MainFilter = @MainFilter + N''
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
				ELSE IF @FilterByDNNUserID <> 0
					SET @MainFilter = @MainFilter + N''
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

				IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
				IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
			
			SET @MainFilter = @MainFilter + N''
			WHERE na.HasPermissions = 1
				
				AND na.PortalID=@PortalID
				AND na.EventArticle = 0 ''
				IF @AdminFuturePostsVisible = 1
				BEGIN
					IF @DateRange = 2 SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
				END
				ELSE IF @DateRange = 2 OR @DateRange = 1 SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
				ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
				
				IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
				IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
				IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
				ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
				
				IF @EditAll <> 1
				BEGIN
					SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 ''
					IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					IF @UserID = -1 SET @MainFilter = @MainFilter + N'' AND aup.UserID IS NULL ''
					ELSE SET @MainFilter = @MainFilter + N'' AND aup.UserID = @UserID ''
				END
				SET @MainFilter = @MainFilter + N''
			UNION
			SELECT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

				IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
				IF @FilterByDNNGroupID <> 0 
					SET @MainFilter = @MainFilter + N''
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
				ELSE IF @FilterByDNNUserID <> 0
					SET @MainFilter = @MainFilter + N''
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

				IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
				IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
			
			SET @MainFilter = @MainFilter + N''	 		 
			WHERE na.HasPermissions = 1		
				AND na.PortalID=@PortalID
				AND na.EventArticle = 0 ''
				IF @AdminFuturePostsVisible = 1
				BEGIN
					IF @DateRange = 2 SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= @FromDate AND na.[ExpireDate] >= @CurrentDate ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
				END
				ELSE IF @DateRange = 2 OR @DateRange = 1 SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
				ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
				
				IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
				IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
				IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
				ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
			
				IF @EditAll <> 1
				BEGIN
					SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
				END
				SET @MainFilter = @MainFilter + N''
		) AS HasPermissionsTrue
	)'';

SET @sqlcommand = @sqlcommand + N''
SELECT @CurrentArticlePosition = allContent.ArticlePosition FROM (''+ @MainFilter +'') AS allContent WHERE allContent.ArticleID = @CurrentArticleID;
'';

IF @LocaleCode IS NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N''
SELECT TOP (3) n.[ArticleID],n.[Title],n.[TitleLink],n.[DetailType],n.[DetailTypeData]
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN (''+ @MainFilter +'') AS apn ON n.ArticleID = apn.ArticleID
WHERE apn.ArticlePosition = @CurrentArticlePosition
	OR (apn.ArticlePosition = @CurrentArticlePosition - 1)
	OR (apn.ArticlePosition = @CurrentArticlePosition + 1)
ORDER BY apn.ArticlePosition ''
END
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N''	
	INSERT INTO @FinalArticles 
	SELECT TOP (3) n.[ArticleID],n.[Title],n.[TitleLink],n.[DetailType],n.[DetailTypeData],apn.ArticlePosition 
	FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
	INNER JOIN (''+ @MainFilter +'') AS apn ON n.ArticleID = apn.ArticleID
	WHERE apn.ArticlePosition = @CurrentArticlePosition
		OR (apn.ArticlePosition = @CurrentArticlePosition - 1)
		OR (apn.ArticlePosition = @CurrentArticlePosition + 1)
			
	;WITH LocalizedArticles ([ArticleID],[Title],[TitleLink],[DetailType],[DetailTypeData],[ArticlePosition]) AS(	
		SELECT fas.[ArticleID],ncl.[Title],ncl.[clTitleLink] AS TitleLink,fas.[DetailType],fas.[DetailTypeData],fas.[ArticlePosition]
		FROM @FinalArticles AS fas
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON fas.ArticleID = ncl.ArticleID AND LocaleCode = @LocaleCode
	)
	SELECT [ArticleID],[Title],[TitleLink],[DetailType],[DetailTypeData],ArticlePosition FROM @FinalArticles WHERE ArticleID NOT IN (SELECT ArticleID FROM LocalizedArticles)
	UNION ALL
	SELECT [ArticleID],[Title],[TitleLink],[DetailType],[DetailTypeData],ArticlePosition FROM LocalizedArticles
	ORDER BY ArticlePosition ''
END

SET @sqlcommand = @sqlcommand + N''
IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;
IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories; ''
		
exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@CurrentArticleID = @CurrentArticleID
	,@DateRange = @DateRange
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@LocaleCode = @LocaleCode
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@FilterByTagID = @FilterByTagID

' 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNnewsGetAllContentPreviousNext]
	@PortalID INT,
	@ModuleID INT,
	@UserID INT,
	@CurrentArticleID INT,
	@RecurringID INT = NULL,
	@OrderByColumnName VARCHAR(30),
	@OrderByDirection VARCHAR(4),
	@OrderByCustomFieldID INT = NULL,
	@DateRange BIT = 0,
	@DateRangeType TINYINT = 0,
	@StartDate DATETIME = NULL,
	@FromDate DATETIME = NULL,
	@ToDate DATETIME = NULL,
	@eFromDate DATETIME = NULL,
	@eToDate DATETIME = NULL,

	@OnlyOneCategory INT = NULL,
	@Featured BIT = 0,
	@ShowAllAuthors BIT = 1,
	@FilterByAuthor INT = 0,
	@FilterByGroupID INT = 0,
	@FilterByTags BIT = 0,
	@FilterByArticles BIT = 0,
	@FilterByDNNUserID INT = 0,
	@FilterByDNNGroupID INT = 0,
	@EditOnlyAsOwner BIT = 0,
	@UserCanApprove BIT = 0,
	@LocaleCode NVARCHAR(20) = NULL,
	@IsSocialInstance BIT = 0,	
	@FirstOrderBy NVARCHAR(20) = '''',
	@Perm_ViewAllCategores BIT = 0,
	@Perm_EditAllCategores BIT = 0,
	@AdminOrSuperUser BIT = 0,
	@CategoryFilterType TINYINT = 1,
	@PermissionSettingsSource BIT = 1,
	@FillterSettingsSource BIT = 1,
	@OuterModuleID INT = 0,
	@HideUnlocalizedItems BIT = 0,
	@NewsFilterCategories NVARCHAR(1000) = '''',
	@NewsFilterAuthors NVARCHAR(1000) = '''',
	@NewsFilterGroups NVARCHAR(1000) = '''',
	@ListArchive BIT = 0,
	@FilterByTagID INT = NULL,
	@RestrictionByDateRange TINYINT = NULL,
	@AdminFuturePostsVisible BIT = 0
AS
SET NOCOUNT ON;
DECLARE @EditAll TINYINT;

IF @AdminOrSuperUser = 1 OR (@EditOnlyAsOwner = 0 AND @Perm_EditAllCategores = 1) SET @EditAll = 1;
ELSE IF EXISTS(SELECT * FROM {databaseOwner}[{objectQualifier}EDS_EditPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_EditAllCategores,@PermissionSettingsSource,GETUTCDATE())) SET @EditAll = 2;
ELSE SET @EditAll = 3;

DECLARE @sqlcommand NVARCHAR(max);
DECLARE @paramList NVARCHAR(2000);
SET @paramList = N''
	 @PortalID INT
	,@ModuleID INT
	,@UserID INT
	,@OrderByCustomFieldID INT
	,@CurrentArticleID INT
	,@RecurringID INT
	,@DateRange BIT
	,@DateRangeType TINYINT
	,@StartDate DATETIME
	,@FromDate DATETIME
	,@ToDate DATETIME
	,@eFromDate DATETIME
	,@eToDate DATETIME
	,@OnlyOneCategory INT
	,@Featured BIT
	,@ShowAllAuthors BIT
	,@FilterByAuthor INT
	,@FilterByGroupID INT
	,@FilterByArticles BIT
	,@FilterByDNNUserID INT
	,@FilterByDNNGroupID INT
	,@EditOnlyAsOwner BIT
	,@UserCanApprove BIT
	,@LocaleCode NVARCHAR(20)
	,@IsSocialInstance BIT
	,@FirstOrderBy NVARCHAR(20)
	,@Perm_ViewAllCategores BIT
	,@Perm_EditAllCategores BIT
	,@AdminOrSuperUser BIT
	,@CategoryFilterType TINYINT
	,@PermissionSettingsSource BIT
	,@FillterSettingsSource BIT
	,@OuterModuleID INT
	,@HideUnlocalizedItems BIT
	,@NewsFilterCategories NVARCHAR(1000)
	,@NewsFilterAuthors NVARCHAR(1000)
	,@NewsFilterGroups NVARCHAR(1000)
	,@ListArchive BIT
	,@FilterByTagID INT
	,@RestrictionByDateRange TINYINT''

SET @sqlcommand = N''
SET NOCOUNT ON;
SET DATEFIRST 1;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE(); ''

IF @NewsFilterCategories = ''''
BEGIN
	IF @OuterModuleID = 0 AND @FilterByArticles = 1
	SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterArticlesTable TABLE (ArticleID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- -- portal settings
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByArticles] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterArticlesTable SELECT ArticleID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByArticles] WHERE FilterModuleID = @ModuleID; ''

	-- temp TABLE contains list of TagIDs to filter -> @FilterTagsTable
	IF @FilterByTagID IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		INSERT INTO @FilterTagsTable SELECT @FilterByTagID ''
		SET @FilterByTags = 1
	END
	ELSE IF @OuterModuleID = 0 AND @FilterByTags = 1
		SET @sqlcommand = @sqlcommand + N'' 
		DECLARE @FilterTagsTable TABLE (TagID INT NOT NULL PRIMARY KEY);
		IF @FillterSettingsSource = 1 -- portal settings
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalFilterByTagID] WHERE FilterPortalID = @PortalID;
		ELSE
			INSERT INTO @FilterTagsTable SELECT TagID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsFilterByTagID] WHERE FilterModuleID = @ModuleID; ''
END

SET @sqlcommand = @sqlcommand + N''

IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
	
CREATE TABLE #UserInRoles (RoleID INT NOT NULL PRIMARY KEY);
IF @UserID <> -1
INSERT INTO #UserInRoles SELECT DISTINCT r.[RoleID] FROM {databaseOwner}[{objectQualifier}Roles] AS r INNER JOIN {databaseOwner}[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND ( ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate ) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);

IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;

CREATE TABLE #UserViewCategories (CategoryID INT NOT NULL PRIMARY KEY);
INSERT INTO #UserViewCategories SELECT CategoryID FROM {databaseOwner}[{objectQualifier}EDS_ViewPermissions] (@PortalID,@ModuleID,@UserID,@AdminOrSuperUser,@Perm_ViewAllCategores,@PermissionSettingsSource,@CurrentDate) ''

SET @sqlcommand = @sqlcommand + N'' 

IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;

CREATE TABLE #UserViewCategoriesWithFilter (CategoryID INT NOT NULL PRIMARY KEY);

IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories;

CREATE TABLE #FiltredByCategories (CategoryID INT NOT NULL PRIMARY KEY); ''

IF @NewsFilterCategories <> ''''
BEGIN
	SET @sqlcommand = @sqlcommand + N''
	INSERT INTO #FiltredByCategories SELECT fc.KeyID FROM {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterCategories) AS fc
	INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID IN (SELECT CAtegoryID FROM #FiltredByCategories); ''
END
ELSE
BEGIN
	IF @OnlyOneCategory IS NOT NULL
	BEGIN
		SET @sqlcommand = @sqlcommand + N''
		INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories WHERE CategoryID = @OnlyOneCategory;
		INSERT INTO #FiltredByCategories SELECT @OnlyOneCategory; ''
	END
	ELSE IF @OuterModuleID <> 0
	BEGIN
		IF @CategoryFilterType = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			INSERT INTO #UserViewCategoriesWithFilter 
			SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @OuterModuleID
				
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID; ''
		END
		ELSE IF @CategoryFilterType = 2
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			;WITH hierarchy AS(
				SELECT [CategoryID], [ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
				WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @OuterModuleID)) AND PortalID = @PortalID
				UNION ALL
				SELECT c.[CategoryID], c.[ParentCategory]
				FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
				)
			INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
			INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
		END
	END
	ELSE
	BEGIN
		IF @CategoryFilterType = 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			INSERT INTO #UserViewCategoriesWithFilter SELECT [CategoryID] FROM #UserViewCategories;
			INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID; ''
		END
		ELSE IF @CategoryFilterType = 1
		BEGIN
			IF @FillterSettingsSource = 1
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] AS pci ON pci.CategoryID = cl.CategoryID AND pci.PortalID = @PortalID
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID; ''
			END
			ELSE
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				INSERT INTO #UserViewCategoriesWithFilter 
				SELECT cl.[CategoryID] FROM #UserViewCategories AS cl
				INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] AS mci ON mci.CategoryID = cl.CategoryID AND mci.ModuleID = @ModuleID
				
				INSERT INTO #FiltredByCategories SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID; ''
			END
		END
		ELSE IF @CategoryFilterType = 2
		BEGIN
			IF @FillterSettingsSource = 1
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalCategoryItems] WHERE PortalID = @PortalID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
			ELSE
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				;WITH hierarchy AS(
					SELECT [CategoryID], [ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS cl
					WHERE (cl.ParentCategory IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID) OR cl.CategoryID IN (SELECT [CategoryID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleCategoryItems] WHERE ModuleID = @ModuleID)) AND PortalID = @PortalID
					UNION ALL
					SELECT c.[CategoryID], c.[ParentCategory]
					FROM {databaseOwner}[{objectQualifier}EasyDNNNewsCategoryList] AS c INNER JOIN hierarchy AS p ON c.ParentCategory = p.CategoryID WHERE c.PortalID = @PortalID
					)
				INSERT INTO #FiltredByCategories SELECT DISTINCT CategoryID FROM hierarchy;	
				INSERT INTO #UserViewCategoriesWithFilter SELECT CategoryID FROM #UserViewCategories WHERE CategoryID IN (SELECT CategoryID FROM #FiltredByCategories); ''
			END
		END
	END
END

DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

IF @NewsFilterAuthors = '''' AND @NewsFilterGroups = ''''
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
			IF @FilterByAuthor <> 0
				SET @FilterAuthorOrAuthors = 1;
	END
	ELSE
	BEGIN
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE
		BEGIN
		IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0
			SET @FilterAuthorOrAuthors = 1;	
		ELSE IF @FilterByAuthor <> 0
			SET @FilterAuthorOrAuthors = 1;
		ELSE IF @FilterByGroupID <> 0
			SET @FilterAuthorOrAuthors = 1;
		END
	END
END
ELSE
	SET @FilterAuthorOrAuthors = 1;

SET @sqlcommand = @sqlcommand + N''
DECLARE @FilterBySocialGroup BIT;
SET @FilterBySocialGroup = 0;
DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;

DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY); ''

IF @NewsFilterAuthors = '''' AND @NewsFilterGroups = ''''
BEGIN
	IF @IsSocialInstance = 1
	BEGIN
		IF @FilterByDNNGroupID <> 0
		BEGIN
			SET @sqlcommand = @sqlcommand + N'' 
			SET @FilterBySocialGroup = 1;
			IF @FilterByAuthor <> 0
			BEGIN
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor;
			END ''
		END
	END
	ELSE
	BEGIN
		IF @OuterModuleID <> 0 AND @ShowAllAuthors = 0 -- filter iz other modula
		BEGIN
			SET @sqlcommand = @sqlcommand + N''
			SET @FilterAuthorOrAuthors = 1;
			INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @OuterModuleID
				UNION 
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
				WHERE mgi.ModuleID = @OuterModuleID ''
		END
		ELSE
		BEGIN
			IF @FilterByAuthor = 0 AND @FilterByGroupID = 0 AND @ShowAllAuthors = 0 -- filter glavnog newsa
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				IF @FillterSettingsSource = 1 -- by portal
				BEGIN
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsPortalAuthorsItems] AS pai WHERE pai.PortalID = @PortalID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsPortalGroupItems] AS pgi ON pgi.GroupID = agi.GroupID
						WHERE pgi.PortalID = @PortalID
				END
				ELSE -- by modul
				BEGIN
					INSERT INTO @TempAuthorsIDList
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsModuleAuthorsItems] AS mai WHERE mai.ModuleID = @ModuleID
					UNION 
					SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsModuleGroupItems] AS mgi ON mgi.GroupID = agi.GroupID
						WHERE mgi.ModuleID = @ModuleID
				END ''
			END
			ELSE IF @FilterByAuthor <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] WHERE [AuthorProfileID] = @FilterByAuthor; ''
			END
			ELSE IF @FilterByGroupID <> 0
			BEGIN
				SET @sqlcommand = @sqlcommand + N'' 
				SET @FilterAuthorOrAuthors = 1;
				INSERT INTO @TempAuthorsIDList
				SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
					WHERE agi.GroupID = @FilterByGroupID ''
			END
		END
	END
END
ELSE
BEGIN
	SET @FilterAuthorOrAuthors = 1;
	IF @NewsFilterAuthors <> '''' AND @NewsFilterGroups <> ''''
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID WHERE PortalID = @PortalID
		UNION
		SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID ''
	ELSE IF @NewsFilterAuthors <> ''''
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList SELECT [UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterAuthors) AS af ON ap.AuthorProfileID = af.KeyID WHERE PortalID = @PortalID ''
	ELSE IF @NewsFilterGroups <> ''''
		SET @sqlcommand = @sqlcommand + N'' 
		INSERT INTO @TempAuthorsIDList
		SELECT ap.[UserID] FROM {databaseOwner}[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
			INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID INNER JOIN {databaseOwner}[{objectQualifier}EDS_StringListToTable](@NewsFilterGroups) AS a ON a.KeyID = agi.GroupID	
		WHERE ap.PortalID = @PortalID ''
END

SET @sqlcommand = @sqlcommand + N'' DECLARE @CurrentArticlePosition INT '';

IF @LocaleCode IS NOT NULL
SET @sqlcommand = @sqlcommand + N''
	DECLARE @FinalArticles TABLE
	(
		 [ArticleID] INT
		,[RecurringID] INT NULL
		,[Title] NVARCHAR (800)
		,[TitleLink] NVARCHAR (800)
		,[DetailType] VARCHAR (10) NULL
		,[DetailTypeData] NVARCHAR (800) NULL
		,[ArticlePosition] INT
	) ''

DECLARE @CleanOrderColumnWithDirection VARCHAR(35);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	DECLARE @ControlTypeID INT;
	SELECT @ControlTypeID = [ControlTypeID] FROM {databaseOwner}[{objectQualifier}EasyDNNfields] WHERE CustomFieldID = @OrderByCustomFieldID AND IsOrderable = 1;
	IF @ControlTypeID IS NOT NULL
	BEGIN
		SELECT @OrderByColumnName =
			CASE @ControlTypeID
				WHEN 1 THEN N''Text''
				WHEN 3 THEN N''Int''
				WHEN 4 THEN N''Decimal''
				WHEN 5 THEN N''Decimal''
				ELSE NULL
			END
		IF @OrderByColumnName IS NULL
		BEGIN
			SET @OrderByCustomFieldID = NULL;
			SET @OrderByColumnName = N''PublishDate'';
		END
	END
	ELSE
	BEGIN
		SET @OrderByCustomFieldID = NULL;
		SET @OrderByColumnName = N''PublishDate'';
	END
END

SET @CleanOrderColumnWithDirection = N''['' + @OrderByColumnName + N''] '' + @OrderByDirection;

DECLARE @MainFilter NVARCHAR(MAX);

IF @OrderByCustomFieldID IS NOT NULL
BEGIN
	SET @MainFilter = N''
	;WITH AllContent AS(
	SELECT ArticleID,RecurringID, ROW_NUMBER() OVER (ORDER BY ''
	IF @FirstOrderBy = ''Featured DESC''
		SET @MainFilter = @MainFilter + N''Featured DESC, ''
		
	IF @OrderByDirection = ''ASC''
		SET @MainFilter = @MainFilter + N''(CASE WHEN '' + @OrderByColumnName + '' IS NULL THEN 1 ELSE 0 END),''
	
	SET @MainFilter = @MainFilter + @CleanOrderColumnWithDirection + N'', ArticleID) AS ArticlePosition ''
END
ELSE
BEGIN
	SET @MainFilter = N''
	;WITH AllContent AS(
	SELECT ArticleID,RecurringID, ROW_NUMBER() OVER (ORDER BY ''
	IF @FirstOrderBy = ''Featured DESC''
		SET @MainFilter = @MainFilter + N''Featured DESC, ''
	SET @MainFilter = @MainFilter + @OrderByColumnName + N'' '' + @OrderByDirection + N'', ArticleID) AS ArticlePosition ''
END

	SET @MainFilter = @MainFilter + N''
	FROM (
		SELECT n.ArticleID,
			CASE WHEN n.EventArticle = 0 THEN n.PublishDate ELSE CASE WHEN ned.Recurring = 1 THEN nerd.StartDateTime ELSE ned.StartDate END END AS StartDate,
			CASE WHEN n.EventArticle = 1 AND ned.Recurring = 1 THEN nerd.RecurringID ELSE NULL END AS RecurringID,
			n.Title,n.NumberOfViews,n.RatingValue,n.DateAdded,n.PublishDate,n.ExpireDate,n.LastModified,n.NumberOfComments,n.Featured ''
		
		IF @OrderByCustomFieldID IS NOT NULL
			SET @MainFilter = @MainFilter + N'',fv.['' + @OrderByColumnName + '']''
		
		SET @MainFilter = @MainFilter + N''	
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ned ON n.ArticleID = ned.ArticleID
		LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerd ON ned.ArticleID = nerd.ArticleID AND ned.ArticleID IS NOT NULL AND ned.Recurring = 1 AND ''
		IF @DateRangeType = 2
			SET @MainFilter = @MainFilter + N''
			((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
				 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ned.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
		ELSE IF @DateRangeType = 1
			BEGIN
				IF @ListArchive = 0
					SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
				ELSE
					SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
			END
		ELSE IF @DateRangeType = 0
			SET @MainFilter = @MainFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ned.UpcomingOccurrences IS NULL THEN 1 ELSE ned.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ned.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
		ELSE
			SET @MainFilter = @MainFilter + N'' 1 = 0''
		
		IF @OrderByCustomFieldID IS NOT NULL
		BEGIN
			SET @MainFilter = @MainFilter + N''
			LEFT OUTER JOIN {databaseOwner}[{objectQualifier}EasyDNNfieldsValues] AS fv ON fv.ArticleID = n.ArticleID AND fv.CustomFieldID = @OrderByCustomFieldID''
		END
		
		SET @MainFilter = @MainFilter + N''
		WHERE n.ArticleID IN (
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter) ''

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
				
				SET @MainFilter = @MainFilter + N''
				WHERE na.HasPermissions = 0
					AND na.EventArticle = 0
					AND na.PortalID=@PortalID ''
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
						ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
					IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
					ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
	
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					END
					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				SET @MainFilter = @MainFilter + N''
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 0 ''
				
					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
				
				SET @MainFilter = @MainFilter + N''
				WHERE na.HasPermissions = 0
					AND ne.Recurring = 0
					AND na.EventArticle = 1
					
					AND na.PortalID=@PortalID ''
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
						ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
					IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
					ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
					
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
						ELSE
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
					SET @MainFilter = @MainFilter + N''
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #UserViewCategoriesWithFilter)	
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne ON ne.ArticleID = na.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
						IF @DateRangeType = 2
							SET @MainFilter = @MainFilter + N''
							((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
								 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
						ELSE IF @DateRangeType = 1
							BEGIN
								IF @ListArchive = 0
									SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
								ELSE
									SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
							END
						ELSE IF @DateRangeType = 0
							SET @MainFilter = @MainFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
						ELSE SET @MainFilter = @MainFilter + N'' 1 = 0 ''
						
					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
					
				SET @MainFilter = @MainFilter + N''
				WHERE na.HasPermissions = 0
					AND na.EventArticle = 1
					AND ne.Recurring = 1
					
					AND na.PortalID=@PortalID ''
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
						ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
					IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
					ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
					
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID = @UserID) ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					END
				SET @MainFilter = @MainFilter + N''
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
				
				SET @MainFilter = @MainFilter + N''
				WHERE na.HasPermissions = 1
					AND na.EventArticle = 0
					
					AND na.PortalID=@PortalID ''
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
						ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
					IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
					ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''

					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
						IF @UserID = -1 SET @MainFilter = @MainFilter + N'' AND aup.UserID IS NULL ''
						ELSE SET @MainFilter = @MainFilter + N'' AND aup.UserID = @UserID ''
					END
					IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				SET @MainFilter = @MainFilter + N''
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
					
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
								
					SET @MainFilter = @MainFilter + N''					 	 
				WHERE na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 0
					
					AND na.PortalID=@PortalID ''
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
						ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
					IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
					ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
					
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
						IF @UserID = -1 SET @MainFilter = @MainFilter + N'' AND aup.UserID IS NULL ''
						ELSE SET @MainFilter = @MainFilter + N'' AND aup.UserID = @UserID ''
					END
					IF @DateRangeType = 1
					BEGIN
						IF @ListArchive = 0
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
						ELSE
							SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
					END
					ELSE IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
					SET @MainFilter = @MainFilter + N''
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
					IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N''
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
							ELSE
								SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
						END
					ELSE IF @DateRangeType = 0
						SET @MainFilter = @MainFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
					ELSE SET @MainFilter = @MainFilter + N'' 1 = 0 ''
					
					SET @MainFilter = @MainFilter + N''
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
								
					SET @MainFilter = @MainFilter + N''
				WHERE na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 1
					
					AND na.PortalID=@PortalID ''
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
						ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
					IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
					ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
					
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND aup.Show = 1 ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
						IF @UserID = -1 SET @MainFilter = @MainFilter + N'' AND aup.UserID IS NULL ''
						ELSE SET @MainFilter = @MainFilter + N'' AND aup.UserID = @UserID ''
					END
					SET @MainFilter = @MainFilter + N''
			) AS WithNoRolePermissions
			UNION
			SELECT [ArticleID] FROM (
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
				
				SET @MainFilter = @MainFilter + N''
					 
				WHERE na.HasPermissions = 1
					AND na.EventArticle = 0
					
					AND na.PortalID=@PortalID ''
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
						ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
					IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
					ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
					
				IF @EditAll <> 1
				BEGIN
					SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
					IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
				END
				IF @DateRange <> 0 AND @RestrictionByDateRange IS NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN @FromDate AND @ToDate ''
				SET @MainFilter = @MainFilter + N''
				UNION ALL
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 0
									
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
				
				SET @MainFilter = @MainFilter + N''
				WHERE na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 0
					
					AND na.PortalID=@PortalID ''
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
						ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
					IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
					ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
					
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					END
					IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate ''
							ELSE
								SET @MainFilter = @MainFilter + N'' AND ne.StartDate <= @ToDate AND ne.EndDate >= @FromDate AND ne.EndDate < @CurrentDate ''
						END
						ELSE IF @DateRangeType = 2
							SET @MainFilter = @MainFilter + N'' AND (ne.StartDate >= @StartDate OR (ne.StartDate < @StartDate AND ne.EndDate >= @StartDate)) ''
						SET @MainFilter = @MainFilter + N''
				UNION All
				SELECT DISTINCT na.[ArticleID] FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS na
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsData] AS ne on na.ArticleID = ne.ArticleID AND ne.Recurring = 1
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] as nerd ON ne.ArticleID = nerd.ArticleID AND ne.Recurring = 1 AND ''
					IF @DateRangeType = 2
						SET @MainFilter = @MainFilter + N''
						((nerd.StartDateTime <= @CurrentDate AND ((nerd.StartDateTime >= @StartDate) OR (nerd.StartDateTime < @StartDate AND nerd.EndDateTime >= @StartDate)))
							 OR (nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) erd.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = ne.ArticleID AND erd.StartDateTime > @CurrentDate ORDER BY erd.StartDateTime))) ''
					ELSE IF @DateRangeType = 1
						BEGIN
							IF @ListArchive = 0
								SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate ''
							ELSE
								SET @MainFilter = @MainFilter + N'' nerd.StartDateTime <= @CurrentDate AND nerd.StartDateTime <= @ToDate AND nerd.EndDateTime >= @FromDate AND nerd.EndDateTime < @CurrentDate ''
						END
					ELSE IF @DateRangeType = 0
						SET @MainFilter = @MainFilter + N'' (nerd.StartDateTime <= @CurrentDate OR nerd.RecurringID IN (SELECT TOP(CASE WHEN ne.UpcomingOccurrences IS NULL THEN 1 ELSE ne.UpcomingOccurrences END) nerdInner.RecurringID FROM {databaseOwner}[{objectQualifier}EasyDNNNewsEventsRecurringData] AS nerdInner WHERE nerdInner.ArticleID = ne.ArticleID AND nerdInner.StartDateTime > @CurrentDate ORDER BY nerdInner.StartDateTime)) ''
					ELSE SET @MainFilter = @MainFilter + N'' 1 = 0 ''
					
					SET @MainFilter = @MainFilter + N''
					INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM #FiltredByCategories) ''

					IF @HideUnlocalizedItems = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON ncl.ArticleID = na.ArticleID AND ncl.LocaleCode = @LocaleCode ''
					IF @FilterByDNNGroupID <> 0 
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialGroupItems] AS sgi ON sgi.ArticleID = na.ArticleID AND sgi.RoleID = @FilterByDNNGroupID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''
					ELSE IF @FilterByDNNUserID <> 0
						SET @MainFilter = @MainFilter + N''
						INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsSocialSecurity] AS nss ON nss.ArticleID = na.ArticleID
						INNER JOIN {databaseOwner}[{objectQualifier}Journal_User_Permissions](@PortalId,@UserID, @FilterByDNNGroupID) AS t ON t.seckey = nss.SecurityKey ''

					IF @FilterByTags = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsTagsItems] AS ti ON na.ArticleID = ti.ArticleID INNER JOIN @FilterTagsTable AS fbt ON ti.TagID = fbt.TagID ''
					IF @FilterByArticles = 1 SET @MainFilter = @MainFilter + N'' INNER JOIN @FilterArticlesTable AS fba ON fba.ArticleID = na.ArticleID ''
					
					SET @MainFilter = @MainFilter + N''
				WHERE na.HasPermissions = 1
					AND na.EventArticle = 1
					AND ne.Recurring = 1
					
					AND na.PortalID=@PortalID ''
					IF @AdminFuturePostsVisible = 1
					BEGIN
						IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate >= DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND na.[ExpireDate] >= @CurrentDate ''
						ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate <= na.[ExpireDate] ''		
					END
					ELSE IF @RestrictionByDateRange IS NOT NULL SET @MainFilter = @MainFilter + N'' AND na.PublishDate BETWEEN DATEADD(day,-@RestrictionByDateRange,@CurrentDate) AND @CurrentDate AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					ELSE SET @MainFilter = @MainFilter + N'' AND @CurrentDate BETWEEN na.PublishDate AND na.[ExpireDate] ''
					
					IF @LocaleCode IS NULL SET @MainFilter = @MainFilter + N'' AND na.HideDefaultLocale = 0 ''
					IF @Featured = 1 SET @MainFilter = @MainFilter + N'' AND na.Featured = 1 ''
					IF @FilterByDNNUserID <> 0 SET @MainFilter = @MainFilter + N'' AND na.UserID = @FilterByDNNUserID ''
					ELSE IF @FilterAuthorOrAuthors = 1 SET @MainFilter = @MainFilter + N'' AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList) ''
					
					IF @EditAll <> 1
					BEGIN
						SET @MainFilter = @MainFilter + N'' AND (na.Active = 1 OR na.UserID=@UserID) AND arp.Show = 1 AND arp.RoleID IN (SELECT [RoleID] FROM #UserInRoles) ''
						IF @UserCanApprove = 0 SET @MainFilter = @MainFilter + N'' AND na.Approved = 1 ''
					END
					SET @MainFilter = @MainFilter + N''
			) AS ByRolePermissions
		)
	) AS AllArticles
) '';

DECLARE @MainCondition VARCHAR(500);
IF @RecurringID IS NULL
	SET @sqlcommand = @sqlcommand + @MainFilter +N'' SELECT @CurrentArticlePosition = ArticlePosition FROM AllContent WHERE ArticleID = @CurrentArticleID; ''
ELSE
	SET @sqlcommand = @sqlcommand + @MainFilter +N'' SELECT @CurrentArticlePosition = ArticlePosition FROM AllContent WHERE ArticleID = @CurrentArticleID AND RecurringID = @RecurringID; ''

SET @sqlcommand = @sqlcommand + '' '' + @MainFilter;

IF @LocaleCode IS NULL
BEGIN
	SET @sqlcommand = @sqlcommand + N''
SELECT n.[ArticleID],apn.RecurringID,n.[Title],n.[TitleLink],n.[DetailType],n.[DetailTypeData], apn.ArticlePosition
FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
INNER JOIN AllContent AS apn ON n.ArticleID = apn.ArticleID
WHERE apn.ArticlePosition = @CurrentArticlePosition 
	OR (apn.ArticlePosition = @CurrentArticlePosition - 1)
	OR (apn.ArticlePosition = @CurrentArticlePosition + 1)
ORDER BY apn.ArticlePosition ''
END
ELSE
BEGIN
	SET @sqlcommand = @sqlcommand + N''	
	INSERT INTO @FinalArticles 
	SELECT n.[ArticleID],apn.RecurringID,n.[Title],n.[TitleLink],n.[DetailType],n.[DetailTypeData],apn.ArticlePosition 
		FROM {databaseOwner}[{objectQualifier}EasyDNNNews] AS n
		INNER JOIN AllContent AS apn ON n.ArticleID = apn.ArticleID
		WHERE apn.ArticlePosition = @CurrentArticlePosition
			OR (apn.ArticlePosition = @CurrentArticlePosition - 1)
			OR (apn.ArticlePosition = @CurrentArticlePosition + 1)
			
	;WITH LocalizedArticles ([ArticleID],[RecurringID],[Title],[TitleLink],[DetailType],[DetailTypeData],[ArticlePosition]) AS(	
		SELECT fas.[ArticleID],fas.[RecurringID],ncl.[Title],ncl.[clTitleLink] AS TitleLink,fas.[DetailType],fas.[DetailTypeData],fas.[ArticlePosition]
		FROM @FinalArticles AS fas
		INNER JOIN {databaseOwner}[{objectQualifier}EasyDNNNewsContentLocalization] AS ncl ON fas.ArticleID = ncl.ArticleID AND LocaleCode = @LocaleCode
	)
	SELECT [ArticleID],[RecurringID],[Title],[TitleLink],[DetailType],[DetailTypeData],ArticlePosition FROM @FinalArticles WHERE ArticleID NOT IN (SELECT ArticleID FROM LocalizedArticles)
	UNION ALL
	SELECT [ArticleID],[RecurringID],[Title],[TitleLink],[DetailType],[DetailTypeData],ArticlePosition FROM LocalizedArticles
	ORDER BY ArticlePosition ''
END

SET @sqlcommand = @sqlcommand + N''
IF OBJECT_ID(''''tempdb..#UserInRoles'''') IS NOT NULL
	DROP TABLE #UserInRoles;
IF OBJECT_ID(''''tempdb..#UserViewCategories'''') IS NOT NULL
	DROP TABLE #UserViewCategories;
IF OBJECT_ID(''''tempdb..#UserViewCategoriesWithFilter'''') IS NOT NULL
	DROP TABLE #UserViewCategoriesWithFilter;
IF OBJECT_ID(''''tempdb..#FiltredByCategories'''') IS NOT NULL
	DROP TABLE #FiltredByCategories; ''

exec sp_executesql @statement = @sqlcommand
	,@paramList = @paramList
	,@PortalID = @PortalID
	,@ModuleID = @ModuleID
	,@UserID = @UserID
	,@OrderByCustomFieldID = @OrderByCustomFieldID
	,@CurrentArticleID = @CurrentArticleID
	,@RecurringID = @RecurringID
	,@DateRange = @DateRange
	,@DateRangeType = @DateRangeType
	,@StartDate = @StartDate
	,@FromDate = @FromDate
	,@ToDate = @ToDate
	,@eFromDate = @eFromDate
	,@eToDate = @eToDate
	,@OnlyOneCategory = @OnlyOneCategory
	,@Featured = @Featured
	,@ShowAllAuthors = @ShowAllAuthors
	,@FilterByAuthor = @FilterByAuthor
	,@FilterByGroupID = @FilterByGroupID
	,@FilterByArticles = @FilterByArticles
	,@FilterByDNNUserID = @FilterByDNNUserID
	,@FilterByDNNGroupID = @FilterByDNNGroupID
	,@EditOnlyAsOwner = @EditOnlyAsOwner
	,@UserCanApprove = @UserCanApprove
	,@LocaleCode = @LocaleCode
	,@IsSocialInstance = @IsSocialInstance
	,@FirstOrderBy = @FirstOrderBy
	,@Perm_ViewAllCategores = @Perm_ViewAllCategores
	,@Perm_EditAllCategores = @Perm_EditAllCategores
	,@AdminOrSuperUser = @AdminOrSuperUser
	,@CategoryFilterType = @CategoryFilterType
	,@PermissionSettingsSource = @PermissionSettingsSource
	,@FillterSettingsSource = @FillterSettingsSource
	,@OuterModuleID = @OuterModuleID
	,@HideUnlocalizedItems = @HideUnlocalizedItems
	,@NewsFilterCategories = @NewsFilterCategories
	,@NewsFilterAuthors = @NewsFilterAuthors
	,@NewsFilterGroups = @NewsFilterGroups
	,@ListArchive = @ListArchive
	,@FilterByTagID = @FilterByTagID
	,@RestrictionByDateRange = @RestrictionByDateRange' 
END
GO

