IF NOT EXISTS (SELECT UpdateVersion FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUpdate] WHERE UpdateVersion = '10.07.00')
BEGIN
	INSERT {databaseOwner}[{objectQualifier}EasyDNNNewsUpdate]([UpdateVersion],[Finished],[InstallType]) VALUES(N'10.07.00',0, N'DNN')
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'EnableWebpImages')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD EnableWebpImages BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_EnableWebpImages DEFAULT(0) NOT NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'EnableWebpImages')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD EnableWebpImages BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_EnableWebpImages DEFAULT(0) NOT NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'WebpImageQuality')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD WebpImageQuality INT CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_WebpImageQuality DEFAULT(95) NOT NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'WebpImageQuality')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD WebpImageQuality INT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_WebpImageQuality DEFAULT(95) NOT NULL
END
GO

IF EXISTS (SELECT DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = '{objectQualifier}EasyDNNNewsMenuSettings' AND COLUMN_NAME = 'HTMLTemplate' AND DATA_TYPE = 'nvarchar' AND CHARACTER_MAXIMUM_LENGTH = 50)
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsMenuSettings] ALTER COLUMN [HTMLTemplate] NVARCHAR(250) NOT NULL;
END
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryWebpImageSizes]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}EasyGalleryWebpImageSizes](
	[PictureID] [int] NOT NULL,
	[Width] [int] NOT NULL,
	[Height] [int] NOT NULL,
	[ResizeMethod] [int] NOT NULL,
 CONSTRAINT [PK_{objectQualifier}EasyGalleryWebpImageSizes] PRIMARY KEY CLUSTERED 
(
	[PictureID] ASC,
	[Width] ASC,
	[Height] ASC,
	[ResizeMethod] ASC
)WITH (STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF)
)
END
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyGalleryWebpImageSizes_EasyGalleryPictures]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryWebpImageSizes]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryWebpImageSizes]  WITH CHECK ADD  CONSTRAINT [FK_{objectQualifier}EasyGalleryWebpImageSizes_EasyGalleryPictures] FOREIGN KEY([PictureID])
REFERENCES {databaseOwner}[{objectQualifier}EasyGalleryPictures] ([PictureID])
ON DELETE CASCADE
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'{databaseOwner}[FK_{objectQualifier}EasyGalleryWebpImageSizes_EasyGalleryPictures]') AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyGalleryWebpImageSizes]'))
ALTER TABLE {databaseOwner}[{objectQualifier}EasyGalleryWebpImageSizes] CHECK CONSTRAINT [FK_{objectQualifier}EasyGalleryWebpImageSizes_EasyGalleryPictures]
GO