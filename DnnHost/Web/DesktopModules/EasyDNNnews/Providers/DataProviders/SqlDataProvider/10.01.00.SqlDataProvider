IF NOT EXISTS (SELECT UpdateVersion FROM {databaseOwner}[{objectQualifier}EasyDNNNewsUpdate] WHERE UpdateVersion = '10.01.00')
BEGIN
	INSERT {databaseOwner}[{objectQualifier}EasyDNNNewsUpdate]([UpdateVersion],[Finished],[InstallType]) VALUES(N'10.01.00',0, N'DNN')
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsArchive' and column_name = 'CustomFieldsRevisions')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsArchive] ADD CustomFieldsRevisions NVARCHAR(MAX) CONSTRAINT DF_{objectQualifier}EasyDNNNewsArchive_CustomFieldsRevisions NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsArchive' and column_name = 'CFGroupeID')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsArchive] ADD CFGroupeID INT CONSTRAINT DF_{objectQualifier}EasyDNNNewsArchive_CFGroupeID NULL
	EXECUTE sp_executesql N'UPDATE {databaseOwner}[{objectQualifier}EasyDNNNewsArchive] SET CFGroupeID = -1 WHERE IsRevision=1';
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsModuleSettings' and column_name = 'ContactFormAddArticleTitleToSubject')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsModuleSettings] ADD ContactFormAddArticleTitleToSubject BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsModuleSettings_ContactFormAddArticleTitleToSubject DEFAULT(1) NOT NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'ContactFormAddArticleTitleToSubject')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD ContactFormAddArticleTitleToSubject BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_ContactFormAddArticleTitleToSubject DEFAULT(1) NOT NULL
END
GO

IF NOT EXISTS (select * from INFORMATION_SCHEMA.columns where table_name = '{objectQualifier}EasyDNNNewsPortalSettings' and column_name = 'IncludePageNumberInPageTitle')
BEGIN
	ALTER TABLE {databaseOwner}[{objectQualifier}EasyDNNNewsPortalSettings] ADD IncludePageNumberInPageTitle BIT CONSTRAINT DF_{objectQualifier}EasyDNNNewsPortalSettings_IncludePageNumberInPageTitle DEFAULT(0) NOT NULL
END
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForArticleEditor]') AND type in (N'P', N'PC'))
DROP PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForArticleEditor]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForArticleEditor]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForArticleEditor] AS' 
END
GO
ALTER PROCEDURE {databaseOwner}[{objectQualifier}EasyDNNNewsGetItemsForArticleEditor]
	@PortalID INT, -- current Portal
	@ModuleID INT, -- current Module, portal sharing isto sadrzi dobre kategorije, auto add i setingsi su snimljeni kod tog modula
	@UserID INT,
	@ItemsFrom INT = 1,
	@ItemsTo INT = 5,
	@inCategories NVARCHAR(2000) = NULL,
	@FilterByAuthor INT = 0, -- ako se selektiran jedan autor
	@FilterByGroupID INT = 0, -- ako je selektirana grupa
	@EditOnlyAsOwner BIT = 0, -- news settings
	@UserCanApprove BIT = 0, -- news settings
	@Perm_ViewAllCategores BIT = 0, -- permission settings View all categories
	@Perm_EditAllCategores BIT = 0, -- permission settings Edit all categories
	@AdminOrSuperUser BIT = 0,
	@PermissionSettingsSource BIT = 1, -- 1 portal, 0 module
	@OrderBy NVARCHAR(20) = 'PublishDate DESC',
	@OrderBy2 NVARCHAR(20) = '',
	
	@Featured TINYINT = 0,
	@Published TINYINT = 0,
	@Approved TINYINT = 0,
	@ArticleType TINYINT = 0,
	@PermissionsByArticle TINYINT = 0,
	@SimpleSearchFindCondition NVARCHAR(2048) = NULL,
	@StartDate DATETIME = NULL,
	@FilterByCustomFieldTemplate INT = NULL
AS
SET NOCOUNT ON;
DECLARE @CategoryFilter TABLE (Id INT NOT NULL);

IF @inCategories IS NOT NULL
	INSERT INTO @CategoryFilter
	SELECT fp.KeyID FROM dbo.[{objectQualifier}EDS_StringListToTable](@inCategories) AS fp

DECLARE @EditPermission TINYINT;
SET @EditPermission = 0;
DECLARE @CurrentDate DATETIME;
SET @CurrentDate = GETUTCDATE();
DECLARE @UserInRoles TABLE (RoleID INT NOT NULL PRIMARY KEY);
INSERT INTO @UserInRoles SELECT DISTINCT r.[RoleID] FROM dbo.[{objectQualifier}Roles] AS r INNER JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = r.RoleID WHERE ur.UserID = @UserID AND r.PortalID = @PortalID AND (ur.ExpiryDate IS NULL OR ur.ExpiryDate > @CurrentDate) AND (ur.EffectiveDate IS NULL OR ur.EffectiveDate < @CurrentDate);
DECLARE @UserEditCategories TABLE (CategoryID INT NOT NULL PRIMARY KEY); -- all categories which user can edit based on permissions

DECLARE @FilterAuthorOrAuthors BIT;
SET @FilterAuthorOrAuthors = 0;
DECLARE @TempAuthorsIDList TABLE (UserID INT NOT NULL PRIMARY KEY);
IF @FilterByAuthor <> 0
BEGIN
	SET @FilterAuthorOrAuthors = 1;
	INSERT INTO @TempAuthorsIDList SELECT @FilterByAuthor;
END
ELSE IF @FilterByGroupID <> 0
BEGIN
	SET @FilterAuthorOrAuthors = 1;
	INSERT INTO @TempAuthorsIDList
	SELECT [UserID] FROM dbo.[{objectQualifier}EasyDNNNewsAuthorProfile] AS ap 
		INNER JOIN dbo.[{objectQualifier}EasyDNNNewsAutorGroupItems] AS agi ON ap.AuthorProfileID = agi.AuthorProfileID	
		WHERE agi.GroupID = @FilterByGroupID
END

-- kategorije sa edit pravima
IF @AdminOrSuperUser = 1 OR @Perm_EditAllCategores = 1
BEGIN	
	INSERT INTO @UserEditCategories SELECT CategoryID FROM dbo.[{objectQualifier}EasyDNNNewsCategoryList] WHERE PortalID = @PortalID;
	SET @EditPermission = 1;
END
ELSE
BEGIN
	IF @UserID = -1
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL AND rps.RoleID IS NULL;
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			WHERE rps.RoleID IS NULL AND rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID;
		END
	END
	ELSE -- registrirani korisnik
	BEGIN
		IF @PermissionSettingsSource = 1 -- by portal
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID IS NULL GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID IS NULL GROUP BY upatc.[CategoryID];
		END
		ELSE -- by module
		BEGIN
			INSERT INTO @UserEditCategories
			SELECT rpatc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsRolePremissionsAddToCategories] AS rpatc
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsRolePremissionSettings] AS rps ON rps.PremissionSettingsID = rpatc.PremissionSettingsID
			INNER JOIN @UserInRoles AS uir ON rps.RoleID = uir.RoleID
			WHERE rps.PortalID = @PortalID AND rps.ModuleID = @ModuleID GROUP BY rpatc.[CategoryID]
			UNION
			SELECT upatc.[CategoryID] FROM dbo.[{objectQualifier}EasyDNNNewsUserPremissionsAddToCategories] AS upatc
			INNER JOIN dbo.[{objectQualifier}EasyDNNNewsUserPremissionSettings] AS ups ON ups.PremissionSettingsID = upatc.PremissionSettingsID
			WHERE ups.UserID = @UserID AND ups.PortalID = @PortalID AND ups.ModuleID = @ModuleID GROUP BY upatc.[CategoryID];
		END	
	END
	IF EXISTS(SELECT TOP (1) * FROM @UserEditCategories) BEGIN SET @EditPermission = 2; END
END

IF @inCategories IS NOT NULL
BEGIN
	 DELETE uec FROM @UserEditCategories AS uec WHERE uec.CategoryID NOT IN (SELECT Id FROM @CategoryFilter);
END

DECLARE @SearchTable TABLE (Words NVARCHAR(256) NOT NULL);
IF @SimpleSearchFindCondition IS NOT NULL
	DECLARE @word NVARCHAR(256), @PosWord INT
	SET @SimpleSearchFindCondition = LTRIM(RTRIM(@SimpleSearchFindCondition))+ ':'
	SET @PosWord = CHARINDEX(':', @SimpleSearchFindCondition, 1)
	IF REPLACE(@SimpleSearchFindCondition, ':', '') <> ''
	BEGIN
		WHILE @PosWord > 0
		BEGIN
			SET @word = LTRIM(RTRIM(LEFT(@SimpleSearchFindCondition, @PosWord - 1)))
			IF @word <> ''
			BEGIN
				SET @word = replace(
							replace(
							replace(
							replace( @word
							,'\', '\\' )
							,'%', '\%' )
							,'_', '\_' )
							,'[', '\[' )
				INSERT INTO @SearchTable (Words) VALUES ('% '+@word+'%')
				INSERT INTO @SearchTable (Words) VALUES (@word+'%')
			END
			SET @SimpleSearchFindCondition = RIGHT(@SimpleSearchFindCondition, LEN(@SimpleSearchFindCondition) - @PosWord)
			SET @PosWord = CHARINDEX(':', @SimpleSearchFindCondition, 1)
		END
	END

SELECT AllNewsItems.[ArticleID]
	,AllNewsItems.[UserID]
	,AllNewsItems.[Title]
	,AllNewsItems.[SubTitle]
	,AllNewsItems.[ArticleImage]
	,AllNewsItems.[DateAdded]
	,AllNewsItems.[LastModified]
	,AllNewsItems.[PublishDate]
	,AllNewsItems.[ExpireDate]
	,AllNewsItems.[NumberOfViews]
	,AllNewsItems.[RatingValue]
	,AllNewsItems.[RatingCount]
	,AllNewsItems.[TitleLink]
	,AllNewsItems.[DetailType]
	,AllNewsItems.[DetailTypeData]
	,AllNewsItems.[ArticleImageFolder]
	,AllNewsItems.[NumberOfComments]
	,AllNewsItems.[DetailTarget]
	,AllNewsItems.[HasPermissions]
	,AllNewsItems.[EventArticle]
	,AllNewsItems.[DetailMediaType]
	,AllNewsItems.[DetailMediaData]
	,AllNewsItems.[Featured]
	,AllNewsItems.[Approved]
	,AllNewsItems.[AllowComments]
	,AllNewsItems.[Active]
	,AllNewsItems.[ArticleImageSet]
	,AllNewsItems.[CFGroupeID]
	,AllNewsItems.[WorkflowId]
	,(
		SELECT wfs.*, edas.Status,
		( SELECT TOP 1 war.RoleID
						FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveRoles AS war
						INNER JOIN {objectQualifier}UserRoles AS ur ON ur.RoleID = war.RoleID
						WHERE war.StateId = wfs.StateId AND ur.Userid=@userID
					 )  As RoleId,
					( SELECT TOP 1 wau.userId  
					FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveUsers AS wau
					WHERE wau.StateId = wfs.StateId AND wau.Userid =@userID
					)  As EditUserId
		FROM dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs
		LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS edas ON edas.StateId = wfs.StateId AND edas.ArticleId = AllNewsItems.ArticleID
		WHERE wfs.WorkflowId = AllNewsItems.WorkflowId
		ORDER BY wfs.position ASC
		FOR XML PATH('WorkflowState'), ROOT('WorkflowStates')
	) AS WorkflowState
	,AllNewsItems.[EventStartDate],
	CASE WHEN u.DisplayName IS NULL THEN 'Anonym' ELSE u.DisplayName END AS DisplayName,
	CASE @EditPermission 
		WHEN 0 THEN 0
		WHEN 1 THEN 1
		WHEN 2 THEN
		CASE @EditOnlyAsOwner
			WHEN 0 THEN
				CASE WHEN EXISTS(SELECT CategoryID FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c WHERE c.ArticleID = AllNewsItems.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
					THEN 1
					ELSE
						CASE WHEN EXISTS(SELECT [ArticleID] FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = AllNewsItems.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
							CASE WHEN EXISTS (SELECT [ArticleID] FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = AllNewsItems.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
								THEN 1
								ELSE 0
							END
						END
				END
			WHEN 1 THEN
				CASE WHEN EXISTS(SELECT CategoryID FROM dbo.[{objectQualifier}EasyDNNNewsCategories] AS c WHERE AllNewsItems.UserID = @UserID AND c.ArticleID = AllNewsItems.ArticleID AND c.CategoryID IN (SELECT CategoryID FROM @UserEditCategories))
					THEN 1
					ELSE
						CASE WHEN EXISTS(SELECT [ArticleID] FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = AllNewsItems.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
						THEN 1
						ELSE
							CASE WHEN EXISTS (SELECT [ArticleID] FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = AllNewsItems.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
								THEN 1
								ELSE 0
							END
						END 
				END
		END
		WHEN 3 THEN
			CASE WHEN EXISTS(SELECT [ArticleID] FROM dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp WHERE arp.ArticleID = AllNewsItems.ArticleID AND arp.Edit = 1 AND arp.RoleID IN(SELECT RoleID FROM @UserInRoles))
				THEN 1
				ELSE
				CASE WHEN EXISTS (SELECT [ArticleID] FROM dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup WHERE aup.ArticleID = AllNewsItems.ArticleID AND aup.Edit = 1 AND aup.UserID = @UserID)
					THEN 1
					ELSE 0
					END
				END 
	END AS CanEdit,
	 CASE AllNewsItems.Active
		WHEN 1 THEN 0
		WHEN 0 THEN 1
	 END AS Published,
	 CASE @UserCanApprove
		WHEN 0 THEN 0
		WHEN 1 THEN
			CASE AllNewsItems.Approved
			 WHEN 1 THEN 0
			 WHEN 0 THEN
				 CASE AllNewsItems.Active
					WHEN 1 THEN 1
					WHEN 0 THEN 0
				END
			END
	 END AS Approve,
	 CASE WHEN AllNewsItems.EventArticle = 1 AND EXISTS (SELECT 1 FROM dbo.[{objectQualifier}EasyDNNNewsEventsRecurringData] AS erd WHERE erd.ArticleID = AllNewsItems.ArticleID)
	   THEN 1 ELSE 0 END
	 AS IsRecurring,
	 (CASE WHEN AllNewsItems.EventType IS NULL THEN 0 ELSE 1 END) AS RegistrationEnabled,
	 (CASE WHEN AllNewsItems.InnerPaymentEnabled IS NULL THEN 0 ELSE AllNewsItems.InnerPaymentEnabled END) AS PaymentEnabled	 
	FROM (
		SELECT n.[ArticleID]
			,n.[UserID]
			,n.[Title]
			,n.[SubTitle]
			,n.[ArticleImage]
			,n.[DateAdded]
			,n.[LastModified]
			,n.[PublishDate]
			,n.[ExpireDate]
			,n.[NumberOfViews]
			,n.[RatingValue]
			,n.[RatingCount]
			,n.[TitleLink]
			,n.[DetailType]
			,n.[DetailTypeData]
			,n.[ArticleImageFolder]
			,n.[NumberOfComments]
			,n.[DetailTarget]
			,n.[HasPermissions]
			,n.[EventArticle]
			,n.[DetailMediaType]
			,n.[DetailMediaData]
			,n.[Featured]
			,n.[Approved]
			,n.[AllowComments]
			,n.[Active]
			,n.[ArticleImageSet]
			,n.[CFGroupeID]
			,n.WorkflowId,
			(
		SELECT wfs.*, edas.Status,
		( SELECT TOP 1 war.RoleID
						FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveRoles AS war
						INNER JOIN {objectQualifier}UserRoles AS ur ON ur.RoleID = war.RoleID
						WHERE war.StateId = wfs.StateId AND ur.Userid=@userID
					 )  As RoleId,
					( SELECT TOP 1 wau.userId  
					FROM  {objectQualifier}EasyDNNNewsWorkflowStateApproveUsers AS wau
					WHERE wau.StateId = wfs.StateId AND wau.Userid =@userID
					)  As EditUserId
		FROM dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs
		LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS edas ON edas.StateId = wfs.StateId AND edas.ArticleId = n.ArticleID
		WHERE wfs.WorkflowId = n.WorkflowId
		ORDER BY wfs.position ASC
		FOR XML PATH('WorkflowState'), ROOT('WorkflowStates')
	) AS WorkflowState
			,ed.StartDate AS EventStartDate, ed.EventType, ed.PaymentEnabled AS InnerPaymentEnabled, ROW_NUMBER() OVER (ORDER BY 
				CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
				CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
				CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
				CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
				CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
				CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
				CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
				CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
				CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
				CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
				CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
				CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy ='Title ASC' THEN n.Title END,
				CASE WHEN @OrderBy ='Title DESC' THEN n.Title END DESC,

				CASE WHEN @OrderBy2 ='PublishDate ASC' THEN PublishDate END,
				CASE WHEN @OrderBy2 ='PublishDate DESC' THEN PublishDate END DESC,
				CASE WHEN @OrderBy2 ='NumberOfViews ASC' THEN NumberOfViews END,
				CASE WHEN @OrderBy2 ='NumberOfViews DESC' THEN NumberOfViews END DESC,
				CASE WHEN @OrderBy2 ='RatingValue ASC' THEN RatingValue END,
				CASE WHEN @OrderBy2 ='RatingValue DESC' THEN RatingValue END DESC,
				CASE WHEN @OrderBy2 ='DateAdded ASC' THEN DateAdded END,
				CASE WHEN @OrderBy2 ='DateAdded DESC' THEN DateAdded END DESC,
				CASE WHEN @OrderBy2 ='ExpireDate ASC' THEN ExpireDate END,
				CASE WHEN @OrderBy2 ='ExpireDate DESC' THEN ExpireDate END DESC,
				CASE WHEN @OrderBy2 ='LastModified ASC' THEN LastModified END,
				CASE WHEN @OrderBy2 ='LastModified DESC' THEN LastModified END DESC,
				CASE WHEN @OrderBy2 ='NumberOfComments ASC' THEN NumberOfComments END,
				CASE WHEN @OrderBy2 ='NumberOfComments DESC' THEN NumberOfComments END DESC,
				CASE WHEN @OrderBy2 ='Title ASC' THEN n.Title END,
				CASE WHEN @OrderBy2 ='Title DESC' THEN n.Title END DESC) AS Kulike
		FROM dbo.[{objectQualifier}EasyDNNNews] AS n
		LEFT OUTER JOIN dbo.[{objectQualifier}EasyDNNNewsEventsData] AS ed ON ed.ArticleID = n.ArticleID
		WHERE (@StartDate IS NULL OR ed.ArticleID IS NULL OR (ed.StartDate >= @StartDate))
			AND n.ArticleID IN (
				SELECT [ArticleID]
				FROM (
					SELECT na.[ArticleID]
					FROM dbo.[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID AND cat.CategoryID IN (SELECT CategoryID FROM @UserEditCategories)
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflows] AS wf ON na.WorkflowId = wf.Id AND @Approved = 3
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs ON wfs.WorkflowId = wf.Id AND @Approved = 3
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS sai ON sai.ArticleId = na.ArticleID AND @Approved = 3
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateApproveRoles] AS war ON war.StateId = sai.StateId
						LEFT JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = war.RoleID AND @Approved = 3 AND wfs.AllUserEdit=0
						LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateApproveUsers] AS wau ON wau.StateId = sai.StateId AND wfs.AllUserEdit=0 
					WHERE na.PortalID=@PortalID
						AND na.HasPermissions = 0
						AND ((@Approved = 3) OR (@Approved = 0) OR ((@Approved = 1 AND na.Approved = 1) OR (@Approved = 2 AND na.Approved = 0)))		   
						AND ((@ArticleType = 0) OR ((@ArticleType = 1 AND na.EventArticle = 0) OR (@ArticleType = 2 AND na.EventArticle = 1)))
						AND ((@PermissionsByArticle = 0) OR ((@PermissionsByArticle = 1 AND na.HasPermissions = 1) OR (@PermissionsByArticle = 2 AND na.HasPermissions = 0)))		   
						AND ((@Published = 3 AND sai.Status = 1 AND (wfs.WorkflowStateType=2 OR wfs.WorkflowStateType=3)) OR (@Published = 0) OR ((@Published = 1 AND na.Active = 1) OR (@Published = 2 AND na.Active = 0)))
						AND ((@Featured = 0) OR ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 2 AND na.Featured = 0)))
						AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
						AND (@FilterByCustomFieldTemplate IS NULL OR na.CFGroupeID = @FilterByCustomFieldTemplate)
						AND ((@Published = 3 and wau.UserId=@userID ) OR (@Published = 3 AND ur.Userid=@userID ) OR (@Published = 3 AND (wfs.WorkflowStateType=2 OR wfs.WorkflowStateType=3) AND wfs.AllUserEdit=1)OR @Published <>3 )
					UNION ALL
					SELECT ArticleID
					FROM (
						SELECT na.[ArticleID] , na.[ArticleID] as test	
						FROM dbo.[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleUserPermissions] AS aup ON na.ArticleID = aup.ArticleID
							INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflows] AS wf ON na.WorkflowId = wf.Id AND @Approved = 3
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs ON wfs.WorkflowId = wf.Id AND @Approved = 3
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS sai ON sai.ArticleId = na.ArticleID AND @Approved = 3
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateApproveRoles] AS war ON war.StateId = sai.StateId
							LEFT JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = war.RoleID AND @Approved = 3 AND wfs.AllUserEdit=0 
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateApproveUsers] AS wau ON wau.StateId = sai.StateId AND wfs.AllUserEdit=0 
						WHERE na.PortalID=@PortalID
							AND na.HasPermissions = 1
							AND ((@EditPermission = 1) OR ((aup.Edit = 1) AND ((@UserID = -1 AND aup.UserID IS NULL) OR (aup.UserID = @UserID))))
							AND ((@Approved = 0) OR ((@Approved = 1 AND na.Approved = 1) OR (@Approved = 2 AND na.Approved = 0)))
							AND ((@ArticleType = 0) OR ((@ArticleType = 1 AND na.EventArticle = 0) OR (@ArticleType = 2 AND na.EventArticle = 1)))
							AND ((@PermissionsByArticle = 0) OR ((@PermissionsByArticle = 1 AND na.HasPermissions = 1) OR (@PermissionsByArticle = 2 AND na.HasPermissions = 0)))
							AND ((@Published = 3 AND sai.Status = 1 AND (wfs.WorkflowStateType=2 OR wfs.WorkflowStateType=3)) OR (@Published = 0) OR ((@Published = 1 AND na.Active = 1) OR (@Published = 2 AND na.Active = 0)))
							AND ((@Featured = 0) OR ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 2 AND na.Featured = 0)))
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
							AND (@inCategories IS NULL OR cat.CategoryID IN (SELECT Id FROM @CategoryFilter))
							AND (@FilterByCustomFieldTemplate IS NULL OR na.CFGroupeID = @FilterByCustomFieldTemplate)
							AND ((@Published = 3 and wau.UserId=@userID ) OR (@Published = 3 AND ur.Userid=@userID ) OR (@Published = 3 AND (wfs.WorkflowStateType=2 OR wfs.WorkflowStateType=3) AND wfs.AllUserEdit=1)OR @Published <>3 )
						UNION
						SELECT na.[ArticleID], na.[ArticleID] as test				
						FROM dbo.[{objectQualifier}EasyDNNNews] AS na
							INNER JOIN dbo.[{objectQualifier}EasyDNNNewsArticleRolePermissions] AS arp ON na.ArticleID = arp.ArticleID
							INNER JOIN dbo.[{objectQualifier}EasyDNNNewsCategories] AS cat ON na.ArticleID = cat.ArticleID
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflows] AS wf ON na.WorkflowId = wf.Id AND @Approved = 3
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStates] AS wfs ON wfs.WorkflowId = wf.Id AND @Approved = 3
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateArticleItems] AS sai ON sai.ArticleId = na.ArticleID AND @Approved = 3
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateApproveRoles] AS war ON war.StateId = sai.StateId
							LEFT JOIN dbo.[{objectQualifier}UserRoles] AS ur ON ur.RoleID = war.RoleID AND @Approved = 3 AND wfs.AllUserEdit=0 
							LEFT JOIN dbo.[{objectQualifier}EasyDNNNewsWorkflowStateApproveUsers] AS wau ON wau.StateId = sai.StateId AND wfs.AllUserEdit=0 
						WHERE na.PortalID=@PortalID
							AND na.HasPermissions = 1
							AND ((@EditPermission = 1) OR ((arp.Edit = 1) AND arp.RoleID IN (SELECT [RoleID] FROM @UserInRoles)))
							AND ((@Approved = 0) OR ((@Approved = 1 AND na.Approved = 1) OR (@Approved = 2 AND na.Approved = 0)))
							AND ((@ArticleType = 0) OR ((@ArticleType = 1 AND na.EventArticle = 0) OR (@ArticleType = 2 AND na.EventArticle = 1)))
							AND ((@PermissionsByArticle = 0) OR ((@PermissionsByArticle = 1 AND na.HasPermissions = 1) OR (@PermissionsByArticle = 2 AND na.HasPermissions = 0)))
							AND ((@Published = 3 AND sai.Status = 1 AND (wfs.WorkflowStateType=2 OR wfs.WorkflowStateType=3)) OR (@Published = 0) OR ((@Published = 1 AND na.Active = 1) OR (@Published = 2 AND na.Active = 0)))
							AND ((@Featured = 0) OR ((@Featured = 1 AND na.Featured = 1) OR (@Featured = 2 AND na.Featured = 0)))
							AND ((@FilterAuthorOrAuthors = 0) OR (@FilterAuthorOrAuthors = 1 AND na.UserID IN (SELECT UserID FROM @TempAuthorsIDList)))
							AND (@inCategories IS NULL OR cat.CategoryID IN (SELECT Id FROM @CategoryFilter))
							AND (@FilterByCustomFieldTemplate IS NULL OR na.CFGroupeID = @FilterByCustomFieldTemplate)
							AND ((@Published = 3 and wau.UserId=@userID ) OR(@Published = 3 AND ur.Userid=@userID ) OR (@Published = 3 AND (wfs.WorkflowStateType=2 OR wfs.WorkflowStateType=3) AND wfs.AllUserEdit=1)OR @Published <>3 )
					) AS WithPerm
				) AS AllArticles
				WHERE (@SimpleSearchFindCondition IS NULL OR (
					AllArticles.ArticleID IN (
						SELECT na.[ArticleID]
						FROM dbo.[{objectQualifier}EasyDNNNews] AS na
						INNER JOIN @SearchTable AS st ON (na.Title LIKE st.Words ESCAPE '\' OR na.SubTitle LIKE st.Words ESCAPE '\' OR na.CleanArticleData LIKE st.Words ESCAPE '\')
						WHERE na.PortalID=@PortalID
						UNION
						SELECT ti.[ArticleID]
						FROM dbo.[{objectQualifier}EasyDNNNewsTagsItems] AS ti
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsNewTags] AS t ON ti.TagID = t.TagID
						INNER JOIN @SearchTable AS stt ON t.Name Like stt.Words
						WHERE t.PortalID=@PortalID
						UNION
						SELECT di.ArticleID
						FROM dbo.[{objectQualifier}EasyDNNNewsDocumentItems] AS di
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsDocuments] AS d ON di.DocumentID = d.DocEntryID
						INNER JOIN @SearchTable AS st ON (d.Title LIKE st.Words ESCAPE '\' OR d.Description LIKE st.Words ESCAPE '\')
						WHERE d.PortalID=@PortalID
							AND d.Visible = 1
						UNION
						SELECT li.ArticleID
						FROM dbo.[{objectQualifier}EasyDNNNewsLinkItems] AS li
						INNER JOIN dbo.[{objectQualifier}EasyDNNNewsLinks] AS l ON li.LinkID = l.LinkID
						INNER JOIN @SearchTable AS st ON (l.Title LIKE st.Words ESCAPE '\' OR l.Description LIKE st.Words ESCAPE '\')
						WHERE l.PortalID=@PortalID
					)
				)
			)
		)
	 ) AS AllNewsItems
	 LEFT OUTER JOIN dbo.[{objectQualifier}Users] AS u ON AllNewsItems.UserID = u.UserID
	 WHERE Kulike BETWEEN @ItemsFrom AND @ItemsTo ORDER BY
		 CASE WHEN @OrderBy ='PublishDate ASC' THEN PublishDate END,
		 CASE WHEN @OrderBy ='PublishDate DESC' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy ='NumberOfViews ASC' THEN NumberOfViews END,
		 CASE WHEN @OrderBy ='NumberOfViews DESC' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy ='RatingValue ASC' THEN RatingValue END,
		 CASE WHEN @OrderBy ='RatingValue DESC' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy ='DateAdded ASC' THEN DateAdded END,
		 CASE WHEN @OrderBy ='DateAdded DESC' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy ='ExpireDate ASC' THEN ExpireDate END,
		 CASE WHEN @OrderBy ='ExpireDate DESC' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy ='LastModified ASC' THEN LastModified END,
		 CASE WHEN @OrderBy ='LastModified DESC' THEN LastModified END DESC,
		 CASE WHEN @OrderBy ='NumberOfComments ASC' THEN NumberOfComments END,
		 CASE WHEN @OrderBy ='NumberOfComments DESC' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy ='Title ASC' THEN Title END,
		 CASE WHEN @OrderBy ='Title DESC' THEN Title END DESC,
		 CASE WHEN @OrderBy2 ='PublishDate ASC' THEN PublishDate END,
		 CASE WHEN @OrderBy2 ='PublishDate DESC' THEN PublishDate END DESC,
		 CASE WHEN @OrderBy2 ='NumberOfViews ASC' THEN NumberOfViews END,
		 CASE WHEN @OrderBy2 ='NumberOfViews DESC' THEN NumberOfViews END DESC,
		 CASE WHEN @OrderBy2 ='RatingValue ASC' THEN RatingValue END,
		 CASE WHEN @OrderBy2 ='RatingValue DESC' THEN RatingValue END DESC,
		 CASE WHEN @OrderBy2 ='DateAdded ASC' THEN DateAdded END,
		 CASE WHEN @OrderBy2 ='DateAdded DESC' THEN DateAdded END DESC,
		 CASE WHEN @OrderBy2 ='ExpireDate ASC' THEN ExpireDate END,
		 CASE WHEN @OrderBy2 ='ExpireDate DESC' THEN ExpireDate END DESC,
		 CASE WHEN @OrderBy2 ='LastModified ASC' THEN LastModified END,
		 CASE WHEN @OrderBy2 ='LastModified DESC' THEN LastModified END DESC,
		 CASE WHEN @OrderBy2 ='NumberOfComments ASC' THEN NumberOfComments END,
		 CASE WHEN @OrderBy2 ='NumberOfComments DESC' THEN NumberOfComments END DESC,
		 CASE WHEN @OrderBy2 ='Title ASC' THEN Title END,
		 CASE WHEN @OrderBy2 ='Title DESC' THEN Title END DESC;
GO

