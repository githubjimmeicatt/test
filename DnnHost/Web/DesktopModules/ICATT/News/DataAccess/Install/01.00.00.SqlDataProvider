/*
'//Author: A.Reinermann
'//Company: ICATT interactive media
'//Date: 2009/02/24
*/

/**************************/
/*** TABLES             ***/
/**************************/
	IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Icatt_News_List]') AND OBJECTPROPERTY(id, N'IsTable') = 1)
	BEGIN
		CREATE TABLE {databaseOwner}[{objectQualifier}Icatt_News_List] (
			[PortalId] [int] NULL ,
			[NewsListId] [int] IDENTITY (1, 1) NOT NULL ,
			[Title] [nvarchar] (1024) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
			[Intro] [ntext] COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
			[Description] [ntext] COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
			[Link1] [varchar] (1024) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
			[Link1Type] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
			[CreatedByUser] [int] NULL ,
			[CreatedDate] [datetime] NULL ,
			[ModifiedByUser] [int] NULL ,
			[ModifiedDate] [datetime] NULL ,
			[DeletedByUser] [int] NULL ,
			[DeletedDate] [datetime] NULL ,
			[Deleted] [bit] NULL 
		) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

		ALTER TABLE {databaseOwner}[{objectQualifier}Icatt_News_List] ADD 
			CONSTRAINT [PK_{objectQualifier}Icatt_News_List] PRIMARY KEY CLUSTERED 
			(
				[NewsListId]
			)  ON [PRIMARY] 
	END
	GO

	IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Icatt_News_Item]') AND OBJECTPROPERTY(id, N'IsTable') = 1)
	BEGIN
		CREATE TABLE {databaseOwner}[{objectQualifier}Icatt_News_Item] (
			[PortalId] [int] NULL ,
			[NewsListId] [int] NULL ,
			[NewsItemId] [int] IDENTITY (1, 1) NOT NULL ,
			[Title] [nvarchar] (1024) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
			[Intro] [ntext] COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
			[Description] [ntext] COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
			[Tag] [nvarchar] (255) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
			[HighLight] [ntext] COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
			[PublishedAt] [datetime] NULL ,
			[Link1] [varchar] (1024) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
			[Link1Type] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
			[Link2] [varchar] (1024) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
			[Link2Type] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
			[Status] [char] (1) NULL ,
			[OnlineAt] [datetime] NULL ,
			[OfflineAt] [datetime] NULL ,
			[CreatedByUser] [int] NULL ,
			[CreatedDate] [datetime] NULL ,
			[ModifiedByUser] [int] NULL ,
			[ModifiedDate] [datetime] NULL ,
			[DeletedByUser] [int] NULL ,
			[DeletedDate] [datetime] NULL ,
			[Deleted] [bit] NULL,
			[NrOfViews] [int] NOT NULL,
			[TargetPortals] varchar(8000) NULL,
		) ON [PRIMARY]

		ALTER TABLE {databaseOwner}[{objectQualifier}Icatt_News_Item] ADD  CONSTRAINT [DF_{objectQualifier}Icatt_News_Item_NrOfViews]  DEFAULT ((0)) FOR [NrOfViews]

		ALTER TABLE {databaseOwner}[{objectQualifier}Icatt_News_Item] ADD 
			CONSTRAINT [PK_{objectQualifier}Icatt_News_Item] PRIMARY KEY CLUSTERED 
			(
				[NewsItemId]
			)  ON [PRIMARY] 
	END
	GO

	IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Icatt_News_Item_Classification]') AND OBJECTPROPERTY(id, N'IsTable') = 1)
	BEGIN
		CREATE TABLE {databaseOwner}[{objectQualifier}Icatt_News_Item_Classification] (
			[Id] [int] IDENTITY (1, 1) NOT NULL ,
			[NewsItemId] [int] NOT NULL,
			[ClassificationId] [int] NOT NULL,
			[CreatedByUser] [int] NULL ,
			[CreatedDate] [datetime] NULL ,
			[ModifiedByUser] [int] NULL ,
			[ModifiedDate] [datetime] NULL ,
			[DeletedByUser] [int] NULL ,
			[DeletedDate] [datetime] NULL ,
			[Deleted] [bit] NULL
		) ON [PRIMARY]
		
		CREATE  UNIQUE  CLUSTERED  INDEX [IX_{objectQualifier}Icatt_News_Item_Classification] ON {databaseOwner}[{objectQualifier}Icatt_News_Item_Classification]([NewsItemId], [ClassificationId]) ON [PRIMARY]
		
		ALTER TABLE {databaseOwner}[{objectQualifier}Icatt_News_Item_Classification] ADD 
			CONSTRAINT [PK_{objectQualifier}Icatt_News_Item_Classification] PRIMARY KEY  NONCLUSTERED 
			(
				[NewsItemId] ASC,
				[ClassificationId] ASC
			)  ON [PRIMARY]

	END
	GO

/**************************/
/*** STORED PROCEDURE   ***/
/**************************/

	--// News List
	IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Icatt_News_List_Get]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Icatt_News_List_Get]
	GO

	IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Icatt_News_List_Add]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Icatt_News_List_Add]
	GO

	IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Icatt_News_List_Insert]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Icatt_News_List_Insert]
	GO

	IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Icatt_News_List_Update]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Icatt_News_List_Update]
	GO

	IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Icatt_News_List_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Icatt_News_List_Delete]
	GO

	--// News Lists
	IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Icatt_News_Lists_Get]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Icatt_News_Lists_Get]
	GO

	--// News Item
	IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Icatt_News_Item_Get]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Icatt_News_Item_Get]
	GO

	IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Icatt_News_Item_Add]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Icatt_News_Item_Add]
	GO

	IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Icatt_News_Item_Insert]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Icatt_News_Item_Insert]
	GO

	IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Icatt_News_Item_Update]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Icatt_News_Item_Update]
	GO

	IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Icatt_News_Item_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Icatt_News_Item_Delete]
	GO

	--// News Items
	IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Icatt_News_Items_Get]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Icatt_News_Items_Get]
	GO

	--// News Item Classification
	IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Icatt_News_Item_Classification_Get]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Icatt_News_Item_Classification_Get]
	GO

	IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Icatt_News_Item_Classification_Add]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Icatt_News_Item_Classification_Add]
	GO

	IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Icatt_News_Item_Classification_Delete]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Icatt_News_Item_Classification_Delete]
	GO


/*****************************************/
/*** STORED PROCEDURES  [ News Lists ] ***/
/*****************************************/
	CREATE PROCEDURE {databaseOwner}{objectQualifier}Icatt_News_List_Get
		@NewsListId int
	AS
		SELECT *
		FROM {databaseOwner}{objectQualifier}Icatt_News_List WITH (nolock)
		WHERE NewsListId = @NewsListId
		AND ISNULL(Deleted,0) = 0
	GO

	CREATE PROCEDURE {databaseOwner}{objectQualifier}Icatt_News_List_Add
		@PortalId int,
		@Title nvarchar(1024),
		@Intro ntext,
		@Description ntext,
		@Link1 varchar(1024),
		@Link1Type char(1),
		@CreatedByUser int
	AS
		SET NOCOUNT ON
		
		INSERT INTO {databaseOwner}{objectQualifier}Icatt_News_List (
			PortalId,
			Title,
			Intro,
			[Description],
			Link1,
			Link1Type,
			CreatedByUser,
			CreatedDate,
			ModifiedByUser,
			ModifiedDate
		) VALUES (
			@PortalId,
			@Title,
			@Intro,
			@Description,
			@Link1,
			@Link1Type,
			@CreatedByUser,
			getdate(),
			@CreatedByUser,
			getdate()
		)
		
		SELECT *
		FROM {databaseOwner}{objectQualifier}Icatt_News_List
		WHERE NewsListId = @@IDENTITY

	GO

	CREATE PROCEDURE {databaseOwner}{objectQualifier}Icatt_News_List_Insert
		@PortalId int,
		@NewsListId int,
		@Title nvarchar(1024),
		@Intro ntext,
		@Description ntext,
		@Link1 varchar(1024),
		@Link1Type char(1),
		@CreatedByUser int
	AS
		SET NOCOUNT ON
		
		INSERT INTO {databaseOwner}{objectQualifier}Icatt_News_List (
			PortalId,
			NewsListId,
			Title,
			Intro,
			[Description],
			Link1,
			Link1Type,
			CreatedByUser,
			CreatedDate,
			ModifiedByUser,
			ModifiedDate
		) VALUES (
			@PortalId,
			@NewsListId,
			@Title,
			@Intro,
			@Description,
			@Link1,
			@Link1Type,
			@CreatedByUser,
			getdate(),
			@CreatedByUser,
			getdate()
		)
		
		SELECT *
		FROM {databaseOwner}{objectQualifier}Icatt_News_List
		WHERE NewsListId = @NewsListId

	GO
	
	CREATE PROCEDURE {databaseOwner}{objectQualifier}Icatt_News_List_Update
		@PortalId int,
		@NewsListId int,
		@Title nvarchar(1024),
		@Intro ntext,
		@Description ntext,
		@Link1 varchar(1024),
		@Link1Type char(1),
		@ModifiedByUser int
	AS
		SET NOCOUNT ON
		
		UPDATE {databaseOwner}{objectQualifier}Icatt_News_List
		SET PortalId = @PortalId,
			Title = @Title,
			Intro = @Intro,
			[Description] = @Description,
			Link1 = @Link1,
			Link1Type = @Link1Type,
			ModifiedByUser = @ModifiedByUser,
			ModifiedDate = getdate()
		WHERE NewsListId = @NewsListId
		
		SELECT *
		FROM {databaseOwner}{objectQualifier}Icatt_News_List
		WHERE NewsListId = @NewsListId

	GO


	CREATE PROCEDURE {databaseOwner}{objectQualifier}Icatt_News_List_Delete
		@PortalId int,
		@NewsListId int,
		@DeletedByUser int
	AS
		UPDATE {databaseOwner}{objectQualifier}Icatt_News_List
		SET Deleted = 1,
			DeletedByUser = @DeletedByUser,
			DeletedDate = getdate()
		WHERE (
			(
				PortalId = @PortalId
			) OR (
				@PortalId IS NULL
			)
		) AND (
			(
				NewsListId = @NewsListId
			) OR (
				@NewsListId IS NULL
			)
		)

		UPDATE {databaseOwner}{objectQualifier}Icatt_News_Item
		SET Deleted = 1,
			DeletedByUser = @DeletedByUser,
			DeletedDate = getdate()
		WHERE (
			(
				PortalId = @PortalId
			) OR (
				@PortalId IS NULL
			)
		) AND (
			(
				NewsListId = @NewsListId
			) OR (
				(
					@NewsListId IS NULL
				) AND (
					NOT NewsListId IS NULL -- Only items linked to a list need to be marked as deleted because it is those lists that have been marked as deleted
				)
			)
		)
	GO

	CREATE PROCEDURE {databaseOwner}{objectQualifier}Icatt_News_Lists_Get
		@PortalId int = null
	AS
		SELECT *
		FROM {databaseOwner}{objectQualifier}Icatt_News_List WITH (nolock)
		WHERE (
			(
				PortalId = @PortalId
			) OR (
				@PortalId IS NULL
			)
		) AND ISNULL(Deleted,0) = 0
	GO



/*****************************************/
/*** STORED PROCEDURES  [ News Items ] ***/
/*****************************************/
	CREATE PROCEDURE {databaseOwner}{objectQualifier}Icatt_News_Items_Get
		@PortalId int,
		@NewsListId int,
		@StartAt datetime,
		@EndAt datetime,
		@EditMode as bit = 0
	AS
DECLARE @currentDateTime datetime
		SET @currentDateTime = getdate()

		SELECT {databaseOwner}{objectQualifier}Icatt_News_Item.*
		FROM {databaseOwner}{objectQualifier}Icatt_News_Item WITH (nolock)

		--/ Check deleted flag of News list
		INNER JOIN {databaseOwner}{objectQualifier}Icatt_News_List
		ON {databaseOwner}{objectQualifier}Icatt_News_Item.NewsListId = {databaseOwner}{objectQualifier}Icatt_News_List.NewsListId
		AND ISNULL({databaseOwner}{objectQualifier}Icatt_News_List.Deleted,0) = 0

		--/ From list
		WHERE (
			{databaseOwner}{objectQualifier}Icatt_News_Item.NewsListId = @NewsListId
			OR
			@NewsListId IS NULL
		)
		
		--/ From portal
		AND (
			{databaseOwner}{objectQualifier}Icatt_News_Item.PortalId = @PortalId
			OR
			@PortalId IS NULL
		)
		
		--/ Chech start at and end at
		AND (	(	   {databaseOwner}{objectQualifier}Icatt_News_Item.PublishedAt <= @EndAt
					OR @EndAt IS NULL
					OR {objectQualifier}Icatt_News_Item.PublishedAt IS NULL 
			)
			AND (	   {databaseOwner}{objectQualifier}Icatt_News_Item.PublishedAt >= @StartAt
					OR @StartAt IS NULL
					OR {objectQualifier}Icatt_News_Item.PublishedAt IS NULL 
			)
		)
		
		--/ Check online/offline unless in edit mode
		AND (	
				@EditMode = 1 
			OR (	
					(	   @currentDateTime >= {databaseOwner}{objectQualifier}Icatt_News_Item.OnlineAt
						OR {databaseOwner}{objectQualifier}Icatt_News_Item.OnlineAt IS NULL
				)
				AND (	   @currentDateTime <= {databaseOwner}{objectQualifier}Icatt_News_Item.OfflineAt
						OR {databaseOwner}{objectQualifier}Icatt_News_Item.OfflineAt IS NULL
				)
			)
		)
		
		--/ Check deleted flag of News
		AND ISNULL({databaseOwner}{objectQualifier}Icatt_News_Item.Deleted,0) = 0
	GO
	
	
	CREATE PROCEDURE {databaseOwner}{objectQualifier}Icatt_News_Item_Get
		@NewsItemId int
	AS
		DECLARE @currentDateTime datetime
		SET @currentDateTime = getdate()
		
		SELECT *
		FROM {databaseOwner}{objectQualifier}Icatt_News_Item WITH (nolock)
		WHERE NewsItemId = @NewsItemId
		
		--/ Check online/offline
		AND (
			ISNULL(DATEDIFF(s, @currentDateTime, {databaseOwner}{objectQualifier}Icatt_News_Item.OnlineAt), -1) <= 0
			AND
			ISNULL(DATEDIFF(s, {databaseOwner}{objectQualifier}Icatt_News_Item.OfflineAt, @currentDateTime), -1) <= 0
		)
		
		--/ Check deleted flag of event
		AND ISNULL({databaseOwner}{objectQualifier}Icatt_News_Item.Deleted,0) = 0

	GO

	CREATE PROCEDURE {databaseOwner}{objectQualifier}Icatt_News_Item_Add
		@PortalId int,
		@NewsListId int,
		@Title nvarchar(1024),
		@Intro ntext,
		@Description ntext,
		@Tag nvarchar(255),
		@HighLight ntext,
		@PublishedAt datetime,
		@Link1 varchar(1024),
		@Link1Type char(1),
		@Link2 varchar(1024),
		@Link2Type char(1),
		@Status char(1),
		@OnlineAt datetime,
		@OfflineAt datetime,
		@CreatedByUser int,
		@targetPortals varchar(8000)
	AS
		SET NOCOUNT ON;
		
		INSERT INTO {databaseOwner}{objectQualifier}Icatt_News_Item (
			PortalId,
			NewsListId,
			Title,
			Intro,
			[Description],
			Tag,
			HighLight,
			PublishedAt,
			Link1,
			Link1Type,
			Link2,
			Link2Type,
			Status,
			OnlineAt,
			OfflineAt,
			CreatedByUser,
			CreatedDate,
			ModifiedByUser,
			ModifiedDate,
			TargetPortals
		) VALUES (
			@PortalId,
			@NewsListId,
			@Title,
			@Intro,
			@Description,
			@Tag,
			@HighLight,
			@PublishedAt,
			@Link1,
			@Link1Type,
			@Link2,
			@Link2Type,
			@Status,
			@OnlineAt,
			@OfflineAt,
			@CreatedByUser,
			getdate(),
			@CreatedByUser,
			getdate(),
			@targetPortals
		)
		
		SELECT *
		FROM {databaseOwner}{objectQualifier}Icatt_News_Item
		WHERE NewsItemId = @@IDENTITY
	GO

	CREATE PROCEDURE {databaseOwner}{objectQualifier}Icatt_News_Item_Insert
		@PortalId int,
		@NewsListId int,
		@NewsItemId int,
		@Title nvarchar(1024),
		@Intro ntext,
		@Description ntext,
		@Tag nvarchar(255),
		@HighLight ntext,
		@PublishedAt datetime,
		@Link1 varchar(1024),
		@Link1Type char(1),
		@Link2 varchar(1024),
		@Link2Type char(1),
		@Status char(1),
		@OnlineAt datetime,
		@OfflineAt datetime,
		@CreatedByUser int
	AS
		SET NOCOUNT ON;
		
		INSERT INTO {databaseOwner}{objectQualifier}Icatt_News_Item (
			PortalId,
			NewsListId,
			NewsItemId,
			Title,
			Intro,
			[Description],
			Tag,
			HighLight,
			PublishedAt,
			Link1,
			Link1Type,
			Link2,
			Link2Type,
			Status,
			OnlineAt,
			OfflineAt,
			CreatedByUser,
			CreatedDate,
			ModifiedByUser,
			ModifiedDate
		) VALUES (
			@PortalId,
			@NewsListId,
			@NewsItemId,
			@Title,
			@Intro,
			@Description,
			@Tag,
			@HighLight,
			@PublishedAt,
			@Link1,
			@Link1Type,
			@Link2,
			@Link2Type,
			@Status,
			@OnlineAt,
			@OfflineAt,
			@CreatedByUser,
			getdate(),
			@CreatedByUser,
			getdate()
		)
		
		SELECT *
		FROM {databaseOwner}{objectQualifier}Icatt_News_Item
		WHERE NewsItemId = @NewsItemId
	GO


	CREATE PROCEDURE {databaseOwner}{objectQualifier}Icatt_News_Item_Update
		@PortalId int,
		@NewsListId int,
		@NewsItemId int,
		@Title nvarchar(1024),
		@Intro ntext,
		@Description ntext,
		@Tag nvarchar(255),
		@HighLight ntext,
		@PublishedAt datetime,
		@Link1 varchar(1024),
		@Link1Type char(1),
		@Link2 varchar(1024),
		@Link2Type char(1),
		@Status char(1),
		@OnlineAt datetime,
		@OfflineAt datetime,
		@ModifiedByUser int,
		@NrOfViews int,
		@TargetPortals varchar(8000)
	AS
		SET NOCOUNT ON;
		
		UPDATE {databaseOwner}{objectQualifier}Icatt_News_Item
		SET PortalId = @PortalId,
			NewsListId = @NewsListId,
			Title = @Title,
			Intro = @Intro,
			[Description] = @Description,
			Tag = @Tag,
			HighLight = @HighLight,
			PublishedAt = @PublishedAt,
			Link1 = @Link1,
			Link1Type = @Link1Type,
			Link2 = @Link2,
			Link2Type = @Link1Type,
			Status = @Status,
			OnlineAt = @OnlineAt,
			OfflineAt = @OfflineAt,
			ModifiedByUser = @ModifiedByUser,
			ModifiedDate = getdate(),
			NrOfViews = @NrOfViews,
			TargetPortals = @TargetPortals
		WHERE NewsItemId = @NewsItemId
		
		SELECT *
		FROM {databaseOwner}{objectQualifier}Icatt_News_Item
		WHERE NewsItemId = @NewsItemId
	GO
	
	
	CREATE PROCEDURE {databaseOwner}{objectQualifier}Icatt_News_Item_Delete
		@NewsItemId int,
		@DeletedByUser int
	AS
		UPDATE {databaseOwner}{objectQualifier}Icatt_News_Item
		SET Deleted = 1,
			DeletedByUser = @DeletedByUser,
			DeletedDate = getdate()
		WHERE NewsItemId = @NewsItemId
	GO

/*****************************************/
/*** STORED PROCEDURES  [ News Item Classifications ] ***/
/*****************************************/
	CREATE PROCEDURE {databaseOwner}{objectQualifier}Icatt_News_Item_Classification_Get 
		@NewsItemId int = null,
		@ClassificationId int = null
	AS
	BEGIN
		-- SET NOCOUNT ON added to prevent extra result sets from
		-- interfering with SELECT statements.
		SET NOCOUNT ON;

		-- Insert statements for procedure here
		SELECT *
		FROM {databaseOwner}{objectQualifier}Icatt_News_Item_Classification
		WHERE (
			NewsItemId = @NewsItemId
			OR
			@NewsItemId IS NULL
		) AND (
			ClassificationId = @ClassificationId
			OR
			@ClassificationId IS NULL
		)
		AND ISNULL(Deleted,0) = 0
		
	END
	GO


	CREATE PROCEDURE {databaseOwner}{objectQualifier}Icatt_News_Item_Classification_Add
		@NewsItemId int,
		@ClassificationId int,
		@CreatedByUser int
	AS
	BEGIN
		-- SET NOCOUNT ON added to prevent extra result sets from
		-- interfering with SELECT statements.
		SET NOCOUNT ON;
		
		DECLARE @Id int

		SELECT @Id = Id
		FROM {databaseOwner}{objectQualifier}Icatt_News_Item_Classification
		WHERE NewsItemId = @NewsItemId
		AND ClassificationId = @ClassificationId
		
		IF NOT @Id IS NULL
			BEGIN
				UPDATE {databaseOwner}{objectQualifier}Icatt_News_Item_Classification
				SET CreatedByUser = @CreatedByUser,
					CreatedDate = getdate(),
					Deleted = 0
				WHERE Id = @Id
			END
		ELSE
			BEGIN
				-- Insert statements for procedure here
				INSERT INTO {databaseOwner}{objectQualifier}Icatt_News_Item_Classification (
					NewsItemId,
					ClassificationId,
					CreatedByUser,
					CreatedDate
				) VALUES (
					@NewsItemId, 
					@ClassificationId,
					@CreatedByUser,
					getdate()
				)
			END
		
	END
	GO


	CREATE PROCEDURE {databaseOwner}{objectQualifier}Icatt_News_Item_Classification_Delete
		@NewsItemId int = null,
		@ClassificationId int = null,
		@DeletedByUser int
	AS
	BEGIN
		-- SET NOCOUNT ON added to prevent extra result sets from
		-- interfering with SELECT statements.
		SET NOCOUNT ON;

		-- Insert statements for procedure here
		IF NOT @NewsItemId IS Null
			BEGIN
				IF NOT @ClassificationId IS NULL
					BEGIN
						UPDATE {databaseOwner}{objectQualifier}Icatt_News_Item_Classification
						SET Deleted = 1,
							DeletedByUser = @DeletedByUser,
							DeletedDate = getdate()
						WHERE NewsItemId = @NewsItemId AND ClassificationId = @ClassificationId
					END
				ELSE
					BEGIN
						UPDATE {databaseOwner}{objectQualifier}Icatt_News_Item_Classification
						SET Deleted = 1,
							DeletedByUser = @DeletedByUser,
							DeletedDate = getdate()
						WHERE NewsItemId = @NewsItemId
					END
			END
		ELSE
			BEGIN
				IF NOT @ClassificationId IS NULL
					BEGIN
						UPDATE {databaseOwner}{objectQualifier}Icatt_News_Item_Classification
						SET Deleted = 1,
							DeletedByUser = @DeletedByUser,
							DeletedDate = getdate()
						WHERE ClassificationId = @ClassificationId
					END
			END
		
	END
	GO
