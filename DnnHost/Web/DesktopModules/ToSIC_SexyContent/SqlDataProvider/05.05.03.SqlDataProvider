-- make sure sql rolls back automatically in case of error.
SET XACT_ABORT ON

BEGIN TRANSACTION SexyContentUpdate;

EXEC ToSIC_EAV_ChangeLogAdd 'System'

DECLARE @ChangeLogID int
-- Mod 2016-04-18 2dm change sql-azr detection to only apply exception on V12 as V14 supports the ContextInfo
IF SERVERPROPERTY('edition') <> 'SQL Azure' OR CAST(SERVERPROPERTY('ProductVersion') AS CHAR(2)) >= '12'
	SET @ChangeLogID = CONVERT(int,CONVERT(varbinary(4),CONTEXT_INFO()))
ELSE
	SET @ChangeLogID = 1
SELECT @ChangeLogID

-- Create new AssignmentObjectType for Apps
UPDATE       ToSIC_EAV_AssignmentObjectTypes
SET                Name = N'App', Description = N'App'
WHERE        (AssignmentObjectTypeID = 3)

-- Get App ContentType (which should not exists yet)
DECLARE @AppAttributeSetID int
SELECT @AppAttributeSetID = AttributeSetID 
FROM ToSIC_EAV_AttributeSets
WHERE StaticName = '2SexyContent-App'
AND AppID = 1

-- Create new AttributeSet for Apps (if it does not exist yet)
IF @AppAttributeSetID IS NULL
BEGIN
	INSERT INTO ToSIC_EAV_AttributeSets (StaticName, Name, Scope, Description, ChangeLogCreated, ChangeLogDeleted, AppID, UsesConfigurationOfAttributeSet, AlwaysShareConfiguration)
	VALUES (N'2SexyContent-App', N'2SexyContent-App', N'2SexyContent-App', N'Describes a 2SexyContent app', @ChangeLogID, NULL, 1, NULL, 1)

	SELECT @AppAttributeSetID = AttributeSetID FROM ToSIC_EAV_AttributeSets WHERE StaticName = '2SexyContent-App' AND Scope = N'2SexyContent-App'

	DECLARE @AttributeID int

	-- Insert Attribute DisplayName
	INSERT INTO ToSIC_EAV_Attributes (StaticName, [Type], ChangeLogCreated)
	VALUES ('DisplayName', 'String', @ChangeLogID)
	SET @AttributeID = SCOPE_IDENTITY()
	INSERT INTO ToSIC_EAV_AttributesInSets (AttributeSetID, AttributeID, IsTitle, SortOrder, AttributeGroupID)
	VALUES (@AppAttributeSetID, @AttributeID, 1, 0, 1)

	-- Insert Attribute Description
	INSERT INTO ToSIC_EAV_Attributes (StaticName, [Type], ChangeLogCreated)
	VALUES ('Description', 'String', @ChangeLogID)
	SET @AttributeID = SCOPE_IDENTITY()
	INSERT INTO ToSIC_EAV_AttributesInSets (AttributeSetID, AttributeID, IsTitle, SortOrder, AttributeGroupID)
	VALUES (@AppAttributeSetID, @AttributeID, 0, 1, 1)

	-- Insert Attribute Version
	INSERT INTO ToSIC_EAV_Attributes (StaticName, [Type], ChangeLogCreated)
	VALUES ('Version', 'String', @ChangeLogID)
	SET @AttributeID = SCOPE_IDENTITY()
	INSERT INTO ToSIC_EAV_AttributesInSets (AttributeSetID, AttributeID, IsTitle, SortOrder, AttributeGroupID)
	VALUES (@AppAttributeSetID, @AttributeID, 0, 2, 1)

	-- Insert Attribute Folder
	INSERT INTO ToSIC_EAV_Attributes (StaticName, [Type], ChangeLogCreated)
	VALUES ('Folder', 'String', @ChangeLogID)
	SET @AttributeID = SCOPE_IDENTITY()
	INSERT INTO ToSIC_EAV_AttributesInSets (AttributeSetID, AttributeID, IsTitle, SortOrder, AttributeGroupID)
	VALUES (@AppAttributeSetID, @AttributeID, 0, 3, 1)

	-- Insert Attribute AllowTokenTemplates
	INSERT INTO ToSIC_EAV_Attributes (StaticName, [Type], ChangeLogCreated)
	VALUES ('AllowTokenTemplates', 'Boolean', @ChangeLogID)
	SET @AttributeID = SCOPE_IDENTITY()
	INSERT INTO ToSIC_EAV_AttributesInSets (AttributeSetID, AttributeID, IsTitle, SortOrder, AttributeGroupID)
	VALUES (@AppAttributeSetID, @AttributeID, 0, 4, 1)

	-- Insert Attribute AllowRazorTemplates
	INSERT INTO ToSIC_EAV_Attributes (StaticName, [Type], ChangeLogCreated)
	VALUES ('AllowRazorTemplates', 'Boolean', @ChangeLogID)
	SET @AttributeID = SCOPE_IDENTITY()
	INSERT INTO ToSIC_EAV_AttributesInSets (AttributeSetID, AttributeID, IsTitle, SortOrder, AttributeGroupID)
	VALUES (@AppAttributeSetID, @AttributeID, 0, 5, 1)

	-- Insert Attribute Hidden
	INSERT INTO ToSIC_EAV_Attributes (StaticName, [Type], ChangeLogCreated)
	VALUES ('Hidden', 'Boolean', @ChangeLogID)
	SET @AttributeID = SCOPE_IDENTITY()	
	INSERT INTO ToSIC_EAV_AttributesInSets (AttributeSetID, AttributeID, IsTitle, SortOrder, AttributeGroupID)
	VALUES (@AppAttributeSetID, @AttributeID, 0, 6, 1)

	-- Make sure every existing app has this attributeset (ghost / shared-attributeset)
	INSERT INTO ToSIC_EAV_AttributeSets
                         (ChangeLogCreated, StaticName, Name, Scope, Description, AppID, UsesConfigurationOfAttributeSet)
	SELECT        @ChangeLogID, DestinationAttributeSets.StaticName, DestinationAttributeSets.Name, DestinationAttributeSets.Scope, DestinationAttributeSets.Description, 
							 DestinationAttributeSets.AppID, DestinationAttributeSets.AttributeSetID AS UsesConfigurationOfAttributeSet
	FROM            (SELECT        ToSIC_EAV_AttributeSets_1.AttributeSetID, ToSIC_EAV_AttributeSets_1.StaticName, ToSIC_EAV_AttributeSets_1.Name, 
														ToSIC_EAV_AttributeSets_1.Scope, ToSIC_EAV_AttributeSets_1.Description, ToSIC_EAV_Apps.AppID
							  FROM            ToSIC_EAV_AttributeSets AS ToSIC_EAV_AttributeSets_1 INNER JOIN
														ToSIC_EAV_Apps ON ToSIC_EAV_AttributeSets_1.AppID <> ToSIC_EAV_Apps.AppID
							  WHERE        (ToSIC_EAV_AttributeSets_1.AlwaysShareConfiguration = 1) AND (ToSIC_EAV_AttributeSets_1.AppID = 1)) AS DestinationAttributeSets LEFT OUTER JOIN
							 ToSIC_EAV_AttributeSets AS ExistingAttributeSets ON DestinationAttributeSets.AppID = ExistingAttributeSets.AppID AND 
							 DestinationAttributeSets.StaticName = ExistingAttributeSets.StaticName
	WHERE        (ExistingAttributeSets.AttributeSetID IS NULL)

END

-- Wrapped into an EXEC because Create Procedure has to be the first statement in a query batch
EXEC(N'
-- =============================================
-- Author:		Benjamin Gemperle
-- Create date: 2014-02-26
-- Description:	Delete an App in the 2sic EAV System
-- =============================================
CREATE PROCEDURE [dbo].ToSIC_EAV_DeleteApp
	@AppId int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Delete Value-Dimensions
	DELETE FROM ToSIC_EAV_ValuesDimensions
	FROM            ToSIC_EAV_Values INNER JOIN
							 ToSIC_EAV_Entities ON ToSIC_EAV_Values.EntityID = ToSIC_EAV_Entities.EntityID INNER JOIN
							 ToSIC_EAV_AttributeSets ON ToSIC_EAV_Entities.AttributeSetID = ToSIC_EAV_AttributeSets.AttributeSetID INNER JOIN
							 ToSIC_EAV_ValuesDimensions ON ToSIC_EAV_Values.ValueID = ToSIC_EAV_ValuesDimensions.ValueID
	WHERE        (ToSIC_EAV_AttributeSets.AppID = @AppID)

	-- Delete Values
	DELETE FROM ToSIC_EAV_Values
	FROM            ToSIC_EAV_Values INNER JOIN
							 ToSIC_EAV_Entities ON ToSIC_EAV_Values.EntityID = ToSIC_EAV_Entities.EntityID INNER JOIN
							 ToSIC_EAV_AttributeSets ON ToSIC_EAV_Entities.AttributeSetID = ToSIC_EAV_AttributeSets.AttributeSetID
	WHERE        (ToSIC_EAV_AttributeSets.AppID = @AppID)

	-- Delete Parent-EntityRelationships
	DELETE FROM ToSIC_EAV_EntityRelationships
	FROM            ToSIC_EAV_Entities INNER JOIN
							 ToSIC_EAV_AttributeSets ON ToSIC_EAV_Entities.AttributeSetID = ToSIC_EAV_AttributeSets.AttributeSetID INNER JOIN
							 ToSIC_EAV_EntityRelationships ON ToSIC_EAV_Entities.EntityID = ToSIC_EAV_EntityRelationships.ParentEntityID
	WHERE        (ToSIC_EAV_AttributeSets.AppID = @AppID)

	-- Delete Child-EntityRelationships
	DELETE FROM ToSIC_EAV_EntityRelationships
	FROM            ToSIC_EAV_Entities INNER JOIN
							 ToSIC_EAV_AttributeSets ON ToSIC_EAV_Entities.AttributeSetID = ToSIC_EAV_AttributeSets.AttributeSetID INNER JOIN
							 ToSIC_EAV_EntityRelationships ON ToSIC_EAV_Entities.EntityID = ToSIC_EAV_EntityRelationships.ChildEntityID
	WHERE        (ToSIC_EAV_AttributeSets.AppID = @AppID)

	-- Delete Entities
	DELETE FROM ToSIC_EAV_Entities
	FROM            ToSIC_EAV_Entities INNER JOIN
							 ToSIC_EAV_AttributeSets ON ToSIC_EAV_Entities.AttributeSetID = ToSIC_EAV_AttributeSets.AttributeSetID
	WHERE        (ToSIC_EAV_AttributeSets.AppID = @AppId)

	-- Delete Attributes
	DELETE FROM ToSIC_EAV_Attributes
	FROM            ToSIC_EAV_Attributes INNER JOIN
							 ToSIC_EAV_AttributesInSets ON ToSIC_EAV_Attributes.AttributeID = ToSIC_EAV_AttributesInSets.AttributeID INNER JOIN
							 ToSIC_EAV_AttributeSets ON ToSIC_EAV_AttributesInSets.AttributeSetID = ToSIC_EAV_AttributeSets.AttributeSetID
	WHERE        (ToSIC_EAV_AttributeSets.AppID = @AppID)


	-- Delete Attributes not in use anywhere (Attribute not in any Set, no Values/Related Entities)
	DELETE FROM ToSIC_EAV_Attributes
	FROM            ToSIC_EAV_Attributes LEFT OUTER JOIN
							 ToSIC_EAV_AttributesInSets ON ToSIC_EAV_Attributes.AttributeID = ToSIC_EAV_AttributesInSets.AttributeID LEFT OUTER JOIN
							 ToSIC_EAV_EntityRelationships ON ToSIC_EAV_Attributes.AttributeID = ToSIC_EAV_EntityRelationships.AttributeID LEFT OUTER JOIN
							 ToSIC_EAV_Values ON ToSIC_EAV_Attributes.AttributeID = ToSIC_EAV_Values.AttributeID
	WHERE        (ToSIC_EAV_Values.ValueID IS NULL) AND (ToSIC_EAV_EntityRelationships.AttributeID IS NULL) AND (ToSIC_EAV_AttributesInSets.AttributeID IS NULL)

	-- Delete Attribute-In-Sets
	DELETE FROM ToSIC_EAV_AttributesInSets
	FROM            ToSIC_EAV_AttributeSets INNER JOIN
							 ToSIC_EAV_AttributesInSets ON ToSIC_EAV_AttributeSets.AttributeSetID = ToSIC_EAV_AttributesInSets.AttributeSetID
	WHERE        (ToSIC_EAV_AttributeSets.AppID = @AppId)

	-- Delete AttributeSets
	DELETE FROM ToSIC_EAV_AttributeSets WHERE AppID = @AppId

	-- Delete App
	DELETE FROM ToSIC_EAV_Apps WHERE AppID = @AppId


END')

-- Add a new template-app assignment
ALTER TABLE dbo.ToSIC_SexyContent_Templates ADD	AppID int NULL

-- Assign all templates to an app
EXEC('UPDATE       ToSIC_SexyContent_Templates
SET                AppID = ToSIC_EAV_AttributeSets.AppID
FROM            ToSIC_SexyContent_Templates INNER JOIN
                         ToSIC_EAV_AttributeSets ON ToSIC_SexyContent_Templates.AttributeSetID = ToSIC_EAV_AttributeSets.AttributeSetID')

EXEC('ALTER TABLE dbo.ToSIC_SexyContent_Templates ALTER COLUMN AppID int NOT NULL')

-- Commit the transaction
COMMIT TRANSACTION SexyContentUpdate;
--ROLLBACK TRANSACTION SexyContentUpdate;