/* jQuery Backstretch * Version 1.2.4 * http://srobbin.com/jquery-plugins/jquery-backstretch/ * Add a dynamically-resized background image to the page * Copyright (c) 2011 Scott Robbin (srobbin.com) * Dual licensed under the MIT and GPL licenses. */
(function (a) { a.backstretch = function (l, b, j) { function m(c) { try { h = { left: 0, top: 0 }, e = f.width(), d = e / k, d >= f.height() ? (i = (d - f.height()) / 2, g.centeredY && a.extend(h, { top: "-" + i + "px" })) : (d = f.height(), e = d * k, i = (e - f.width()) / 2, g.centeredX && a.extend(h, { left: "-" + i + "px" })), a("#backstretch, #backstretch img").width(e).height(d).filter("img").css(h) } catch (b) { } typeof c == "function" && c() } var n = { centeredX: true, centeredY: true, speed: 0 }, c = a("#backstretch"), g = c.data("settings") || n; c.data("settings"); var f = "onorientationchange" in window ? a(document) : a(window), k, e, d, i, h; b && typeof b == "object" && a.extend(g, b); b && typeof b == "function" && (j = b); a(document).ready(function () { if (l) { var b; c.length == 0 ? c = a("<div />").attr("id", "backstretch").css({ left: 0, top: 0, position: "fixed", overflow: "hidden", zIndex: -999999, margin: 0, padding: 0, height: "100%", width: "100%" }) : c.find("img").addClass("deleteable"); b = a("<img />").css({ position: "absolute", display: "none", margin: 0, padding: 0, border: "none", zIndex: -999999 }).bind("load", function (b) { var d = a(this), e; d.css({ width: "auto", height: "auto" }); e = this.width || a(b.target).width(); b = this.height || a(b.target).height(); k = e / b; m(function () { d.fadeIn(g.speed, function () { c.find(".deleteable").remove(); typeof j == "function" && j() }) }) }).appendTo(c); a("body #backstretch").length == 0 && a("body").append(c); c.data("settings", g); b.attr("src", l); a(window).resize(m) } }); return this } })(jQuery);

/* Cufon * Copyright (c) 2009 Simo Kinnunen. * Licensed under the MIT license. * @version 1.09i */
var Cufon = (function () { var m = function () { return m.replace.apply(null, arguments) }; var x = m.DOM = { ready: (function () { var C = false, E = { loaded: 1, complete: 1 }; var B = [], D = function () { if (C) { return } C = true; for (var F; F = B.shift(); F()) { } }; if (document.addEventListener) { document.addEventListener("DOMContentLoaded", D, false); window.addEventListener("pageshow", D, false) } if (!window.opera && document.readyState) { (function () { E[document.readyState] ? D() : setTimeout(arguments.callee, 10) })() } if (document.readyState && document.createStyleSheet) { (function () { try { document.body.doScroll("left"); D() } catch (F) { setTimeout(arguments.callee, 1) } })() } q(window, "load", D); return function (F) { if (!arguments.length) { D() } else { C ? F() : B.push(F) } } })(), root: function () { return document.documentElement || document.body } }; var n = m.CSS = { Size: function (C, B) { this.value = parseFloat(C); this.unit = String(C).match(/[a-z%]*$/)[0] || "px"; this.convert = function (D) { return D / B * this.value }; this.convertFrom = function (D) { return D / this.value * B }; this.toString = function () { return this.value + this.unit } }, addClass: function (C, B) { var D = C.className; C.className = D + (D && " ") + B; return C }, color: j(function (C) { var B = {}; B.color = C.replace(/^rgba\((.*?),\s*([\d.]+)\)/, function (E, D, F) { B.opacity = parseFloat(F); return "rgb(" + D + ")" }); return B }), fontStretch: j(function (B) { if (typeof B == "number") { return B } if (/%$/.test(B)) { return parseFloat(B) / 100 } return { "ultra-condensed": 0.5, "extra-condensed": 0.625, condensed: 0.75, "semi-condensed": 0.875, "semi-expanded": 1.125, expanded: 1.25, "extra-expanded": 1.5, "ultra-expanded": 2}[B] || 1 }), getStyle: function (C) { var B = document.defaultView; if (B && B.getComputedStyle) { return new a(B.getComputedStyle(C, null)) } if (C.currentStyle) { return new a(C.currentStyle) } return new a(C.style) }, gradient: j(function (F) { var G = { id: F, type: F.match(/^-([a-z]+)-gradient\(/)[1], stops: [] }, C = F.substr(F.indexOf("(")).match(/([\d.]+=)?(#[a-f0-9]+|[a-z]+\(.*?\)|[a-z]+)/ig); for (var E = 0, B = C.length, D; E < B; ++E) { D = C[E].split("=", 2).reverse(); G.stops.push([D[1] || E / (B - 1), D[0]]) } return G }), quotedList: j(function (E) { var D = [], C = /\s*((["'])([\s\S]*?[^\\])\2|[^,]+)\s*/g, B; while (B = C.exec(E)) { D.push(B[3] || B[1]) } return D }), recognizesMedia: j(function (G) { var E = document.createElement("style"), D, C, B; E.type = "text/css"; E.media = G; try { E.appendChild(document.createTextNode("/**/")) } catch (F) { } C = g("head")[0]; C.insertBefore(E, C.firstChild); D = (E.sheet || E.styleSheet); B = D && !D.disabled; C.removeChild(E); return B }), removeClass: function (D, C) { var B = RegExp("(?:^|\\s+)" + C + "(?=\\s|$)", "g"); D.className = D.className.replace(B, ""); return D }, supports: function (D, C) { var B = document.createElement("span").style; if (B[D] === undefined) { return false } B[D] = C; return B[D] === C }, textAlign: function (E, D, B, C) { if (D.get("textAlign") == "right") { if (B > 0) { E = " " + E } } else { if (B < C - 1) { E += " " } } return E }, textShadow: j(function (F) { if (F == "none") { return null } var E = [], G = {}, B, C = 0; var D = /(#[a-f0-9]+|[a-z]+\(.*?\)|[a-z]+)|(-?[\d.]+[a-z%]*)|,/ig; while (B = D.exec(F)) { if (B[0] == ",") { E.push(G); G = {}; C = 0 } else { if (B[1]) { G.color = B[1] } else { G[["offX", "offY", "blur"][C++]] = B[2] } } } E.push(G); return E }), textTransform: (function () { var B = { uppercase: function (C) { return C.toUpperCase() }, lowercase: function (C) { return C.toLowerCase() }, capitalize: function (C) { return C.replace(/\b./g, function (D) { return D.toUpperCase() }) } }; return function (E, D) { var C = B[D.get("textTransform")]; return C ? C(E) : E } })(), whiteSpace: (function () { var D = { inline: 1, "inline-block": 1, "run-in": 1 }; var C = /^\s+/, B = /\s+$/; return function (H, F, G, E) { if (E) { if (E.nodeName.toLowerCase() == "br") { H = H.replace(C, "") } } if (D[F.get("display")]) { return H } if (!G.previousSibling) { H = H.replace(C, "") } if (!G.nextSibling) { H = H.replace(B, "") } return H } })() }; n.ready = (function () { var B = !n.recognizesMedia("all"), E = false; var D = [], H = function () { B = true; for (var K; K = D.shift(); K()) { } }; var I = g("link"), J = g("style"); function C(K) { return K.disabled || G(K.sheet, K.media || "screen") } function G(M, P) { if (!n.recognizesMedia(P || "all")) { return true } if (!M || M.disabled) { return false } try { var Q = M.cssRules, O; if (Q) { search: for (var L = 0, K = Q.length; O = Q[L], L < K; ++L) { switch (O.type) { case 2: break; case 3: if (!G(O.styleSheet, O.media.mediaText)) { return false } break; default: break search } } } } catch (N) { } return true } function F() { if (document.createStyleSheet) { return true } var L, K; for (K = 0; L = I[K]; ++K) { if (L.rel.toLowerCase() == "stylesheet" && !C(L)) { return false } } for (K = 0; L = J[K]; ++K) { if (!C(L)) { return false } } return true } x.ready(function () { if (!E) { E = n.getStyle(document.body).isUsable() } if (B || (E && F())) { H() } else { setTimeout(arguments.callee, 10) } }); return function (K) { if (B) { K() } else { D.push(K) } } })(); function s(D) { var C = this.face = D.face, B = { "\u0020": 1, "\u00a0": 1, "\u3000": 1 }; this.glyphs = D.glyphs; this.w = D.w; this.baseSize = parseInt(C["units-per-em"], 10); this.family = C["font-family"].toLowerCase(); this.weight = C["font-weight"]; this.style = C["font-style"] || "normal"; this.viewBox = (function () { var F = C.bbox.split(/\s+/); var E = { minX: parseInt(F[0], 10), minY: parseInt(F[1], 10), maxX: parseInt(F[2], 10), maxY: parseInt(F[3], 10) }; E.width = E.maxX - E.minX; E.height = E.maxY - E.minY; E.toString = function () { return [this.minX, this.minY, this.width, this.height].join(" ") }; return E })(); this.ascent = -parseInt(C.ascent, 10); this.descent = -parseInt(C.descent, 10); this.height = -this.ascent + this.descent; this.spacing = function (L, N, E) { var O = this.glyphs, M, K, G, P = [], F = 0, J = -1, I = -1, H; while (H = L[++J]) { M = O[H] || this.missingGlyph; if (!M) { continue } if (K) { F -= G = K[H] || 0; P[I] -= G } F += P[++I] = ~ ~(M.w || this.w) + N + (B[H] ? E : 0); K = M.k } P.total = F; return P } } function f() { var C = {}, B = { oblique: "italic", italic: "oblique" }; this.add = function (D) { (C[D.style] || (C[D.style] = {}))[D.weight] = D }; this.get = function (H, I) { var G = C[H] || C[B[H]] || C.normal || C.italic || C.oblique; if (!G) { return null } I = { normal: 400, bold: 700}[I] || parseInt(I, 10); if (G[I]) { return G[I] } var E = { 1: 1, 99: 0}[I % 100], K = [], F, D; if (E === undefined) { E = I > 400 } if (I == 500) { I = 400 } for (var J in G) { if (!k(G, J)) { continue } J = parseInt(J, 10); if (!F || J < F) { F = J } if (!D || J > D) { D = J } K.push(J) } if (I < F) { I = F } if (I > D) { I = D } K.sort(function (M, L) { return (E ? (M >= I && L >= I) ? M < L : M > L : (M <= I && L <= I) ? M > L : M < L) ? -1 : 1 }); return G[K[0]] } } function r() { function D(F, G) { if (F.contains) { return F.contains(G) } return F.compareDocumentPosition(G) & 16 } function B(G) { var F = G.relatedTarget; if (!F || D(this, F)) { return } C(this, G.type == "mouseover") } function E(F) { C(this, F.type == "mouseenter") } function C(F, G) { setTimeout(function () { var H = d.get(F).options; m.replace(F, G ? h(H, H.hover) : H, true) }, 10) } this.attach = function (F) { if (F.onmouseenter === undefined) { q(F, "mouseover", B); q(F, "mouseout", B) } else { q(F, "mouseenter", E); q(F, "mouseleave", E) } } } function u() { var C = [], D = {}; function B(H) { var E = [], G; for (var F = 0; G = H[F]; ++F) { E[F] = C[D[G]] } return E } this.add = function (F, E) { D[F] = C.push(E) - 1 }; this.repeat = function () { var E = arguments.length ? B(arguments) : C, F; for (var G = 0; F = E[G++]; ) { m.replace(F[0], F[1], true) } } } function A() { var D = {}, B = 0; function C(E) { return E.cufid || (E.cufid = ++B) } this.get = function (E) { var F = C(E); return D[F] || (D[F] = {}) } } function a(B) { var D = {}, C = {}; this.extend = function (E) { for (var F in E) { if (k(E, F)) { D[F] = E[F] } } return this }; this.get = function (E) { return D[E] != undefined ? D[E] : B[E] }; this.getSize = function (F, E) { return C[F] || (C[F] = new n.Size(this.get(F), E)) }; this.isUsable = function () { return !!B } } function q(C, B, D) { if (C.addEventListener) { C.addEventListener(B, D, false) } else { if (C.attachEvent) { C.attachEvent("on" + B, function () { return D.call(C, window.event) }) } } } function v(C, B) { var D = d.get(C); if (D.options) { return C } if (B.hover && B.hoverables[C.nodeName.toLowerCase()]) { b.attach(C) } D.options = B; return C } function j(B) { var C = {}; return function (D) { if (!k(C, D)) { C[D] = B.apply(null, arguments) } return C[D] } } function c(F, E) { var B = n.quotedList(E.get("fontFamily").toLowerCase()), D; for (var C = 0; D = B[C]; ++C) { if (i[D]) { return i[D].get(E.get("fontStyle"), E.get("fontWeight")) } } return null } function g(B) { return document.getElementsByTagName(B) } function k(C, B) { return C.hasOwnProperty(B) } function h() { var C = {}, B, F; for (var E = 0, D = arguments.length; B = arguments[E], E < D; ++E) { for (F in B) { if (k(B, F)) { C[F] = B[F] } } } return C } function o(E, M, C, N, F, D) { var K = document.createDocumentFragment(), H; if (M === "") { return K } var L = N.separate; var I = M.split(p[L]), B = (L == "words"); if (B && t) { if (/^\s/.test(M)) { I.unshift("") } if (/\s$/.test(M)) { I.push("") } } for (var J = 0, G = I.length; J < G; ++J) { H = z[N.engine](E, B ? n.textAlign(I[J], C, J, G) : I[J], C, N, F, D, J < G - 1); if (H) { K.appendChild(H) } } return K } function l(D, M) { var C = D.nodeName.toLowerCase(); if (M.ignore[C]) { return } var E = !M.textless[C]; var B = n.getStyle(v(D, M)).extend(M); var F = c(D, B), G, K, I, H, L, J; if (!F) { return } for (G = D.firstChild; G; G = I) { K = G.nodeType; I = G.nextSibling; if (E && K == 3) { if (H) { H.appendData(G.data); D.removeChild(G) } else { H = G } if (I) { continue } } if (H) { D.replaceChild(o(F, n.whiteSpace(H.data, B, H, J), B, M, G, D), H); H = null } if (K == 1) { if (G.firstChild) { if (G.nodeName.toLowerCase() == "cufon") { z[M.engine](F, null, B, M, G, D) } else { arguments.callee(G, M) } } J = G } } } var t = " ".split(/\s+/).length == 0; var d = new A(); var b = new r(); var y = new u(); var e = false; var z = {}, i = {}, w = { autoDetect: false, engine: null, forceHitArea: false, hover: false, hoverables: { a: true }, ignore: { applet: 1, canvas: 1, col: 1, colgroup: 1, head: 1, iframe: 1, map: 1, optgroup: 1, option: 1, script: 1, select: 1, style: 1, textarea: 1, title: 1, pre: 1 }, printable: true, selector: (window.Sizzle || (window.jQuery && function (B) { return jQuery(B) }) || (window.dojo && dojo.query) || (window.Ext && Ext.query) || (window.YAHOO && YAHOO.util && YAHOO.util.Selector && YAHOO.util.Selector.query) || (window.$$ && function (B) { return $$(B) }) || (window.$ && function (B) { return $(B) }) || (document.querySelectorAll && function (B) { return document.querySelectorAll(B) }) || g), separate: "words", textless: { dl: 1, html: 1, ol: 1, table: 1, tbody: 1, thead: 1, tfoot: 1, tr: 1, ul: 1 }, textShadow: "none" }; var p = { words: /\s/.test("\u00a0") ? /[^\S\u00a0]+/ : /\s+/, characters: "", none: /^/ }; m.now = function () { x.ready(); return m }; m.refresh = function () { y.repeat.apply(y, arguments); return m }; m.registerEngine = function (C, B) { if (!B) { return m } z[C] = B; return m.set("engine", C) }; m.registerFont = function (D) { if (!D) { return m } var B = new s(D), C = B.family; if (!i[C]) { i[C] = new f() } i[C].add(B); return m.set("fontFamily", '"' + C + '"') }; m.replace = function (D, C, B) { C = h(w, C); if (!C.engine) { return m } if (!e) { n.addClass(x.root(), "cufon-active cufon-loading"); n.ready(function () { n.addClass(n.removeClass(x.root(), "cufon-loading"), "cufon-ready") }); e = true } if (C.hover) { C.forceHitArea = true } if (C.autoDetect) { delete C.fontFamily } if (typeof C.textShadow == "string") { C.textShadow = n.textShadow(C.textShadow) } if (typeof C.color == "string" && /^-/.test(C.color)) { C.textGradient = n.gradient(C.color) } else { delete C.textGradient } if (!B) { y.add(D, arguments) } if (D.nodeType || typeof D == "string") { D = [D] } n.ready(function () { for (var F = 0, E = D.length; F < E; ++F) { var G = D[F]; if (typeof G == "string") { m.replace(C.selector(G), C, true) } else { l(G, C) } } }); return m }; m.set = function (B, C) { w[B] = C; return m }; return m })(); Cufon.registerEngine("vml", (function () { var e = document.namespaces; if (!e) { return } e.add("cvml", "urn:schemas-microsoft-com:vml"); e = null; var b = document.createElement("cvml:shape"); b.style.behavior = "url(#default#VML)"; if (!b.coordsize) { return } b = null; var h = (document.documentMode || 0) < 8; document.write(('<style type="text/css">cufoncanvas{text-indent:0;}@media screen{cvml\\:shape,cvml\\:rect,cvml\\:fill,cvml\\:shadow{behavior:url(#default#VML);display:block;antialias:true;position:absolute;}cufoncanvas{position:absolute;text-align:left;}cufon{display:inline-block;position:relative;vertical-align:' + (h ? "middle" : "text-bottom") + ";}cufon cufontext{position:absolute;left:-10000in;font-size:1px;}a cufon{cursor:pointer}}@media print{cufon cufoncanvas{display:none;}}</style>").replace(/;/g, "!important;")); function c(i, j) { return a(i, /(?:em|ex|%)$|^[a-z-]+$/i.test(j) ? "1em" : j) } function a(l, m) { if (m === "0") { return 0 } if (/px$/i.test(m)) { return parseFloat(m) } var k = l.style.left, j = l.runtimeStyle.left; l.runtimeStyle.left = l.currentStyle.left; l.style.left = m.replace("%", "em"); var i = l.style.pixelLeft; l.style.left = k; l.runtimeStyle.left = j; return i } function f(l, k, j, n) { var i = "computed" + n, m = k[i]; if (isNaN(m)) { m = k.get(n); k[i] = m = (m == "normal") ? 0 : ~ ~j.convertFrom(a(l, m)) } return m } var g = {}; function d(p) { var q = p.id; if (!g[q]) { var n = p.stops, o = document.createElement("cvml:fill"), i = []; o.type = "gradient"; o.angle = 180; o.focus = "0"; o.method = "sigma"; o.color = n[0][1]; for (var m = 1, l = n.length - 1; m < l; ++m) { i.push(n[m][0] * 100 + "% " + n[m][1]) } o.colors = i.join(","); o.color2 = n[l][1]; g[q] = o } return g[q] } return function (ac, G, Y, C, K, ad, W) { var n = (G === null); if (n) { G = K.alt } var I = ac.viewBox; var p = Y.computedFontSize || (Y.computedFontSize = new Cufon.CSS.Size(c(ad, Y.get("fontSize")) + "px", ac.baseSize)); var y, q; if (n) { y = K; q = K.firstChild } else { y = document.createElement("cufon"); y.className = "cufon cufon-vml"; y.alt = G; q = document.createElement("cufoncanvas"); y.appendChild(q); if (C.printable) { var Z = document.createElement("cufontext"); Z.appendChild(document.createTextNode(G)); y.appendChild(Z) } if (!W) { y.appendChild(document.createElement("cvml:shape")) } } var ai = y.style; var R = q.style; var l = p.convert(I.height), af = Math.ceil(l); var V = af / l; var P = V * Cufon.CSS.fontStretch(Y.get("fontStretch")); var U = I.minX, T = I.minY; R.height = af; R.top = Math.round(p.convert(T - ac.ascent)); R.left = Math.round(p.convert(U)); ai.height = p.convert(ac.height) + "px"; var F = Y.get("color"); var ag = Cufon.CSS.textTransform(G, Y).split(""); var L = ac.spacing(ag, f(ad, Y, p, "letterSpacing"), f(ad, Y, p, "wordSpacing")); if (!L.length) { return null } var k = L.total; var x = -U + k + (I.width - L[L.length - 1]); var ah = p.convert(x * P), X = Math.round(ah); var O = x + "," + I.height, m; var J = "r" + O + "ns"; var u = C.textGradient && d(C.textGradient); var o = ac.glyphs, S = 0; var H = C.textShadow; var ab = -1, aa = 0, w; while (w = ag[++ab]) { var D = o[ag[ab]] || ac.missingGlyph, v; if (!D) { continue } if (n) { v = q.childNodes[aa]; while (v.firstChild) { v.removeChild(v.firstChild) } } else { v = document.createElement("cvml:shape"); q.appendChild(v) } v.stroked = "f"; v.coordsize = O; v.coordorigin = m = (U - S) + "," + T; v.path = (D.d ? "m" + D.d + "xe" : "") + "m" + m + J; v.fillcolor = F; if (u) { v.appendChild(u.cloneNode(false)) } var ae = v.style; ae.width = X; ae.height = af; if (H) { var s = H[0], r = H[1]; var B = Cufon.CSS.color(s.color), z; var N = document.createElement("cvml:shadow"); N.on = "t"; N.color = B.color; N.offset = s.offX + "," + s.offY; if (r) { z = Cufon.CSS.color(r.color); N.type = "double"; N.color2 = z.color; N.offset2 = r.offX + "," + r.offY } N.opacity = B.opacity || (z && z.opacity) || 1; v.appendChild(N) } S += L[aa++] } var M = v.nextSibling, t, A; if (C.forceHitArea) { if (!M) { M = document.createElement("cvml:rect"); M.stroked = "f"; M.className = "cufon-vml-cover"; t = document.createElement("cvml:fill"); t.opacity = 0; M.appendChild(t); q.appendChild(M) } A = M.style; A.width = X; A.height = af } else { if (M) { q.removeChild(M) } } ai.width = Math.max(Math.ceil(p.convert(k * P)), 0); if (h) { var Q = Y.computedYAdjust; if (Q === undefined) { var E = Y.get("lineHeight"); if (E == "normal") { E = "1em" } else { if (!isNaN(E)) { E += "em" } } Y.computedYAdjust = Q = 0.5 * (a(ad, E) - parseFloat(ai.height)) } if (Q) { ai.marginTop = Math.ceil(Q) + "px"; ai.marginBottom = Q + "px" } } return y } })()); Cufon.registerEngine("canvas", (function () { var b = document.createElement("canvas"); if (!b || !b.getContext || !b.getContext.apply) { return } b = null; var a = Cufon.CSS.supports("display", "inline-block"); var e = !a && (document.compatMode == "BackCompat" || /frameset|transitional/i.test(document.doctype.publicId)); var f = document.createElement("style"); f.type = "text/css"; f.appendChild(document.createTextNode(("cufon{text-indent:0;}@media screen,projection{cufon{display:inline;display:inline-block;position:relative;vertical-align:middle;" + (e ? "" : "font-size:1px;line-height:1px;") + "}cufon cufontext{display:-moz-inline-box;display:inline-block;width:0;height:0;overflow:hidden;text-indent:-10000in;}" + (a ? "cufon canvas{position:relative;}" : "cufon canvas{position:absolute;}") + "}@media print{cufon{padding:0;}cufon canvas{display:none;}}").replace(/;/g, "!important;"))); document.getElementsByTagName("head")[0].appendChild(f); function d(p, h) { var n = 0, m = 0; var g = [], o = /([mrvxe])([^a-z]*)/g, k; generate: for (var j = 0; k = o.exec(p); ++j) { var l = k[2].split(","); switch (k[1]) { case "v": g[j] = { m: "bezierCurveTo", a: [n + ~ ~l[0], m + ~ ~l[1], n + ~ ~l[2], m + ~ ~l[3], n += ~ ~l[4], m += ~ ~l[5]] }; break; case "r": g[j] = { m: "lineTo", a: [n += ~ ~l[0], m += ~ ~l[1]] }; break; case "m": g[j] = { m: "moveTo", a: [n = ~ ~l[0], m = ~ ~l[1]] }; break; case "x": g[j] = { m: "closePath" }; break; case "e": break generate } h[g[j].m].apply(h, g[j].a) } return g } function c(m, k) { for (var j = 0, h = m.length; j < h; ++j) { var g = m[j]; k[g.m].apply(k, g.a) } } return function (V, w, P, t, C, W) { var k = (w === null); if (k) { w = C.getAttribute("alt") } var A = V.viewBox; var m = P.getSize("fontSize", V.baseSize); var B = 0, O = 0, N = 0, u = 0; var z = t.textShadow, L = []; if (z) { for (var U = z.length; U--; ) { var F = z[U]; var K = m.convertFrom(parseFloat(F.offX)); var I = m.convertFrom(parseFloat(F.offY)); L[U] = [K, I]; if (I < B) { B = I } if (K > O) { O = K } if (I > N) { N = I } if (K < u) { u = K } } } var Z = Cufon.CSS.textTransform(w, P).split(""); var E = V.spacing(Z, ~ ~m.convertFrom(parseFloat(P.get("letterSpacing")) || 0), ~ ~m.convertFrom(parseFloat(P.get("wordSpacing")) || 0)); if (!E.length) { return null } var h = E.total; O += A.width - E[E.length - 1]; u += A.minX; var s, n; if (k) { s = C; n = C.firstChild } else { s = document.createElement("cufon"); s.className = "cufon cufon-canvas"; s.setAttribute("alt", w); n = document.createElement("canvas"); s.appendChild(n); if (t.printable) { var S = document.createElement("cufontext"); S.appendChild(document.createTextNode(w)); s.appendChild(S) } } var aa = s.style; var H = n.style; var j = m.convert(A.height); var Y = Math.ceil(j); var M = Y / j; var G = M * Cufon.CSS.fontStretch(P.get("fontStretch")); var J = h * G; var Q = Math.ceil(m.convert(J + O - u)); var o = Math.ceil(m.convert(A.height - B + N)); n.width = Q; n.height = o; H.width = Q + "px"; H.height = o + "px"; B += A.minY; H.top = Math.round(m.convert(B - V.ascent)) + "px"; H.left = Math.round(m.convert(u)) + "px"; var r = Math.max(Math.ceil(m.convert(J)), 0) + "px"; if (a) { aa.width = r; aa.height = m.convert(V.height) + "px" } else { aa.paddingLeft = r; aa.paddingBottom = (m.convert(V.height) - 1) + "px" } var X = n.getContext("2d"), D = j / A.height; X.scale(D, D * M); X.translate(-u, -B); X.save(); function T() { var x = V.glyphs, ab, l = -1, g = -1, y; X.scale(G, 1); while (y = Z[++l]) { var ab = x[Z[l]] || V.missingGlyph; if (!ab) { continue } if (ab.d) { X.beginPath(); if (ab.code) { c(ab.code, X) } else { ab.code = d("m" + ab.d, X) } X.fill() } X.translate(E[++g], 0) } X.restore() } if (z) { for (var U = z.length; U--; ) { var F = z[U]; X.save(); X.fillStyle = F.color; X.translate.apply(X, L[U]); T() } } var q = t.textGradient; if (q) { var v = q.stops, p = X.createLinearGradient(0, A.minY, 0, A.maxY); for (var U = 0, R = v.length; U < R; ++U) { p.addColorStop.apply(p, v[U]) } X.fillStyle = p } else { X.fillStyle = P.get("color") } T(); return s } })());

/* Fancybox */
(function (a, b, c) { var d = c(a), e = c(b), f = c.fancybox = function () { f.open.apply(this, arguments) }, g = !1, h = null; c.extend(f, { version: "2.0.1", defaults: { padding: 15, margin: 20, width: 800, height: 600, minWidth: 200, minHeight: 200, maxWidth: 9999, maxHeight: 9999, autoSize: !0, fitToView: !0, aspectRatio: !1, topRatio: .5, fixed: !c.browser.msie || 6 < c.browser.version, scrolling: "auto", wrapCSS: "fancybox-default", arrows: !0, closeBtn: !0, closeClick: !0, mouseWheel: !0, autoPlay: !1, playSpeed: 3e3, loop: !0, ajax: {}, keys: { next: [13, 32, 34, 39, 40], prev: [8, 33, 37, 38], close: [27] }, index: 0, type: null, href: null, content: null, title: null, tpl: { wrap: '<div class="fancybox-wrap"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div>', image: '<img class="fancybox-image" src="{href}" alt="" />', iframe: '<iframe class="fancybox-iframe" name="fancybox-frame{rnd}" frameborder="0" hspace="0" ' + (c.browser.msie ? 'allowtransparency="true""' : "") + ' scrolling="{scrolling}" src="{href}"></iframe>', swf: '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="wmode" value="transparent" /><param name="allowfullscreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="movie" value="{href}" /><embed src="{href}" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="100%" height="100%" wmode="transparent"></embed></object>', error: '<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>', closeBtn: '<div title="Close" class="fancybox-item fancybox-close"></div>', next: '<a title="Next" class="fancybox-item fancybox-next"><span></span></a>', prev: '<a title="Previous" class="fancybox-item fancybox-prev"><span></span></a>' }, openEffect: "fade", openSpeed: 500, openEasing: "swing", openOpacity: !0, openMethod: "zoomIn", closeEffect: "fade", closeSpeed: 500, closeEasing: "swing", closeOpacity: !0, closeMethod: "zoomOut", nextEffect: "elastic", nextSpeed: 300, nextEasing: "swing", nextMethod: "changeIn", prevEffect: "elastic", prevSpeed: 300, prevEasing: "swing", prevMethod: "changeOut", helpers: { overlay: { speedIn: 0, speedOut: 0, opacity: .85, css: { cursor: "pointer", "background-color": "rgba(0, 0, 0, 0.85)" }, closeClick: !0 }, title: { type: "float"}} }, group: {}, opts: {}, coming: null, current: null, isOpen: !1, isOpened: !1, wrap: null, outer: null, inner: null, player: { timer: null, isActive: !1 }, ajaxLoad: null, imgPreload: null, transitions: {}, helpers: {}, open: function (a, b) { c.isArray(a) || (a = [a]); if (a.length) f.close(!0), f.opts = c.extend(!0, {}, f.defaults, b), f.group = a, f._start(f.opts.index || 0) }, cancel: function () { if (!(f.coming && !1 === f.trigger("onCancel")) && (f.coming = null, f.hideLoading(), f.ajaxLoad && f.ajaxLoad.abort(), f.ajaxLoad = null, f.imgPreload)) f.imgPreload.onload = f.imgPreload.onabort = f.imgPreload.onerror = null }, close: function (a) { f.cancel(); if (f.current && !1 !== f.trigger("beforeClose")) !f.isOpen || a && !0 === a[0] ? (c(".fancybox-wrap").stop().trigger("onReset").remove(), f._afterZoomOut()) : (f.isOpen = f.isOpened = !1, c(".fancybox-item").remove(), f.wrap.stop(!0).removeClass("fancybox-opened"), f.inner.css("overflow", "hidden"), f.transitions[f.current.closeMethod]()) }, play: function (a) { var b = function () { clearTimeout(f.player.timer) }, c = function () { b(); if (f.current && f.player.isActive) f.player.timer = setTimeout(f.next, f.current.playSpeed) }, d = function () { b(); e.unbind(".player"); f.player.isActive = !1; f.trigger("onPlayEnd") }; if (f.player.isActive || a && !1 === a[0]) d(); else if (f.current && (f.current.loop || f.current.index < f.group.length - 1)) f.player.isActive = !0, c(), e.bind({ "onCancel.player onComplete.player onUpdate.player": c, "onClose.player": d, "onStart.player": b }), f.trigger("onPlayStart") }, next: function () { f.current && f.jumpto(f.current.index + 1) }, prev: function () { f.current && f.jumpto(f.current.index - 1) }, jumpto: function (a) { f.current && (a = parseInt(a, 10), 1 < f.group.length && f.current.loop && (a >= f.group.length ? a = 0 : 0 > a && (a = f.group.length - 1)), "undefined" !== typeof f.group[a] && (f.cancel(), f._start(a))) }, reposition: function (a) { f.isOpen && f.wrap.css(f._getPosition(a)) }, update: function () { f.isOpen && (g || (h = setInterval(function () { if (g && (g = !1, clearTimeout(h), f.current)) { if (f.current.autoSize) f.inner.height("auto"), f.current.height = f.inner.height(); f._setDimension(); f.current.canGrow && f.inner.height("auto"); f.reposition(); f.trigger("onUpdate") } }, 100)), g = !0) }, toggle: function () { if (f.isOpen) f.current.fitToView = !f.current.fitToView, f.update() }, hideLoading: function () { c("#fancybox-loading").remove() }, showLoading: function () { f.hideLoading(); c('<div id="fancybox-loading"></div>').click(f.cancel).appendTo("body") }, getViewport: function () { return { x: d.scrollLeft(), y: d.scrollTop(), w: d.width(), h: d.height()} }, unbindEvents: function () { e.unbind(".fb"); d.unbind(".fb") }, bindEvents: function () { var a = f.current, b = a.keys; a && (d.bind("resize.fb, orientationchange.fb", f.update), b && e.bind("keydown.fb", function (a) { -1 < c.inArray(a.target.tagName.toLowerCase(), ["input", "textarea", "select", "button"]) || (-1 < c.inArray(a.keyCode, b.close) ? (f.close(), a.preventDefault()) : -1 < c.inArray(a.keyCode, b.next) ? (f.next(), a.preventDefault()) : -1 < c.inArray(a.keyCode, b.prev) && (f.prev(), a.preventDefault())) }), c.fn.mousewheel && a.mouseWheel && 1 < f.group.length && f.wrap.bind("mousewheel.fb", function (a, b) { if (0 === c(a.target).get(0).clientHeight || c(a.target).get(0).scrollHeight === c(a.target).get(0).clientHeight) a.preventDefault(), f[0 < b ? "prev" : "next"]() })) }, trigger: function (a) { var b, d = -1 < c.inArray(a, ["onCancel", "beforeLoad", "afterLoad"]) ? "coming" : "current"; if (f[d]) { c.isFunction(f[d][a]) && (b = f[d][a].apply(f[d], Array.prototype.slice.call(arguments, 1))); if (!1 === b) return !1; f[d].helpers && c.each(f[d].helpers, function (b, d) { if (d && "undefined" !== typeof f.helpers[b] && c.isFunction(f.helpers[b][a])) f.helpers[b][a](d) }); c.event.trigger(a + ".fb") } }, isImage: function (a) { return a && a.match(/\.(jpg|gif|png|bmp|jpeg)(.*)?$/i) }, isSWF: function (a) { return a && a.match(/\.(swf)(.*)?$/i) }, _start: function (a) { var b = f.group[a] || null, d, e, g; coming = c.extend(!0, {}, f.opts, c.isPlainObject(b) ? b : {}, { index: a, element: b }); if ("number" === typeof coming.margin) coming.margin = [coming.margin, coming.margin, coming.margin, coming.margin]; f.coming = coming; if (!1 === f.trigger("beforeLoad")) f.coming = null; else { if (coming.content) b = coming.content; if ("object" == typeof b && (b.nodeType || b instanceof c)) d = !0, coming.href = c(b).attr("href") || coming.href, coming.title = c(b).attr("title") || coming.title; e = coming.type; a = coming.href; b = coming.element; if (!e) { if (a) d && (g = c(b).data("fancybox-type"), !g && b.className && (g = (g = b.className.match(/fancybox\.(\w+)/)) ? g[1] : !1)), g ? e = g : f.isImage(a) ? e = "image" : f.isSWF(a) ? e = "swf" : a.match(/^#/) ? e = "inline" : coming.content = a; e || (e = d ? "inline" : "html"); coming.type = e } if (!coming.content) coming.content = "inline" === e && a ? c(a) : b; f.coming = coming; "image" === e ? f._loadImage() : "ajax" === e ? f._loadAjax() : !e || "inline" === e && !coming.content.length ? f._error() : f._afterLoad() } }, _error: function () { f.coming.type = "html"; f.coming.minHeight = 0; f.coming.autoSize = !0; f.coming.content = f.coming.tpl.error; f._afterLoad() }, _loadImage: function () { f.imgPreload = new Image; f.imgPreload.onload = function () { this.onload = this.onerror = null; f.coming.width = this.width; f.coming.height = this.height; f._afterLoad() }; f.imgPreload.onerror = function () { this.onload = this.onerror = null; f._error() }; f.imgPreload.src = f.coming.href; f.imgPreload.complete || f.showLoading() }, _loadAjax: function () { f.showLoading(); f.ajaxLoad = c.ajax(c.extend({}, f.coming.ajax, { url: f.coming.href, error: function (a, b, c) { "abort" !== b && 0 < a.status ? (f.coming.content = c, f._error()) : f.hideLoading() }, success: function (a, b) { if ("success" === b) f.coming.content = a, f._afterLoad() } })) }, _afterLoad: function () { f.hideLoading(); if (!f.coming || !1 === f.trigger("afterLoad", f.current)) f.coming = !1; else if (f.isOpened ? (c(".fancybox-item").remove(), f.wrap.stop(!0).removeClass("fancybox-opened"), f.transitions[f.current.prevMethod]()) : c(".fancybox-wrap").stop().trigger("onReset").remove(), f.isOpen = !1, f.current = f.coming, f.coming = !1, f.wrap = c(f.current.tpl.wrap).addClass(f.current.wrapCSS).appendTo("body"), f.outer = c(".fancybox-outer", f.wrap).css("padding", f.current.padding + "px"), f.inner = c(".fancybox-inner", f.wrap), f._setContent(), f.unbindEvents(), f.bindEvents(), f.trigger("beforeShow"), f._setDimension(), f.isOpened) f.transitions[f.current.nextMethod](); else f.transitions[f.current.openMethod]() }, _setContent: function () { var a, b, d = f.current, e = d.type; switch (e) { case "inline": case "ajax": case "html": "inline" === e ? (a = d.content.show().detach(), a.parent().hasClass("fancybox-inner") && a.parents(".fancybox-wrap").trigger("onReset").remove(), c(f.wrap).bind("onReset", function () { a.appendTo("body").hide() })) : a = d.content; if (d.autoSize) b = c('<div class="fancybox-tmp"></div>').appendTo(c("body")).append(a), d.width = b.outerWidth(), d.height = b.outerHeight(!0), a = b.children().detach(), b.remove(); break; case "image": a = d.tpl.image.replace("{href}", d.href); d.aspectRatio = !0; break; case "swf": a = d.tpl.swf.replace(/\{width\}/g, d.width).replace(/\{height\}/g, d.height).replace(/\{href\}/g, d.href); break; case "iframe": a = d.tpl.iframe.replace("{href}", d.href).replace("{scrolling}", d.scrolling).replace("{rnd}", (new Date).getTime()) } if (-1 < c.inArray(e, ["image", "swf", "iframe"])) d.autoSize = !1, d.scrolling = !1; f.current = d; f.inner.append(a) }, _setDimension: function () { var a = f.getViewport(), b = f.current.margin, d = 2 * f.current.padding, e = f.current.width + d, g = f.current.height + d, h = f.current.width / f.current.height, i = f.current.maxWidth, j = f.current.maxHeight, k = f.current.minWidth, l = f.current.minHeight; a.w -= b[1] + b[3]; a.h -= b[0] + b[2]; -1 < e.toString().indexOf("%") && (e = a.w * parseFloat(e) / 100); -1 < g.toString().indexOf("%") && (g = a.h * parseFloat(g) / 100); f.current.fitToView && (i = Math.min(a.w, i), j = Math.min(a.h, j)); i = Math.max(k, i); j = Math.max(l, j); f.current.aspectRatio ? (e > i && (e = i, g = (e - d) / h + d), g > j && (g = j, e = (g - d) * h + d), e < k && (e = k, g = (e - d) / h + d), g < l && (g = l, e = (g - d) * h + d)) : (e = Math.max(k, Math.min(e, i)), g = Math.max(l, Math.min(g, j))); e = Math.round(e); g = Math.round(g); c(f.wrap.add(f.outer).add(f.inner)).width("auto").height("auto"); f.inner.width(e - d).height(g - d); f.wrap.width(e); b = f.wrap.height(); if (e > i || b > j) for (; (e > i || b > j) && e > k && b > l; ) g -= 10, f.current.aspectRatio ? (e = Math.round((g - d) * h + d), e < k && (e = k, g = (e - d) / h + d)) : e -= 10, f.inner.width(e - d).height(g - d), f.wrap.width(e), b = f.wrap.height(); f.current.dim = { width: e, height: b }; f.current.canGrow = f.current.autoSize && g > l && g < j; f.current.canShrink = !1; f.current.canExpand = !1; if (e - d < f.current.width || g - d < f.current.height) f.current.canExpand = !0; else if ((e > a.w || b > a.h) && e > k && g > l) f.current.canShrink = !0 }, _getPosition: function (a) { var b = f.getViewport(), c = f.current.margin, d = f.wrap.width() + c[1] + c[3], e = f.wrap.height() + c[0] + c[2], g = { position: "absolute", top: c[0] + b.y, left: c[3] + b.x }; if (f.current.fixed && (!a || !1 === a[0]) && e <= b.h && d <= b.w) g = { position: "fixed", top: c[0], left: c[3] }; g.top = Math.ceil(Math.max(g.top, g.top + (b.h - e) * f.current.topRatio)) + "px"; g.left = Math.ceil(Math.max(g.left, g.left + .5 * (b.w - d))) + "px"; return g }, _afterZoomIn: function () { var a = f.current; f.isOpen = f.isOpened = !0; f.wrap.addClass("fancybox-opened").css("overflow", "visible"); f.update(); f.inner.css("overflow", "auto" === a.scrolling ? "auto" : "yes" === a.scrolling ? "scroll" : "hidden"); a.closeClick && f.inner.bind("click.fb", f.close); a.closeBtn && c(f.current.tpl.closeBtn).appendTo(f.wrap).bind("click.fb", f.close); a.arrows && 1 < f.group.length && ((a.loop || 0 < a.index) && c(a.tpl.prev).appendTo(f.wrap).bind("click.fb", f.prev), (a.loop || a.index < f.group.length - 1) && c(a.tpl.next).appendTo(f.wrap).bind("click.fb", f.next)); f.trigger("afterShow"); if (f.opts.autoPlay && !f.player.isActive) f.opts.autoPlay = !1, f.play() }, _afterZoomOut: function () { f.unbindEvents(); f.trigger("afterClose"); f.wrap.trigger("onReset").remove(); c.extend(f, { group: {}, opts: {}, current: null, isOpened: !1, isOpen: !1, wrap: null, outer: null, inner: null }) } }); f.transitions = { getOrigPosition: function () { var a = f.current.element, b = {}, d = 50, e = 50, g; a && a.nodeName && c(a).is(":visible") ? (g = c(a).find("img:first"), g.length ? (b = g.offset(), d = g.outerWidth(), e = g.outerHeight()) : b = c(a).offset()) : (a = f.getViewport(), b.top = a.y + .5 * (a.h - e), b.left = a.x + .5 * (a.w - d)); return b = { top: Math.ceil(b.top) + "px", left: Math.ceil(b.left) + "px", width: Math.ceil(d) + "px", height: Math.ceil(e) + "px"} }, step: function (a, b) { var c, d, e; if ("width" === b.prop || "height" === b.prop) d = e = Math.ceil(a - 2 * f.current.padding), "height" === b.prop && (c = (a - b.start) / (b.end - b.start), b.start > b.end && (c = 1 - c), d -= f.innerSpace * c, e -= f.outerSpace * c), f.inner[b.prop](d), f.outer[b.prop](e) }, zoomIn: function () { var a, b; a = f.current.dim; b = a.height - 2 * f.current.padding; f.innerSpace = b - f.inner.height(); f.outerSpace = b - f.outer.height(); if ("elastic" === f.current.openEffect) { b = c.extend({}, a, f._getPosition(!0)); delete b.position; a = this.getOrigPosition(); if (f.current.openOpacity) a.opacity = 0, b.opacity = 1; f.wrap.css(a).animate(b, { duration: f.current.openSpeed, easing: f.current.openEasing, step: this.step, complete: f._afterZoomIn }) } else f.wrap.css(c.extend({}, f.current.dim, f._getPosition())), "fade" === f.current.openEffect ? f.wrap.hide().fadeIn(f.current.openSpeed, f._afterZoomIn) : f._afterZoomIn() }, zoomOut: function () { var a; a = f.wrap.height() - 2 * f.current.padding; if ("elastic" === f.current.closeEffect) { "fixed" === f.wrap.css("position") && f.wrap.css(f._getPosition(!0)); f.innerSpace = a - f.inner.height(); f.outerSpace = a - f.outer.height(); a = this.getOrigPosition(); if (f.current.closeOpacity) a.opacity = 0; f.wrap.animate(a, { duration: f.current.closeSpeed, easing: f.current.closeEasing, step: this.step, complete: f._afterZoomOut }) } else f.wrap.fadeOut("fade" === f.current.closeEffect ? f.current.Speed : 0, f._afterZoomOut) }, changeIn: function () { var a; "elastic" === f.current.nextEffect ? (a = f._getPosition(!0), a.opacity = 0, a.top = parseInt(a.top, 10) - 200 + "px", f.wrap.css(a).animate({ opacity: 1, top: "+=200px" }, { duration: f.current.nextSpeed, complete: f._afterZoomIn })) : (f.wrap.css(f._getPosition()), "fade" === f.current.nextEffect ? f.wrap.hide().fadeIn(f.current.nextSpeed, f._afterZoomIn) : f._afterZoomIn()) }, changeOut: function () { function a() { c(this).trigger("onReset").remove() } f.wrap.removeClass("fancybox-opened"); "elastic" === f.current.prevEffect ? f.wrap.animate({ opacity: 0, top: "+=200px" }, { duration: f.current.prevSpeed, complete: a }) : f.wrap.fadeOut("fade" === f.current.prevEffect ? f.current.prevSpeed : 0, a) } }; f.helpers.overlay = { overlay: null, update: function () { var a, f; this.overlay.width(0).height(0); c.browser.msie ? (a = Math.max(b.documentElement.scrollWidth, b.body.scrollWidth), f = Math.max(b.documentElement.offsetWidth, b.body.offsetWidth), a = a < f ? d.width() : a) : a = e.width(); this.overlay.width(a).height(e.height()) }, beforeShow: function (a) { if (!this.overlay) this.overlay = c('<div id="fancybox-overlay"></div>').css(a.css || { background: "black" }).appendTo("body"), a.closeClick && this.overlay.bind("click.fb", f.close), d.bind("resize.fb", c.proxy(this.update, this)), this.update(), this.overlay.fadeTo(a.speedIn || "fast", a.opacity || 1) }, onUpdate: function () { this.update() }, afterClose: function (a) { this.overlay && this.overlay.fadeOut(a.speedOut || "fast", function () { c(this).remove() }); this.overlay = null } }; f.helpers.title = { beforeShow: function (a) { var b; if (b = f.current.title || f.current.element.title || "") b = c('<div class="fancybox-title fancybox-title-' + a.type + '-wrap">' + b + "</div>").appendTo("body"), "float" === a.type && (b.width(b.width()), b.wrapInner('<span class="child"></span>'), f.current.margin[2] += Math.abs(parseInt(b.css("margin-bottom"), 10))), b.appendTo("over" === a.type ? f.inner : "outside" === a.type ? f.wrap : f.outer) } }; c.fn.fancybox = function (a) { function b(a) { var b = []; a.preventDefault(); this.rel && "" !== this.rel && "nofollow" !== this.rel && (b = g.length ? c(g).filter('[rel="' + this.rel + '"]') : c('[rel="' + this.rel + '"]')); b.length ? (d.index = b.index(this), f(b.get(), d)) : f(this, d); return !1 } var d = a || {}, g = this.selector || ""; g ? e.undelegate(g, "click.fb-start").delegate(g, "click.fb-start", b) : c(this).unbind("click.fb-start").bind("click.fb-start", b) } })(window, document, jQuery);

/* Tiny Carousel */
(function(a){function b(b,c){function v(){if(c.interval&&!o){clearTimeout(n);n=setTimeout(function(){m=m+1==l?-1:m;p=m+1==l?false:m==0?true:p;d.move(p?1:-1)},c.intervaltime)}}function u(b){if(a(this).hasClass("pagenum")){d.move(parseInt(this.rel),true)}return false}function t(){if(c.controls){i.toggleClass("disable",!(m>0));h.toggleClass("disable",!(m+1<l))}if(c.pager){var b=a(".pagenum",j);b.removeClass("active");a(b[m]).addClass("active")}}function s(){if(c.controls&&i.length>0&&h.length>0){i.click(function(){d.move(-1);return false});h.click(function(){d.move(1);return false})}if(c.interval){b.hover(d.stop,d.start)}if(c.pager&&j.length>0){a("a",j).click(u)}}function r(){k=q?a(g[0]).outerWidth(true):a(g[0]).outerHeight(true);var b=Math.ceil((q?e.outerWidth():e.outerHeight())/(k*c.display)-1);l=Math.max(1,Math.ceil(g.length/c.display)-b);m=Math.min(l,Math.max(1,c.start))-2;f.css(q?"width":"height",k*g.length);d.move(1);s()}var d=this;var e=a(".viewport:first",b);var f=a(".overview:first",b);var g=f.children();var h=a(".next:first",b);var i=a(".prev:first",b);var j=a(".pager:first",b);var k,l,m,n,o,p=true,q=c.axis=="x";this.stop=function(){clearTimeout(n);o=true};this.start=function(){o=false;v()};this.move=function(a,b){m=b?a:m+=a;if(m>-1&&m<l){var d={};d[q?"left":"top"]=-(m*k*c.display);f.animate(d,{queue:false,duration:c.animation?c.duration:0,complete:function(){if(typeof c.callback=="function")c.callback.call(this,g[m],m)}});t();v()}};return r()}a.tiny=a.tiny||{};a.tiny.carousel={options:{start:1,display:1,axis:"x",controls:true,pager:false,interval:false,intervaltime:3e3,rewind:false,animation:true,duration:1e3,callback:null}};a.fn.tinycarousel=function(c){var c=a.extend({},a.tiny.carousel.options,c);this.each(function(){a(this).data("tcl",new b(a(this),c))});return this};a.fn.tinycarousel_start=function(){a(this).data("tcl").start()};a.fn.tinycarousel_stop=function(){a(this).data("tcl").stop()};a.fn.tinycarousel_move=function(b){a(this).data("tcl").move(b-1,true)};})(jQuery);

